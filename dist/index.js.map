{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/environment/getBaseURLForAPI.ts", "../src/utils/environment/isStaging.ts", "../src/mct/shared/types/api/base.ts", "../src/mct/shared/types/api/CreateLeadAndBooking.ts", "../src/mct/shared/types/api/Lenders.ts", "../src/mct/shared/types/api/LogUserEvents.ts", "../src/mct/shared/types/api/MortgageAppointmentSlots.ts", "../src/mct/shared/types/api/Products.ts", "../src/mct/shared/types/api/index.ts", "../src/mct/shared/types/common.ts", "../src/mct/shared/types/config.ts", "../src/mct/shared/types/dom.ts", "../src/mct/shared/types/events.ts", "../src/mct/shared/types/stages.ts", "../src/mct/shared/types/state.ts", "../src/mct/shared/types/index.ts", "../src/mct/shared/config/api.ts", "../src/mct/shared/config/storage.ts", "../src/mct/shared/config/dom.ts", "../src/mct/shared/config/components.ts", "../src/mct/shared/config/profiles.ts", "../src/mct/shared/config/environment.ts", "../src/mct/shared/utils/common/getEnumKey.ts", "../src/mct/shared/config/filters.ts", "../src/mct/shared/config/events.ts", "../src/mct/shared/config/index.ts", "../src/utils/environment/getCurrentBreakpoint.ts", "../src/mct/stages/appointment/Config.ts", "../src/index.ts", "../src/bestbuys/index.ts", "../src/utils/dom/queryelements.ts", "../src/bestbuys/handleMini.ts", "../src/constants.ts", "../src/utils/formatting/numberToCurrency.ts", "../src/utils/dom/queryElement.ts", "../src/utils/storage/setSearchParameter.ts", "../src/bestbuys/handleTable.ts", "../node_modules/.pnpm/@finsweet+ts-utils@0.40.0/node_modules/@finsweet/ts-utils/dist/helpers/index.js", "../node_modules/.pnpm/@finsweet+ts-utils@0.40.0/node_modules/@finsweet/ts-utils/dist/helpers/simulateEvent.js", "../src/components/dialogs.ts", "../src/utils/input/index.ts", "../src/utils/input/checkInputValidity.ts", "../src/utils/input/clearInput.ts", "../src/utils/input/formatInput.ts", "../src/utils/dom/index.ts", "../src/utils/dom/createElement.ts", "../src/utils/dom/getWrapper.ts", "../src/utils/dom/handleConditionalVisibility.ts", "../src/utils/input/getInputValue.ts", "../src/utils/input/handleEnterInInputs.ts", "../src/utils/input/setError.ts", "../src/utils/input/syncSlider.ts", "../src/utils/environment/index.ts", "../src/utils/formatting/index.ts", "../src/utils/formatting/filterAllowed.ts", "../src/utils/formatting/formatNumber.ts", "../src/utils/formatting/getOrdinalDate.ts", "../src/utils/storage/index.ts", "../src/utils/storage/getFromCookie.ts", "../src/utils/storage/setToCookie.ts", "../src/calculators/index.ts", "../src/calculators/handleCalculator.ts", "../src/calculators/calculatorConfig.ts", "../src/calculators/handleInputs.ts", "../src/calculators/handleInputRepeat.ts", "../src/calculators/handleOutputs.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/auto/auto.js", "../node_modules/.pnpm/@kurkle+color@0.3.2/node_modules/@kurkle/color/dist/color.esm.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.core.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.math.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.collection.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.extras.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.easing.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.color.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.animations.defaults.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.layouts.defaults.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.intl.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.ticks.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.scale.defaults.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.defaults.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.canvas.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.options.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.config.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.curve.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.dom.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.rtl.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/helpers/helpers.segment.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.animator.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.animation.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.animations.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.datasetController.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.bar.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.bubble.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.doughnut.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.line.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.polarArea.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.pie.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.radar.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/controllers/controller.scatter.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.adapters.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.interaction.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.layouts.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/platform/platform.base.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/platform/platform.basic.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/platform/platform.dom.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/platform/index.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.element.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.scale.autoskip.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.scale.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.typedRegistry.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.registry.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.plugins.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.config.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/core/core.controller.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/elements/element.arc.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/elements/element.line.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/elements/element.point.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/elements/element.bar.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.colors.ts", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.decimation.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.filler/index.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.legend.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.title.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.subtitle.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/plugins/plugin.tooltip.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.category.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.linearbase.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.linear.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.logarithmic.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.radialLinear.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.time.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/scales/scale.timeseries.js", "../node_modules/.pnpm/chart.js@4.4.2/node_modules/chart.js/src/index.ts", "../src/components/index.ts", "../src/components/details.ts", "../src/costofdoingnothing/index.ts", "../src/costofdoingnothing/handleCostOfDoingNothing.ts", "../src/costofdoingnothing/handleCODNOutputs.ts", "../src/mct/index.ts", "../src/mct/shared/MCTManager.ts", "../src/mct/stages/form/index.ts", "../src/mct/stages/form/Manager_Main.ts", "../src/mct/stages/form/Groups.ts", "../src/mct/stages/form/Questions.ts", "../src/mct/shared/api/index.ts", "../src/mct/shared/api/client/index.ts", "../src/mct/shared/api/client/APIClient.ts", "../src/mct/shared/api/client/ErrorHandler.ts", "../src/mct/shared/utils/common/index.ts", "../src/mct/shared/utils/common/fetchData.ts", "../src/mct/shared/utils/common/generateProductsAPIInput.ts", "../src/mct/shared/utils/common/generateSummaryLines.ts", "../src/mct/shared/utils/common/getEnumValue.ts", "../src/mct/shared/utils/common/getInputValueAsLandC.ts", "../src/mct/shared/utils/common/getValueAsLandC.ts", "../src/mct/shared/utils/common/logError.ts", "../src/mct/shared/api/methods/index.ts", "../src/mct/shared/api/methods/CreateLeadAndBookingAPI.ts", "../src/mct/shared/api/methods/LCIDAPI.ts", "../src/mct/shared/api/methods/LendersAPI.ts", "../src/mct/shared/api/methods/LogUserEventsAPI.ts", "../src/mct/shared/api/methods/MortgageAppointmentSlotsAPI.ts", "../src/mct/shared/api/methods/ProductsAPI.ts", "../src/mct/shared/components/index.ts", "../src/mct/shared/components/base/index.ts", "../src/mct/shared/components/base/BaseComponent.ts", "../src/mct/shared/components/events/globalEventBus.ts", "../src/mct/shared/components/events/EventBus.ts", "../src/mct/shared/components/base/InteractiveComponent.ts", "../src/mct/shared/components/base/StatefulComponent.ts", "../src/mct/shared/components/base/StatefulInputGroup.ts", "../src/mct/shared/components/base/StatefulManager.ts", "../src/mct/shared/components/base/InputGroupBase.ts", "../src/mct/shared/components/events/index.ts", "../src/mct/shared/components/tests/index.ts", "../src/mct/shared/components/tests/test-simple.ts", "../src/mct/shared/components/tests/test-components.ts", "../src/utils/analytics/trackGAEvent.ts", "../src/mct/stages/form/Manager_Base.ts", "../src/mct/shared/utils/dom/visibility/removeInitialStyles.ts", "../src/mct/stages/results/index.ts", "../src/mct/stages/results/Manager.ts", "../src/mct/stages/results/Result.ts", "../src/mct/stages/results/FilterGroup.ts", "../src/mct/stages/appointment/index.ts", "../src/mct/stages/appointment/Manager.ts", "../src/mct/stages/appointment/Dates.ts", "../src/mct/stages/appointment/Slider.ts", "../node_modules/.pnpm/@splidejs+splide@4.1.4/node_modules/@splidejs/splide/dist/js/splide.esm.js", "../src/mct/stages/appointment/Times.ts", "../src/mct/stages/appointment/Form.ts", "../src/mct/shared/state/index.ts", "../src/mct/shared/state/CalculationManager.ts", "../src/mct/shared/state/persistence.ts", "../src/mct/shared/state/StateManager.ts", "../src/mct/shared/state/StorageManager.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import type { Endpoints, Environment } from 'src/types';\n\nexport const getBaseURLForAPI = (): string => {\n  const ENDPOINTS: Endpoints = {\n    prod: 'https://www.landc.co.uk/api/',\n    test: 'https://test.landc.co.uk/api/',\n  };\n\n  const ENVIRONMENTS: Environment[] = [\n    { host: 'www.landc.co.uk', api: ENDPOINTS.prod },\n    { host: 'test.landc.co.uk', api: ENDPOINTS.test },\n    { host: 'dev.landc.co.uk', api: ENDPOINTS.test },\n  ];\n\n  // If window is not defined (Node.js/SSR), default to test\n  if (typeof window === 'undefined') return ENDPOINTS.test;\n\n  const { hostname, search } = window.location;\n  const params = new URLSearchParams(search);\n  const apiParam = params.get('api');\n\n  if (apiParam) return ENDPOINTS[apiParam as keyof Endpoints] || ENDPOINTS.prod;\n  return ENVIRONMENTS.find((env) => env.host === hostname)?.api || ENDPOINTS.prod;\n};\n", "export const isStaging = !window.location.host.includes('www.landc.co.uk');\n", "export interface BaseResponse<T = Record<string, unknown>> {\n  body: string;\n  result: T;\n  url: string;\n}\n\nexport type LCID = string;\nexport type ICID = string | 'default';\nexport type LenderName = string;\nexport type LenderNames = LenderName[];\n\n// @todo\nexport enum EndOfTermENUM {\n  WithinThreeMonths = '1',\n  ThreeToSixMonths = '2',\n  SixToTwelveMonths = '3',\n  TwelvePlusMonths = '4',\n}\n\nexport enum RemoChangeENUM {\n  NoChange = 1,\n  BorrowMore = 2,\n  BorrowLess = 3,\n  TermAndOrRepaymentType = 4,\n}\n", "import { BuyerTypeENUM } from '$mct/types';\nimport { type LCID, type ICID, type LenderName } from './base';\n\nexport type PartnerId = number | 'default';\nexport type Source = string;\nexport type SourceID = number;\n\nexport enum FirstTimeBuyerENUM {\n  Yes = 'Y',\n  No = 'N',\n}\n\nexport enum RepaymentTypeENUM {\n  Repayment = 'Repayment',\n  InterestOnly = 'Interest Only',\n  Both = 'Both',\n}\n\nexport enum ResiBtlENUM {\n  Residential = 'R',\n  Btl = 'B',\n}\n\nexport enum OfferAcceptedENUM {\n  Yes = 'Y',\n  No = 'N',\n}\n\nexport enum ReadinessToBuyENUM {\n  Researching = 'R',\n  Viewing = 'V',\n  MadeAnOffer = 'M',\n  OfferAccepted = 'A',\n}\n\nexport enum PurchRemoENUM {\n  Purchase = 'P',\n  Remortgage = 'R',\n}\n\nexport enum CreditImpairedENUM {\n  Yes = 'Y',\n  No = 'N',\n}\n\nexport interface EnquiryLead {\n  lcid: LCID;\n  icid: ICID;\n  PartnerId?: PartnerId;\n  FirstName: string;\n  Surname: string;\n  Email: string;\n  Mobile: string;\n  PurchasePrice: number;\n  RepaymentType: RepaymentTypeENUM;\n  OfferAccepted?: OfferAcceptedENUM;\n  MortgageLength: number;\n  MaximumBudget?: number;\n  BuyerType?: BuyerTypeENUM;\n  ResiBtl: ResiBtlENUM;\n  Lender?: LenderName;\n  ReadinessToBuy?: ReadinessToBuyENUM;\n  PurchRemo?: PurchRemoENUM;\n  PropertyValue: number;\n  DepositAmount: number;\n  LTV?: number;\n  Source?: Source;\n  SourceId?: SourceID;\n  CreditImpaired?: CreditImpairedENUM;\n  IsEmailMarketingPermitted: boolean;\n  IsPhoneMarketingPermitted: boolean;\n  IsSMSMarketingPermitted: boolean;\n  IsPostMarketingPermitted: boolean;\n  IsSocialMessageMarketingPermitted: boolean;\n}\n\nexport interface Booking {\n  source: 'SYSTEM';\n  bookingDate: string; // ISO 8601 format e.g. \"2025-05-12T15:15:58.163Z\"\n  bookingStart: string;\n  bookingEnd: string;\n  bookingProfile: 'DEFAULT';\n  bookingProfileId: number;\n}\n\nexport interface CreateLeadAndBookingRequest {\n  enquiry: EnquiryLead;\n  booking: Booking;\n}\n\nexport interface CreateLeadAndBookingResponse {\n  url: string;\n  body: string;\n  result: string;\n  error?: string;\n}\n", "export interface LenderDetails {\n  MasterLenderId: number;\n  ResidentialLenderId: number;\n  BTLLenderId: number;\n  LenderName: string;\n  LenderImageURL: string | null;\n  LenderKey: string | null;\n}\n\nexport interface LenderListResult {\n  lenders: LenderDetails[];\n}\n\nexport interface LenderListResponse {\n  result: LenderListResult;\n}\n", "import type { InputKey, InputValue } from '../state';\nimport type { ICID, LCID } from './base';\n\nexport interface LogUserEventDefault {\n  LCID: LCID;\n  ICID: ICID;\n  FormValues: Record<InputKey, InputValue>;\n  CreatedBy: 'MCT';\n}\n\nexport interface LogUserEventCustom {\n  EventName: string;\n  EventValue: string;\n  // FieldName: AnswerKey;\n  // FieldValue: AnswerValue;\n}\n\nexport interface LogUserEventRequest extends LogUserEventDefault, LogUserEventCustom {}\n\nexport interface LogUserEventResponse {\n  url: string;\n  body: string;\n  result: {\n    status: string;\n    message: string;\n  };\n  error?: {\n    type: string;\n    title: string;\n    detail: string;\n    instance: string;\n    errors?: Record<string, string[]>;\n  };\n}\n", "// Appointment slot types\nexport interface AppointmentSlot {\n  startTime: string;\n  endTime: string;\n  capacity: number;\n  enabled: boolean;\n}\n\nexport interface AppointmentDay {\n  date: string;\n  slots: AppointmentSlot[];\n}\n\nexport interface MortgageAppointmentSlotsResponse {\n  urlcalled: string;\n  result: AppointmentDay[];\n  paramvalues: string;\n}\n\nexport interface AppointmentSelection {\n  date: string;\n  time: string;\n}\n", "import type { BaseResponse, LenderNames } from './base';\n\n// Options for product requests\nexport interface ProductsOptions {\n  numberOfResults?: number;\n  sortColumn?: SortColumnENUM;\n  HelpToBuy?: boolean;\n  Offset?: boolean;\n  EarlyRepaymentCharge?: boolean;\n  NewBuild?: boolean;\n  SapValue?: number;\n}\n\nexport enum ProductsRequestFeaturesENUM {\n  HelpToBuy = 'HelpToBuy',\n  Offset = 'Offset',\n  EarlyRepaymentCharge = 'EarlyRepaymentCharge',\n  NewBuild = 'NewBuild',\n}\n\n// Features for product requests\nexport interface ProductsRequestFeatures {\n  [ProductsRequestFeaturesENUM.HelpToBuy]?: boolean;\n  [ProductsRequestFeaturesENUM.Offset]?: boolean;\n  [ProductsRequestFeaturesENUM.EarlyRepaymentCharge]?: boolean;\n  [ProductsRequestFeaturesENUM.NewBuild]?: boolean;\n}\n\nexport enum PropertyTypeENUM {\n  House = 1,\n  Flat = 2,\n}\n\nexport enum MortgageTypeENUM {\n  Residential = 1,\n  Btl = 2,\n}\n\nexport enum SchemePurposeENUM {\n  Purchase = 1,\n  Remortgage = 2,\n}\n\nexport enum SchemePeriodsENUM {\n  TwoYears = 1,\n  ThreeYears = 2,\n  FiveYears = 3,\n  FivePlusYears = 4,\n}\n\nexport enum SchemeTypesENUM {\n  Fixed = 1,\n  Variable = 2,\n}\n\nexport enum SortColumnENUM {\n  Rate = 1,\n  AverageAnnualCost = 2,\n  MaxLTV = 3,\n  MonthlyPayment = 4,\n  Lender = 5,\n  Fees = 6,\n}\n\nexport enum SapValueENUM {\n  Yes = 81,\n  No = 1,\n}\n\nexport enum ProductsRequestENUM {\n  PropertyValue = 'PropertyValue',\n  RepaymentValue = 'RepaymentValue',\n  PropertyType = 'PropertyType',\n  MortgageType = 'MortgageType',\n  InterestOnlyValue = 'InterestOnlyValue',\n  TermYears = 'TermYears',\n  SchemePurpose = 'SchemePurpose',\n  SchemePeriods = 'SchemePeriods',\n  SchemeTypes = 'SchemeTypes',\n  NumberOfResults = 'NumberOfResults',\n  Features = 'Features',\n  SortColumn = 'SortColumn',\n  UseStaticApr = 'UseStaticApr',\n  SapValue = 'SapValue',\n  Lenders = 'Lenders',\n  IncludeRetention = 'IncludeRetention',\n  RetentionLenderId = 'RetentionLenderId',\n}\n\n// Product request structure\nexport interface ProductsRequest {\n  [ProductsRequestENUM.PropertyValue]: number;\n  [ProductsRequestENUM.RepaymentValue]: number;\n  [ProductsRequestENUM.PropertyType]: PropertyTypeENUM;\n  [ProductsRequestENUM.MortgageType]: MortgageTypeENUM;\n  [ProductsRequestENUM.InterestOnlyValue]?: number;\n  [ProductsRequestENUM.TermYears]: number;\n  [ProductsRequestENUM.SchemePurpose]: SchemePurposeENUM;\n  [ProductsRequestENUM.SchemePeriods]: SchemePeriodsENUM[];\n  [ProductsRequestENUM.SchemeTypes]: SchemeTypesENUM[];\n  [ProductsRequestENUM.NumberOfResults]: number;\n  [ProductsRequestENUM.Features]?: ProductsRequestFeatures;\n  [ProductsRequestENUM.SortColumn]: SortColumnENUM;\n  [ProductsRequestENUM.UseStaticApr]?: boolean;\n  [ProductsRequestENUM.SapValue]?: number;\n  [ProductsRequestENUM.Lenders]?: LenderNames;\n  [ProductsRequestENUM.IncludeRetention]?: boolean;\n  [ProductsRequestENUM.RetentionLenderId]?: number;\n}\n\n// Summary information\nexport interface SummaryInfo {\n  LowestRate: number;\n  LowestPMT: number;\n  LowestAnnualCost: number;\n  NumberOfLenders: number;\n  NumberOfProducts: number;\n}\n\n// Product structure\nexport interface Product {\n  ProductId: number;\n  LenderId: number;\n  LenderName: string;\n  DirectToLender: boolean;\n  ApplyDirectLink: string;\n  LenderURL: string;\n  ProductSchemeFriendlyName: string;\n  Rate: number;\n  FollowOnRate: string;\n  PMT: number;\n  FutureValue: number;\n  FutureMonthlyPayment: number;\n  TotalFees: number;\n  AnnualCost: number;\n  ApplicationFee: number;\n  CompletionFee: number;\n  ValuationFee: number;\n  OtherFees: number;\n  Cashback: number;\n  BrokerFee: number;\n  OverpaymentLimit: string;\n  ERC: string;\n  ERCText: string;\n  ExitFee: number;\n  Legals: string;\n  MinimumMortgageAmount: number;\n  MaximumMortgageAmount: number;\n  LTV: number;\n  APR: number;\n  FollowOnRateValue: number;\n  SchemeLength: number;\n  SchemeTypeRefId: number;\n  IsRemortgage: boolean;\n  RepresentativeExample: string;\n  SAP: number;\n  SharedOwnership: string;\n  NewBuild: string;\n  Offset: boolean;\n  LtdCompany: string;\n  HMO: boolean;\n  Channel: string;\n  AvailableFor: string;\n}\n\n// API response structures\nexport interface ProductsResponseData {\n  SummaryInfo: SummaryInfo;\n  Products: Product[];\n}\n\nexport type ProductsResponse = BaseResponse<ProductsResponseData>;\n", "export * from './base';\nexport * from './CreateLeadAndBooking';\nexport * from './Lenders';\nexport * from './LogUserEvents';\nexport * from './MortgageAppointmentSlots';\nexport * from './Products';\n", "/**\n * Common/shared types for MCT module\n *\n * Contains types that are used across multiple domains\n * or are general-purpose types.\n */\n\nimport type { ICID, LCID } from './api';\n\nexport type Breakpoint = 'desktop' | 'tablet' | 'landscape' | 'portrait';\nexport type ResponsiveConfig = {\n  [T in Breakpoint]: number;\n};\n\n// Profile-related types\nexport enum ProfileNameENUM {\n  ResidentialPurchase = 'residential-purchase',\n  FtbResidentialPurchase = 'ftb-residential-purchase',\n  BtlPurchase = 'btl-purchase',\n  ResidentialRemortgage = 'residential-remortgage',\n  BtlRemortgage = 'btl-remortgage',\n}\n\n// LandC BuyerTypes\nexport enum BuyerTypeENUM {\n  ResidentialPurchase = 'Residential purchase',\n  FtbResidentialPurchase = 'First Time Buyer',\n  BtlPurchase = 'Buy-to-let purchase',\n  ResidentialRemortgage = 'Residential remortgage',\n  BtlRemortgage = 'Buy-to-let remortgage',\n}\n\nexport enum GroupNameENUM {\n  CustomerIdentifier = 'customer-identifier',\n  ResidentialPurchase = 'residential-purchase',\n  FtbResidentialPurchase = 'ftb-residential-purchase',\n  BtlPurchase = 'btl-purchase',\n  ResidentialRemortgage = 'residential-remortgage',\n  BtlRemortgage = 'btl-remortgage',\n  Output = 'output',\n}\n\nexport interface Profile {\n  name: ProfileNameENUM;\n  display: string;\n  requirements: {\n    [key: string]: string;\n  };\n}\n\nexport interface OEF_PARAMS {\n  PurchaseOrRemortgage?: string;\n  ResidentialOrBuyToLet?: string;\n  CreditIssues?: string;\n  PropertyValue?: string;\n  LoanAmount?: string;\n  Term?: string;\n  MortgageRepaymentType?: string;\n  OfferAccepted?: string;\n  Icid: ICID;\n  StageOfJourney?: string;\n  LcId: LCID;\n}\n\n// Form options\nexport interface FormOptions {\n  mode: 'main' | 'sidebar';\n  prefill: boolean;\n}\n\n// API options\nexport interface APIOptions {\n  numberOfResults?: number;\n  sortColumn?: number;\n}\n\n// Summary lines for display\nexport interface SummaryLines {\n  BorrowOverTerm: string;\n  SchemeAndType: string;\n  ProductsAndLenders: string;\n  DealsAndRates: string;\n  Summary: string;\n}\n\n// Input group options\nexport type InputGroupOptions = {\n  onChange: () => void;\n  groupName: string;\n};\n", "import type { StorageConfig } from '$mct/state';\nimport type { AppState } from './state';\nimport type { Profile, ResponsiveConfig } from './common';\nimport type { SapValueENUM } from './api/Products';\n\nexport interface CONFIG_API {\n  baseURL: string;\n  timeout: number;\n  retries: number;\n  retryDelay: number;\n  endpoints: {\n    lcid: 'EnquiryHttpTrigger';\n    products: 'ProductsMCTHttpTrigger';\n    lenders: 'LendersHttpTrigger';\n    mortgageAppointmentSlots: 'GetMortgageAppointmentSlotsTrigger';\n    createLeadAndBooking: 'CreateLeadAndBookingHttpTrigger';\n    logUserEvents: 'LogEventHttpTrigger';\n  };\n}\n\nexport interface CONFIG_COMPONENTS {\n  slider: {\n    numberOfDaysPerView: ResponsiveConfig;\n    numberOfDaysPerMove: ResponsiveConfig;\n  };\n}\n\nexport interface CONFIG_DOM {\n  attributes: {\n    component: string;\n    stage: string;\n    initial: string;\n    form: Record<string, string>;\n    results: Record<string, string>;\n    appointment: Record<string, string>;\n  };\n  classes: Record<string, string>;\n}\n\nexport type ENVIRONMENT = 'development' | 'staging' | 'production';\nexport interface CONFIG_ENVIRONMENT {\n  environment: ENVIRONMENT;\n}\n\nexport interface CONFIG_EVENTS {\n  questionsComplete: string;\n  directToBroker: string;\n  directToLender: string;\n}\n\nexport interface CONFIG_FILTERS {\n  NewBuild: 'true' | 'false';\n  SapValue: keyof typeof SapValueENUM;\n}\n\nexport interface CONFIG_PROFILES {\n  profiles: Profile[];\n}\n\nexport interface CONFIG_STORAGE {\n  persistence: Record<keyof AppState, StorageConfig>;\n}\n\nexport interface MCTConfig {\n  api: CONFIG_API;\n  components: CONFIG_COMPONENTS;\n  dom: CONFIG_DOM;\n  environment: CONFIG_ENVIRONMENT;\n  events: CONFIG_EVENTS;\n  filters: CONFIG_FILTERS;\n  profiles: CONFIG_PROFILES;\n  storage: CONFIG_STORAGE;\n}\n", "/**\n * DOM-related types for MCT module\n *\n * Contains types related to DOM elements, input handling,\n * and UI interactions.\n */\n\n// Input element types\nexport type Input = HTMLInputElement | HTMLSelectElement;\nexport type InputType = 'radio' | 'checkbox' | 'text' | 'number' | 'select-one';\nexport type SelectOption = {\n  value: string;\n  label: string;\n};\n\n// Input value types at the point of retrieval\nexport type RadioValue = string;\nexport type CheckboxValues = boolean | string[];\nexport type TextValue = string;\nexport type NumberValue = number;\nexport type SelectValue = string;\n// export type InputValue = RadioValue | CheckboxValues | TextValue | NumberValue | SelectValue;\n", "import type { InputData, AppState, StageIDENUM } from '$mct/types';\nimport type { QuestionComponent } from 'src/mct/stages/form/Questions';\n\n/**\n * Event listener tracking interface\n * Used for managing event listeners across the application\n *\n * @example\n * ```typescript\n * import type { TrackedEventListener } from '$mct/types';\n *\n * class MyComponent {\n *   private eventListeners: TrackedEventListener[] = [];\n *\n *   private addTrackedListener(\n *     element: EventTarget,\n *     event: string,\n *     handler: EventListener,\n *     options?: AddEventListenerOptions\n *   ): void {\n *     element.addEventListener(event, handler, options);\n *     this.eventListeners.push({ element, event, handler, options });\n *   }\n *\n *   private cleanup(): void {\n *     this.eventListeners.forEach(({ element, event, handler, options }) => {\n *       element.removeEventListener(event, handler, options);\n *     });\n *     this.eventListeners = [];\n *   }\n * }\n * ```\n */\nexport interface TrackedEventListener {\n  element: EventTarget;\n  event: string;\n  handler: EventListener;\n  options?: AddEventListenerOptions;\n}\n\nexport enum MCTEventNames {\n  STAGE_GO_TO = 'mct:stage:goTo',\n}\n\nexport enum FormEventNames {\n  QUESTION_CHANGED = 'form:question:changed',\n  QUESTION_VALIDATED = 'form:question:validated',\n  QUESTION_REQUIRED = 'form:question:required',\n  QUESTION_UNREQUIRED = 'form:question:unrequired',\n  INPUT_CHANGED = 'input:changed',\n  INPUT_ON_ENTER = 'input:on-enter',\n  GROUP_CHANGED = 'form:group:changed',\n  GROUP_SHOWN = 'form:group:shown',\n  GROUP_HIDDEN = 'form:group:hidden',\n  GROUP_INITIALIZED = 'form:group:initialized',\n  GROUP_COMPLETED = 'form:group:completed',\n  GROUP_READY = 'form:group:ready',\n  NAVIGATION_UPDATE = 'form:navigation:update',\n  NAVIGATION_NEXT = 'form:navigation:next',\n  NAVIGATION_PREV = 'form:navigation:prev',\n  ANSWERS_SAVED = 'form:answers:saved',\n  ANSWERS_LOADED = 'form:answers:loaded',\n  INITIALIZED = 'form:initialized',\n  COMPLETED = 'form:completed',\n  HEADER_UPDATE = 'form:header:update',\n  RESULTS_READY = 'form:results:ready',\n}\n\nexport enum StateEventNames {\n  CHANGED = 'state:changed',\n  LOADED = 'state:loaded',\n  SAVED = 'state:saved',\n}\n\nexport enum APIEventNames {\n  REQUEST_START = 'api:request:start',\n  REQUEST_SUCCESS = 'api:request:success',\n  REQUEST_ERROR = 'api:request:error',\n}\n\n/**\n * Typed event definitions for the MCT application\n * This provides type safety for event payloads\n */\n\nexport interface MCTEvents {\n  [MCTEventNames.STAGE_GO_TO]: {\n    stageId: StageIDENUM;\n  };\n}\n\nexport interface FormEvents {\n  // Question-related events\n  [FormEventNames.QUESTION_CHANGED]: {\n    question: QuestionComponent;\n  };\n\n  [FormEventNames.QUESTION_VALIDATED]: {\n    question: QuestionComponent;\n  };\n\n  [FormEventNames.QUESTION_REQUIRED]: {\n    question: QuestionComponent;\n  };\n\n  [FormEventNames.QUESTION_UNREQUIRED]: {\n    question: QuestionComponent;\n  };\n\n  // // Input-related events\n  // [FormEventNames.INPUT_CHANGED]: {\n  //   question: QuestionComponent;\n  // };\n\n  // [FormEventNames.INPUT_ON_ENTER]: {\n  //   question: QuestionComponent;\n  // };\n\n  // Group-related events\n  [FormEventNames.GROUP_CHANGED]: {\n    groupId: string;\n    activeQuestionIndex: number;\n    totalQuestions: number;\n  };\n\n  [FormEventNames.GROUP_SHOWN]: {\n    groupId: string;\n  };\n\n  [FormEventNames.GROUP_HIDDEN]: {\n    groupId: string;\n  };\n\n  [FormEventNames.GROUP_INITIALIZED]: {\n    groupId: string;\n    questionCount: number;\n  };\n\n  [FormEventNames.GROUP_COMPLETED]: {\n    groupId: string;\n    answers: InputData[];\n  };\n\n  [FormEventNames.GROUP_READY]: {\n    groupId: string;\n    canProceed: boolean;\n  };\n\n  // Navigation events\n  [FormEventNames.NAVIGATION_UPDATE]: {\n    nextEnabled?: boolean;\n    prevEnabled?: boolean;\n  };\n\n  [FormEventNames.NAVIGATION_NEXT]: {\n    fromGroup: string;\n    // toGroup: string;\n  };\n\n  [FormEventNames.NAVIGATION_PREV]: {\n    fromGroup: string;\n    // toGroup: string;\n  };\n\n  // Answer-related events\n  [FormEventNames.ANSWERS_SAVED]: {\n    answers: InputData[];\n  };\n\n  [FormEventNames.ANSWERS_LOADED]: {\n    answers: InputData[];\n  };\n\n  // Form lifecycle events\n  [FormEventNames.INITIALIZED]: {\n    totalGroups: number;\n    totalQuestions: number;\n  };\n\n  [FormEventNames.COMPLETED]: {\n    totalAnswers: number;\n  };\n\n  [FormEventNames.HEADER_UPDATE]: {\n    headerData: Record<string, any>;\n    source: string;\n  };\n\n  [FormEventNames.RESULTS_READY]: {\n    answers: InputData[];\n    canShowResults: boolean;\n  };\n}\n\nexport interface StateEvents {\n  [StateEventNames.CHANGED]: {\n    changes: Partial<AppState>;\n    previousState: AppState;\n    currentState: AppState;\n  };\n\n  [StateEventNames.LOADED]: {\n    state: AppState;\n  };\n\n  [StateEventNames.SAVED]: {\n    state: AppState;\n  };\n}\n\nexport interface APIEvents {\n  [APIEventNames.REQUEST_START]: {\n    endpoint: string;\n    method: string;\n  };\n\n  [APIEventNames.REQUEST_SUCCESS]: {\n    endpoint: string;\n    method: string;\n    response: any;\n  };\n\n  [APIEventNames.REQUEST_ERROR]: {\n    endpoint: string;\n    method: string;\n    error: Error;\n  };\n}\n\n// Combine all event types\nexport interface AllEvents extends MCTEvents, FormEvents, StateEvents, APIEvents {}\n\n// Type helpers\nexport type EventName = keyof AllEvents;\nexport type EventPayload<T extends EventName> = AllEvents[T];\n\n// Event categories for easier filtering\nexport const EVENT_CATEGORIES = {\n  MCT: 'mct:',\n  FORM: 'form:',\n  RESULTS: 'results:',\n  APPOINTMENT: 'appointment:',\n  STATE: 'state:',\n  API: 'api:',\n} as const;\n", "/**\n * Stage-related types for MCT module\n *\n * Contains types related to different stages of the MCT flow,\n * stage options, and stage management.\n */\n\nimport { ProfileNameENUM } from './common';\n\n// Stage identifiers\nexport enum StageIDENUM {\n  Questions = 'questions',\n  Results = 'results',\n  Appointment = 'appointment',\n}\n\n// Stage-specific options for goToStage function\nexport interface QuestionsStageOptions {\n  profile?: ProfileNameENUM;\n  prefill?: boolean;\n}\n\nexport interface ResultsStageOptions {\n  exampleData?: boolean;\n  autoLoad?: boolean;\n  numberOfResults?: number;\n  showSummary?: boolean;\n  showLenders?: boolean;\n  showDetails?: boolean;\n}\n\nexport interface AppointmentStageOptions {\n  // Add calendar-specific options here when needed\n}\n\nexport type GoToStageOptions = {\n  questions?: QuestionsStageOptions;\n  results?: ResultsStageOptions;\n  appointment?: AppointmentStageOptions;\n};\n\n// Output types\nexport enum OutputTypeENUM {\n  Sentence = 'sentence',\n  Currency = 'currency',\n  Percentage = 'percentage',\n  ProgressBar = 'progress-bar',\n}\n", "/**\n * State management types for MCT module\n *\n * Contains types related to application state, answers,\n * and data persistence.\n */\n\nimport {\n  OfferAcceptedENUM,\n  ProductsRequestENUM,\n  PurchRemoENUM,\n  type CreditImpairedENUM,\n  type EndOfTermENUM,\n  type FirstTimeBuyerENUM,\n  type PropertyTypeENUM,\n  type ReadinessToBuyENUM,\n  type RemoChangeENUM,\n  type RepaymentTypeENUM,\n  type ResiBtlENUM,\n  type SchemePeriodsENUM,\n  type SchemeTypesENUM,\n} from './api';\nimport type { CheckboxValues, NumberValue, RadioValue, SelectValue, TextValue } from './dom';\n\n// Input-related types\nexport type InputKey = keyof Inputs; // // Initial name of the input group, same as the key in the Inputs object\nexport type InputName = string; // Final name of the input group, unique identifier based on the InputKey, GroupName and Value if a Radio or Checkbox input\nexport type InputValue = RadioValue | CheckboxValues | TextValue | NumberValue | SelectValue | undefined; // The value of the input\nexport type InputPrefillConfig = Record<InputName, InputValue>; // Answers that are prefilled\n\nexport enum InputKeysENUM {\n  PurchRemo = 'PurchRemo',\n  FTB = 'FTB',\n  ResiBtl = 'ResiBtl',\n  ReadinessToBuy = 'ReadinessToBuy',\n  CreditImpaired = 'CreditImpaired',\n  PropertyValue = 'PropertyValue',\n  DepositAmount = 'DepositAmount',\n  RepaymentType = 'RepaymentType',\n  InterestOnlyValue = 'InterestOnlyValue',\n  MortgageLength = 'MortgageLength',\n  SchemeTypes = 'SchemeTypes',\n  SchemePeriods = 'SchemePeriods',\n  EndOfTerm = 'EndOfTerm',\n  RepaymentValue = 'RepaymentValue',\n  RemoChange = 'RemoChange',\n  Lender = 'Lender',\n}\n\nexport type Inputs = {\n  [InputKeysENUM.PurchRemo]?: keyof typeof PurchRemoENUM; // will have by the end\n  [InputKeysENUM.FTB]?: keyof typeof FirstTimeBuyerENUM;\n  [InputKeysENUM.ResiBtl]?: keyof typeof ResiBtlENUM; // will have by the end\n  [InputKeysENUM.ReadinessToBuy]?: keyof typeof ReadinessToBuyENUM;\n  [InputKeysENUM.CreditImpaired]?: keyof typeof CreditImpairedENUM;\n  [InputKeysENUM.PropertyValue]?: number; // will have by the end\n  // [AnswerKeysENUM.PropertyType]?: keyof typeof PropertyTypeENUM;\n  [InputKeysENUM.DepositAmount]?: number;\n  [InputKeysENUM.RepaymentType]?: keyof typeof RepaymentTypeENUM; // will have by the end\n  [InputKeysENUM.InterestOnlyValue]?: number; // optional?\n  [InputKeysENUM.MortgageLength]?: number; // will have by the end\n  [InputKeysENUM.SchemeTypes]?: keyof (typeof SchemeTypesENUM)[]; // will have by the end\n  [InputKeysENUM.SchemePeriods]?: keyof typeof SchemePeriodsENUM; // will have by the end\n  [InputKeysENUM.EndOfTerm]?: keyof typeof EndOfTermENUM;\n  [InputKeysENUM.RepaymentValue]?: number; // will have by the end\n  [InputKeysENUM.RemoChange]?: keyof typeof RemoChangeENUM;\n  [InputKeysENUM.Lender]?: string;\n};\n\nexport type PurchInputs = {\n  [InputKeysENUM.FTB]: keyof typeof FirstTimeBuyerENUM;\n  [InputKeysENUM.ReadinessToBuy]: keyof typeof ReadinessToBuyENUM;\n  [InputKeysENUM.DepositAmount]: number;\n};\n\nexport type RemoInputs = {\n  [InputKeysENUM.EndOfTerm]: keyof typeof EndOfTermENUM;\n  [InputKeysENUM.RemoChange]: keyof typeof RemoChangeENUM;\n  [InputKeysENUM.Lender]: string;\n};\n\nexport type InputsByEndOfForm = {\n  [InputKeysENUM.PurchRemo]: keyof typeof PurchRemoENUM;\n  [InputKeysENUM.ResiBtl]: keyof typeof ResiBtlENUM;\n  [InputKeysENUM.CreditImpaired]: keyof typeof CreditImpairedENUM;\n  [InputKeysENUM.PropertyValue]: number;\n  [InputKeysENUM.RepaymentType]: keyof typeof RepaymentTypeENUM;\n  [InputKeysENUM.InterestOnlyValue]: number;\n  [InputKeysENUM.MortgageLength]: number;\n  [InputKeysENUM.SchemeTypes]: keyof (typeof SchemeTypesENUM)[];\n  [InputKeysENUM.SchemePeriods]: keyof typeof SchemePeriodsENUM;\n  [InputKeysENUM.RepaymentValue]: number;\n};\n\n// Calculation-related types\nexport enum CalculationKeysENUM {\n  IsProceedable = 'isProceedable',\n  OfferAccepted = 'offerAccepted',\n  LTV = 'LTV',\n  IncludeRetention = ProductsRequestENUM.IncludeRetention,\n  RepaymentValue = InputKeysENUM.RepaymentValue,\n  InterestOnlyValue = InputKeysENUM.InterestOnlyValue,\n}\n\nexport type CalculationKey = keyof typeof CalculationKeysENUM;\nexport type CalculationValue = string | number | boolean;\nexport type Calculations = {\n  [CalculationKeysENUM.IsProceedable]?: boolean;\n  [CalculationKeysENUM.OfferAccepted]?: OfferAcceptedENUM;\n  [CalculationKeysENUM.LTV]?: number;\n  [CalculationKeysENUM.IncludeRetention]?: boolean;\n  [CalculationKeysENUM.RepaymentValue]?: number;\n  [CalculationKeysENUM.InterestOnlyValue]?: number;\n};\n\nexport interface InputData {\n  key: InputKey;\n  name: InputName;\n  value: InputValue;\n  source?: 'user' | 'prefill' | 'param';\n}\n\n// Application state\nexport interface AppState {\n  lcid: string | null;\n  icid: string | null;\n  currentStageId: string | null;\n  inputs: Inputs;\n  inputPrefillConfig: InputPrefillConfig;\n  calculations: Calculations;\n  mortgageId: number | null;\n}\n", "/**\n * Main type exports for MCT module\n *\n * This file serves as the central export point for all MCT types.\n * Types are organized by domain for better maintainability.\n */\n\n// Re-export all types from domain-specific files\nexport * from './api';\nexport * from './common';\nexport * from './config';\nexport * from './dom';\nexport * from './events';\nexport * from './stages';\nexport * from './state';\n", "import { getBaseURLForAPI } from '$utils/environment/getBaseURLForAPI';\nimport type { CONFIG_API } from '$mct/types';\n\nexport const API_CONFIG: CONFIG_API = {\n  baseURL: getBaseURLForAPI(),\n  timeout: 30000,\n  retries: 3,\n  retryDelay: 1000,\n  endpoints: {\n    lcid: 'EnquiryHttpTrigger',\n    products: 'ProductsMCTHttpTrigger',\n    lenders: 'LendersHttpTrigger',\n    mortgageAppointmentSlots: 'GetMortgageAppointmentSlotsTrigger',\n    createLeadAndBooking: 'CreateLeadAndBookingHttpTrigger',\n    logUserEvents: 'LogEventHttpTrigger',\n  },\n} as const;\n", "import type { StorageConfig } from '$mct/state';\nimport type { AppState, CONFIG_STORAGE } from '$mct/types';\n\nexport const STORAGE_CONFIG: CONFIG_STORAGE = {\n  persistence: {\n    lcid: {\n      type: 'cookie',\n      key: 'LCID',\n      serialize: false,\n    },\n    icid: {\n      type: 'cookie',\n      key: 'ICID',\n      serialize: false,\n    },\n    currentStageId: {\n      type: 'sessionStorage',\n      key: 'mct_current_stage',\n      serialize: false,\n    },\n    prefillAnswers: {\n      type: 'sessionStorage',\n      key: 'mct_prefill_answers',\n      serialize: true,\n    },\n    answers: {\n      type: 'localStorage',\n      key: 'mct_answers',\n      serialize: true,\n    },\n    calculations: {\n      type: 'localStorage',\n      key: 'mct_calculations',\n      serialize: true,\n    },\n    mortgageId: {\n      type: 'sessionStorage',\n      key: 'mct_mortgage_id',\n      serialize: false,\n    },\n  },\n} as const;\n", "import type { CONFIG_DOM } from '$mct/types';\n\nexport const DOM_CONFIG: CONFIG_DOM = {\n  attributes: {\n    component: 'data-mct',\n    stage: 'data-mct-stage',\n    initial: 'data-mct-initial',\n    form: {\n      components: 'data-mct-questions',\n      group: 'data-mct-questions-group',\n      question: 'data-mct-questions-question',\n      dependsOn: 'data-mct-questions-depends-on',\n      dependsOnValue: 'data-mct-questions-depends-on-value',\n      element: 'data-mct-questions-element',\n      output: 'data-mct-questions-output',\n      type: 'data-mct-questions-outputs-type',\n      hideOnGroup: 'data-mct-questions-hide-on-group',\n      showOnGroup: 'data-mct-questions-show-on-group',\n    },\n    results: {\n      components: 'data-mct-results',\n      element: 'data-mct-results-element',\n      output: 'data-mct-results-output',\n      type: 'data-mct-results-output-type',\n      showIfProceedable: 'data-mct-results-show-if-proceedable',\n    },\n    appointment: {\n      components: 'data-mct-appointment',\n      panel: 'data-mct-appointment-panel',\n      slider: 'data-mct-appointment-slider',\n      date: 'data-mct-appointment-date',\n      element: 'data-mct-appointment-element',\n      inputLabel: 'data-mct-appointment-input-label',\n      form: 'data-mct-appointment-form',\n    },\n  },\n  classes: {\n    active: 'is-active',\n    highlight: 'mct_highlight',\n  },\n} as const;\n", "import type { CONFIG_COMPONENTS } from '$mct/types';\n\nexport const COMPONENTS_CONFIG: CONFIG_COMPONENTS = {\n  slider: {\n    numberOfDaysPerView: { desktop: 7, tablet: 5, landscape: 4, portrait: 3 },\n    numberOfDaysPerMove: { desktop: 7, tablet: 5, landscape: 4, portrait: 3 },\n  },\n} as const;\n", "import type { CONFIG_PROFILES } from '$mct/types';\nimport { ProfileNameENUM } from '$mct/types';\n\nexport const PROFILES_CONFIG: CONFIG_PROFILES = {\n  profiles: [\n    {\n      name: ProfileNameENUM.ResidentialPurchase,\n      display: 'Residential Purchase',\n      requirements: {\n        PurchRemo: 'Purchase',\n        FTB: 'No',\n        ResiBtl: 'Residential',\n      },\n    },\n    {\n      name: ProfileNameENUM.FtbResidentialPurchase,\n      display: 'First Time Buyer - Purchase',\n      requirements: {\n        PurchRemo: 'Purchase',\n        FTB: 'Yes',\n        ResiBtl: 'Residential',\n      },\n    },\n    {\n      name: ProfileNameENUM.BtlPurchase,\n      display: 'Buy to Let - Purchase',\n      requirements: {\n        PurchRemo: 'Purchase',\n        FTB: 'No',\n        ResiBtl: 'Btl',\n      },\n    },\n    {\n      name: ProfileNameENUM.ResidentialRemortgage,\n      display: 'Residential - Remortgage',\n      requirements: {\n        PurchRemo: 'Remortgage',\n        // FTB: 'No',\n        ResiBtl: 'Residential',\n      },\n    },\n    {\n      name: ProfileNameENUM.BtlRemortgage,\n      display: 'Buy to Let - Remortgage',\n      requirements: {\n        PurchRemo: 'Remortgage',\n        // FTB: 'No',\n        ResiBtl: 'Btl',\n      },\n    },\n  ],\n};\n", "import type { CONFIG_ENVIRONMENT, ENVIRONMENT } from '$mct/types';\nimport { isStaging } from '$utils/environment/isStaging';\n\nexport const getEnvironment = (): ENVIRONMENT => {\n  if (process.env.NODE_ENV === 'development') return 'development';\n  if (isStaging) return 'staging';\n  return 'production';\n};\n\nexport const ENVIRONMENT_CONFIG: CONFIG_ENVIRONMENT = {\n  environment: getEnvironment(),\n};\n", "export const getEnumKey = <T extends Record<string, string | number>>(enumObj: T, value: T[keyof T]): keyof T => {\n  return Object.keys(enumObj).find((key) => enumObj[key as keyof T] === value) as keyof T;\n};\n", "import { SapValueENUM, type CONFIG_FILTERS } from '$mct/types';\nimport { getEnumKey } from '../utils/common/getEnumKey';\n\nexport const FILTERS_CONFIG: CONFIG_FILTERS = {\n  NewBuild: 'false',\n  SapValue: getEnumKey(SapValueENUM, SapValueENUM.No),\n};\n", "import type { CONFIG_EVENTS } from '$mct/types';\n\nexport const EVENTS_CONFIG: CONFIG_EVENTS = {\n  questionsComplete: 'Questions_Complete',\n  directToBroker: 'Direct_To_Broker',\n  directToLender: 'Direct_To_Lender',\n} as const;\n", "import type { MCTConfig } from '../types/config';\nimport { API_CONFIG } from './api';\nimport { STORAGE_CONFIG } from './storage';\nimport { DOM_CONFIG } from './dom';\nimport { COMPONENTS_CONFIG } from './components';\nimport { PROFILES_CONFIG } from './profiles';\nimport { ENVIRONMENT_CONFIG } from './environment';\nimport { FILTERS_CONFIG } from './filters';\nimport { EVENTS_CONFIG } from './events';\n\n// Centralized configuration object\nexport const MCT_CONFIG: MCTConfig = {\n  api: API_CONFIG,\n  components: COMPONENTS_CONFIG,\n  dom: DOM_CONFIG,\n  environment: ENVIRONMENT_CONFIG,\n  events: EVENTS_CONFIG,\n  filters: FILTERS_CONFIG,\n  profiles: PROFILES_CONFIG,\n  storage: STORAGE_CONFIG,\n};\n\n// Export individual configs for specific use cases\nexport * from './api';\nexport * from './components';\nexport * from './dom';\nexport * from './environment';\nexport * from './events';\nexport * from './filters';\nexport * from './profiles';\nexport * from './storage';\n", "import type { Breakpoint } from '$mct/types';\n\nexport const getCurrentBreakpoint = (): Breakpoint => {\n  const width = window.innerWidth;\n  if (width > 991) return 'desktop';\n  if (width > 767) return 'tablet';\n  if (width > 478) return 'landscape';\n  return 'portrait';\n};\n", "import { type Breakpoint } from '$mct/types';\nimport { getCurrentBreakpoint } from '$utils/environment/getCurrentBreakpoint';\nimport { COMPONENTS_CONFIG } from '$mct/config';\nconst SLIDER_CONFIG = COMPONENTS_CONFIG.slider;\n\nexport class ConfigManager {\n  private static instance: ConfigManager;\n  private currentBreakpoint: Breakpoint;\n\n  private constructor() {\n    this.currentBreakpoint = getCurrentBreakpoint();\n  }\n\n  public static getInstance(): ConfigManager {\n    if (!ConfigManager.instance) ConfigManager.instance = new ConfigManager();\n    return ConfigManager.instance;\n  }\n\n  public getCurrentBreakpoint(): Breakpoint {\n    return this.currentBreakpoint;\n  }\n\n  public updateBreakpoint(): void {\n    this.currentBreakpoint = getCurrentBreakpoint();\n  }\n\n  public getDaysPerView(breakpoint?: Breakpoint): number {\n    return SLIDER_CONFIG.numberOfDaysPerView[breakpoint || this.currentBreakpoint];\n  }\n\n  public getDaysPerMove(breakpoint?: Breakpoint): number {\n    return SLIDER_CONFIG.numberOfDaysPerMove[breakpoint || this.currentBreakpoint];\n  }\n}\n", "import { bestbuys } from './bestbuys';\nimport { calculators } from './calculators';\nimport { components } from './components';\nimport { costOfDoingNothing } from './costofdoingnothing';\nimport { mct } from './mct';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  components();\n  bestbuys();\n  calculators();\n  costOfDoingNothing();\n  mct();\n});\n", "import { queryElements } from '$utils/dom/queryelements';\n\nimport { HandleMini } from './handleMini';\nimport { HandleTable } from './handleTable';\n\nexport const bestbuys = () => {\n  const attr = 'data-bb';\n  const components = queryElements<HTMLDivElement>(`[${attr}]`);\n\n  components.forEach((component) => {\n    const { bb } = component.dataset;\n    if (!bb) return;\n\n    const bestbuy = bb === 'table' ? new HandleTable(component) : bb === 'mini' ? new HandleMini(component) : null;\n\n    if (bestbuy === null) return;\n    bestbuy.init();\n  });\n};\n", "/**\n * Retrieves the DOM elements based on the provided query and returns them in an array\n */\nexport const queryElements = <T extends HTMLElement | SVGElement>(\n  query: string,\n  parent: Element | Document = document\n): T[] => {\n  const elements = parent.querySelectorAll<T>(query);\n  return elements.length ? [...elements] : [];\n};\n", "import { API_ENDPOINTS } from 'src/constants';\nimport type { APIResponse } from 'src/types';\n\nimport { isStaging } from '$utils/environment/isStaging';\nimport { numberToCurrency } from '$utils/formatting/numberToCurrency';\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\nimport { setSearchParameter } from '$utils/storage/setSearchParameter';\n\nimport type {\n  BestBuyResult,\n  Inputs,\n  MortgageType,\n  PropertyType,\n  SchemePeriods,\n  SchemePurpose,\n  SchemeTypes,\n  SortColumn,\n} from './types';\n\nconst attr = 'data-mini';\nconst API_ENDPOINT = API_ENDPOINTS.productsTrigger;\n\nexport class HandleMini {\n  component: HTMLDivElement;\n  private values: Inputs;\n  private rows: HTMLDivElement[];\n  private loader: HTMLDivElement;\n  private isLoading: boolean;\n  private result?: BestBuyResult;\n\n  constructor(component: HTMLDivElement) {\n    this.component = component;\n    this.values = this.getValues();\n    this.rows = queryElements(`[${attr}-el=\"row\"]`, component);\n    this.loader = queryElement(`[${attr}-el=\"loader\"]`, component) as HTMLDivElement;\n    this.isLoading = true;\n  }\n\n  init(): void {\n    this.handleAzureRequest();\n  }\n\n  private toggleLoading(success?: boolean): void {\n    this.isLoading = !this.isLoading;\n    if (this.isLoading) {\n      this.loader.style.display = 'block';\n    } else if (success) {\n      this.loader.style.display = 'none';\n    } else if (!success) {\n      this.loader.style.display = 'none';\n    }\n  }\n\n  private getValues(): Inputs {\n    const PropertyValue = this.component.dataset.propertyvalue,\n      RepaymentValue = this.component.dataset.repaymentvalue,\n      PropertyType = this.component.dataset.propertytype as PropertyType,\n      MortgageType = this.component.dataset.mortgagetype as MortgageType,\n      InterestOnlyValue = this.component.dataset.interestonlyvalue,\n      TermYears = this.component.dataset.termyears,\n      SchemePurpose = this.component.dataset.schemepurpose as SchemePurpose,\n      SchemePeriods = this.component.dataset.schemeperiods as string,\n      SchemeTypes = this.component.dataset.schemetypes as string,\n      Erc = this.component.dataset.erc,\n      Offset = this.component.dataset.offset,\n      SortColumn = this.component.dataset.sortcolumn as SortColumn,\n      UseStaticApr = this.component.dataset.usestaticapr;\n\n    function convertStringToArray<T>(string: string): T[] {\n      // replace single quotes with double quotes to make it valid JSON\n      const jsonString = string.replace(/'/g, '\"');\n\n      // Convert JSON string to an Array\n      const array = JSON.parse(jsonString);\n      return array;\n    }\n\n    const formattedValues: Inputs = {\n      PropertyValue: PropertyValue ?? '250000',\n      RepaymentValue: RepaymentValue ?? '125000',\n      PropertyType: PropertyType ?? '1',\n      MortgageType: MortgageType ?? '1',\n      InterestOnlyValue: InterestOnlyValue ?? '0',\n      TermYears: TermYears ?? '25',\n      SchemePurpose: SchemePurpose ?? '1',\n      SchemePeriods: convertStringToArray<SchemePeriods>(SchemePeriods) ?? ['1', '2', '3', '4'],\n      SchemeTypes: convertStringToArray<SchemeTypes>(SchemeTypes) ?? ['1', '2'],\n      NumberOfResults: '3',\n      Features: {\n        EarlyRepaymentCharge: Erc === 'true' ? false : true,\n        Offset: Offset === 'true' ? true : false,\n        NewBuild: false,\n      },\n      SortColumn: SortColumn ?? '1',\n      UseStaticApr: UseStaticApr === 'true' ? true : false,\n    };\n\n    return formattedValues;\n  }\n\n  private async handleAzureRequest(): Promise<void> {\n    if (isStaging) {\n      console.groupCollapsed('API Call');\n      console.time('API Request');\n    }\n\n    try {\n      const result = await this.makeAzureRequest();\n      this.result = result.result as unknown as BestBuyResult;\n      if (isStaging) console.log(result);\n      if (!this.result || this.result === null || !this.result.success || this.result.data.length === 0) {\n        this.toggleLoading(false);\n      } else {\n        this.displayResults();\n        this.toggleLoading(true);\n      }\n    } catch (error) {\n      console.error('Error retrieving calculation', error);\n      this.toggleLoading(false);\n    }\n\n    if (isStaging) {\n      console.timeEnd('API Request');\n      console.groupEnd();\n    }\n  }\n\n  private async makeAzureRequest(): Promise<APIResponse> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    const body = JSON.stringify({ input: this.values });\n\n    console.log(headers);\n    console.log(body);\n\n    const response = await fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API responded with status ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  displayResults(): void {\n    if (!this.result) return;\n\n    this.result.data.forEach((item, index) => {\n      const row = this.rows[index];\n      const outputs = queryElements(`[${attr}-output]`, row) as HTMLDivElement[];\n\n      outputs.forEach((output) => {\n        const key = output.dataset.miniOutput;\n        if (!key) return;\n\n        const value = item[key];\n        if (value === 0 || item[key]) {\n          if (typeof value === 'number') {\n            output.textContent = numberToCurrency(value);\n          } else if (output.nodeName === 'IMG' && output instanceof HTMLImageElement) {\n            output.src = value as string;\n          } else {\n            output.textContent = value as string;\n          }\n        }\n      });\n\n      const button = queryElement('a', row) as HTMLLinkElement;\n      setSearchParameter(button, [{ key: 'productId', value: item.ProductId as string }]);\n    });\n  }\n}\n", "import { getBaseURLForAPI } from '$utils/environment/getBaseURLForAPI';\n\n// Base URL with have the trailing slash\nconst baseURLForAPI = getBaseURLForAPI();\n\nexport const API_ENDPOINTS = {\n  productsTrigger: `${baseURLForAPI}productshttptrigger`,\n  calculatorTrigger: `${baseURLForAPI}calculatorhttptrigger`,\n  svrForLenders: `${baseURLForAPI}SVRForLendersTrigger`,\n  costOfDoingNothing: `${baseURLForAPI}CODNTrigger`,\n};\n", "export const numberToCurrency = (number: number): string => {\n  interface Options {\n    style: 'currency';\n    currency: string;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n  }\n\n  const options: Options = {\n    style: 'currency',\n    currency: 'GBP',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: number < 100 ? 2 : 0,\n  };\n\n  const numberToFormat = number < 100 ? number : Math.round(number);\n\n  const regexPattern = /\u00A3/;\n  return new Intl.NumberFormat('en-GB', options).format(numberToFormat).replace(regexPattern, '');\n};\n", "/**\n * Retrieves the DOM element based on the provided query and returns them in an array\n */\nexport const queryElement = <T extends HTMLElement>(\n  query: string,\n  parent: Element | Document = document\n): T | undefined => {\n  const element = parent.querySelector<T>(query);\n  return element ?? undefined;\n};\n", "export type SearchParameter = { key: string; value: string };\n\nexport const setSearchParameter = (element: HTMLLinkElement, paramsToAdd: SearchParameter[]) => {\n  const url = new URL(element.href);\n  const params = new URLSearchParams(url.search);\n\n  paramsToAdd.forEach((param) => {\n    params.set(param.key, param.value);\n  });\n\n  url.search = params.toString();\n  element.href = url.toString();\n};\n", "import { simulateEvent } from '@finsweet/ts-utils';\nimport { dialogs } from 'src/components/dialogs';\nimport { API_ENDPOINTS } from 'src/constants';\nimport type { APIResponse, Input } from 'src/types';\n\nimport { checkInputValidity, formatInput, getInputValue, setError } from '$utils/input';\nimport { isStaging } from '$utils/environment';\nimport { numberToCurrency } from '$utils/formatting';\nimport { queryElement, queryElements } from '$utils/dom';\nimport { setSearchParameter } from '$utils/storage';\n\nimport type { BestBuyResult, Inputs, PropertyType, SortColumn } from './types';\n\nconst attr = 'data-bb';\nconst API_ENDPOINT = API_ENDPOINTS.productsTrigger;\n\nexport class HandleTable {\n  component: HTMLDivElement;\n  private template: HTMLDivElement;\n  private trigger: 'onload' | 'onclick' = 'onload';\n  private clone: HTMLDivElement;\n  private inputs: Input[];\n  private conditionals: HTMLDivElement[];\n  private sort: HTMLSelectElement;\n  private buttons: HTMLButtonElement[];\n  private resultsList: HTMLDivElement;\n  private loading: HTMLDivElement;\n  private noResults: HTMLDivElement;\n  private isLoading: boolean;\n  private loadMoreWrapper: HTMLDivElement;\n  private loadMore: HTMLButtonElement;\n  private scaffoldWrapper: HTMLDivElement;\n  private scaffoldCover: HTMLDivElement;\n  private scaffoldResult: HTMLDivElement;\n  private removeScaffold: boolean = true;\n  private numberOfResultsShown: number;\n  private productId: string | null;\n  private formattedValues: Inputs;\n  private result?: BestBuyResult;\n\n  constructor(component: HTMLDivElement) {\n    this.component = component;\n    this.trigger = component.dataset.bbTrigger === 'onclick' ? 'onclick' : 'onload';\n    this.template = queryElement(`[${attr}-el=\"template\"]`, component) as HTMLDivElement;\n    this.clone = this.template.cloneNode(true) as HTMLDivElement;\n    this.clone.removeAttribute('data-bb-el');\n    this.inputs = queryElements(`[data-input], input, select`, component);\n    this.conditionals = queryElements(`[data-conditions]`, component);\n    this.buttons = queryElements(`[${attr}-el=\"button\"]`, component);\n    this.sort = queryElement(`[data-input=\"SortColumn\"]`, component) as HTMLSelectElement;\n    this.resultsList = queryElement(`[${attr}-el=\"results-list\"]`) as HTMLDivElement;\n    this.loading = queryElement(`[${attr}-el=\"loading\"]`, component) as HTMLDivElement;\n    this.noResults = queryElement(`[${attr}-el=\"no-results\"]`, component) as HTMLDivElement;\n    this.isLoading = false;\n    this.loadMoreWrapper = queryElement(`[${attr}-el=\"load-more\"]`, component) as HTMLDivElement;\n    this.loadMore = queryElement('button', this.loadMoreWrapper) as HTMLButtonElement;\n    this.scaffoldWrapper = queryElement(`[${attr}-el=\"scaffold-wrapper\"]`, component) as HTMLDivElement;\n    this.scaffoldCover = queryElement(`[${attr}-el=\"scaffold-cover\"]`, this.scaffoldWrapper) as HTMLDivElement;\n    this.scaffoldResult = queryElement(`[${attr}-el=\"scaffold-result\"]`, this.scaffoldWrapper) as HTMLDivElement;\n    this.numberOfResultsShown = 0;\n\n    const url = new URL(window.location.href);\n    const params = new URLSearchParams(url.search);\n    this.productId = params.get('productId') ?? null;\n    this.formattedValues = this.getValues();\n  }\n\n  private hideScaffold(): void {\n    this.scaffoldWrapper.classList.remove(...this.scaffoldWrapper.classList);\n    this.scaffoldCover.remove();\n    this.scaffoldResult.remove();\n  }\n\n  async init(): Promise<void> {\n    this.conditionalVisibility();\n    if (this.trigger === 'onload') {\n      this.isLoading = true;\n      if (this.productId) this.scrollIntoView();\n      await this.handleAzureRequest();\n      if (this.productId) this.scrollIntoView(this.productId);\n    } else if (this.trigger === 'onclick') {\n      this.loading.style.display = 'none';\n      this.noResults.style.display = 'none';\n      this.resultsList.style.display = 'none';\n      this.loadMoreWrapper.style.display = 'none';\n    }\n\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    this.inputs.forEach((input) => {\n      input.addEventListener('change', () => {\n        formatInput(input);\n        this.validateInput(input);\n      });\n    });\n\n    this.buttons.forEach((button) => {\n      button.addEventListener('click', () => {\n        const valid = this.validateInputs();\n        if (!valid) return;\n        this.toggleLoading();\n        this.numberOfResultsShown = 0;\n        this.handleAzureRequest();\n      });\n    });\n\n    this.sort.addEventListener('change', () => {\n      const valid = this.validateInputs();\n      if (!valid) return;\n      this.toggleLoading();\n      this.numberOfResultsShown = 0;\n      this.handleAzureRequest();\n    });\n\n    this.loadMore.addEventListener('click', () => {\n      this.displayResults(this.numberOfResultsShown, 10);\n    });\n  }\n\n  private validateInput(input: Input): boolean {\n    const validity = checkInputValidity(input);\n\n    if (!validity.error) {\n      setError(input);\n    } else {\n      setError(input, validity.error);\n    }\n\n    return validity.isValid;\n  }\n\n  private validateInputs(): boolean {\n    return this.inputs.every((input) => {\n      return this.validateInput(input);\n    });\n  }\n\n  private conditionalVisibility(): void {\n    this.conditionals.forEach((item) => {\n      const { conditions } = item.dataset;\n      if (!conditions) return;\n\n      const parsedConditions = JSON.parse(conditions);\n\n      const input = this.inputs.find((input) => input.dataset.input === parsedConditions.dependsOn);\n      if (!input) return;\n\n      let conditionsMet = false;\n\n      switch (parsedConditions.operator) {\n        case 'equal':\n          conditionsMet = getInputValue(input) === parsedConditions.value;\n          break;\n        case 'notequal':\n          conditionsMet = getInputValue(input) !== parsedConditions.value;\n          break;\n      }\n\n      const itemInput = queryElement('[data-input]', item) as Input;\n      itemInput.dataset.conditionsmet = conditionsMet.toString();\n      item.style.display = conditionsMet ? 'block' : 'none';\n\n      input.addEventListener('change', () => {\n        switch (parsedConditions.operator) {\n          case 'equal':\n            conditionsMet = getInputValue(input) === parsedConditions.value;\n            break;\n          case 'notequal':\n            conditionsMet = getInputValue(input) !== parsedConditions.value;\n            break;\n        }\n\n        itemInput.dataset.conditionsmet = conditionsMet.toString();\n        item.style.display = conditionsMet ? 'block' : 'none';\n      });\n    });\n  }\n\n  private toggleLoading(success?: boolean): void {\n    if (this.removeScaffold) {\n      this.hideScaffold();\n      this.removeScaffold = false;\n    }\n    this.isLoading = !this.isLoading;\n    if (this.isLoading) {\n      this.loading.style.display = 'block';\n      this.noResults.style.display = 'none';\n      this.resultsList.style.display = 'none';\n      this.loadMoreWrapper.style.display = 'none';\n    } else if (success) {\n      this.loading.style.display = 'none';\n      this.noResults.style.display = 'none';\n      this.resultsList.style.display = 'flex';\n      this.loadMoreWrapper.style.display = 'flex';\n    } else if (!success) {\n      this.loading.style.display = 'none';\n      this.noResults.style.display = 'flex';\n      this.resultsList.style.display = 'none';\n      this.loadMoreWrapper.style.display = 'none';\n    }\n  }\n\n  private getValues(): Inputs {\n    const preFormattedValues: { [key: string]: string | boolean } = {};\n    this.inputs.forEach((input) => {\n      if (input.dataset.conditionsmet && input.dataset.conditionsmet === 'false') return;\n      const key = input.dataset.input;\n      const value = getInputValue(input);\n\n      if (!key || !value) return;\n\n      preFormattedValues[key] = value;\n    });\n\n    const formattedValues: Inputs = {\n      PropertyValue: preFormattedValues.PropertyValue as string,\n      RepaymentValue: preFormattedValues.RepaymentValue as string,\n      PropertyType: preFormattedValues.PropertyType as PropertyType,\n      MortgageType: preFormattedValues.MortgageType === 'Residential' ? '1' : '2',\n      InterestOnlyValue: preFormattedValues.InterestOnlyValue as string,\n      TermYears: preFormattedValues.TermYears as string,\n      SchemePurpose: preFormattedValues.SchemePurpose === 'Purchase' ? '1' : '2',\n      SchemePeriods: [],\n      SchemeTypes: [],\n      NumberOfResults: '100',\n      Features: {\n        EarlyRepaymentCharge: preFormattedValues.Erc as boolean,\n        Offset: preFormattedValues.Offset as boolean,\n        NewBuild: preFormattedValues.NewBuild as boolean,\n      },\n      SortColumn: preFormattedValues.SortColumn as SortColumn,\n      UseStaticApr: false,\n    };\n\n    if (preFormattedValues.ShowAsTwoYear) formattedValues.SchemePeriods.push('1');\n    if (preFormattedValues.ShowAsThreeYear) formattedValues.SchemePeriods.push('2');\n    if (preFormattedValues.ShowAsFiveYear) formattedValues.SchemePeriods.push('3');\n    if (preFormattedValues.ShowAsLongTerm) formattedValues.SchemePeriods.push('4');\n\n    if (preFormattedValues.ShowAsFix) formattedValues.SchemeTypes.push('1');\n    if (preFormattedValues.ShowAsVar) formattedValues.SchemeTypes.push('2');\n\n    this.formattedValues = formattedValues;\n\n    return formattedValues;\n  }\n\n  private async handleAzureRequest(): Promise<void> {\n    if (isStaging) {\n      console.groupCollapsed('API Call');\n      console.time('API Request');\n      console.log(this);\n    }\n\n    try {\n      const result = await this.makeAzureRequest();\n      this.result = result.result as unknown as BestBuyResult;\n      if (isStaging) console.log(result);\n      if (!this.result || this.result === null || !this.result.success || this.result.data.length === 0) {\n        this.toggleLoading(false);\n      } else {\n        this.clearResults();\n        this.displayResults(0, 10);\n        this.toggleLoading(true);\n      }\n    } catch (error) {\n      console.error('Error retrieving calculation', error);\n      this.toggleLoading(false);\n    }\n\n    if (isStaging) {\n      console.timeEnd('API Request');\n      console.groupEnd();\n      console.log(this);\n    }\n  }\n\n  private async makeAzureRequest(): Promise<APIResponse> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    const body = JSON.stringify({ input: this.getValues() });\n\n    const response = await fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API responded with status ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  private clearResults(): void {\n    this.resultsList.innerHTML = '';\n  }\n\n  private displayResults(startIndex: number, show: number): void {\n    if (!this.result) return;\n\n    this.result.data.forEach((item, index) => {\n      if (index < startIndex || index > startIndex + show - 1) return;\n\n      const clone = this.clone.cloneNode(true) as HTMLDivElement;\n      clone.style.removeProperty('display');\n      clone.setAttribute('data-productId', item.ProductId as string);\n\n      const outputs = queryElements(`[${attr}-output]`, clone) as HTMLDivElement[];\n      outputs.forEach((output) => {\n        const key = output.dataset.bbOutput;\n        if (!key) return;\n\n        const value = item[key];\n        if (value === 0 || value === '' || item[key]) {\n          if (typeof value === 'number') {\n            output.textContent = numberToCurrency(value);\n          } else if (output.nodeName === 'IMG' && output instanceof HTMLImageElement) {\n            output.src = value as string;\n          } else {\n            output.textContent = value as string;\n          }\n        }\n      });\n\n      const moreToggle = queryElement(`[${attr}-el=\"more-toggle\"]`, clone);\n      const moreText = queryElement(`[${attr}-el=\"more-text\"]`, clone);\n      const moreIcon = queryElement(`[${attr}-el=\"more-icon\"]`, clone);\n      const moreContent = queryElement(`[${attr}-el=\"more-content\"]`, clone);\n\n      if (moreToggle && moreText && moreIcon && moreContent) {\n        let isOpen = false;\n\n        moreToggle.addEventListener('click', () => {\n          moreText.textContent = isOpen ? 'More info' : 'Less info';\n          moreIcon.style.transform = isOpen ? 'rotate(0deg)' : 'rotate(45deg)';\n          moreContent.style.display = isOpen ? 'none' : 'block';\n\n          isOpen = !isOpen;\n        });\n      }\n\n      const button = queryElement('.button', clone) as HTMLLinkElement;\n      if (button) {\n        setSearchParameter(button, [\n          {\n            key: 'purchaseOrRemortgage',\n            value: this.formattedValues.SchemePurpose === '1' ? 'p' : 'r',\n          },\n          {\n            key: 'residentialOrBuyToLet',\n            value: this.formattedValues.MortgageType === '1' ? 'r' : 'b',\n          },\n        ]);\n      }\n\n      this.resultsList.appendChild(clone);\n    });\n\n    this.numberOfResultsShown += show;\n\n    if (this.numberOfResultsShown < this.result.data.length) {\n      this.loadMoreWrapper.style.display = 'flex';\n    } else {\n      this.loadMoreWrapper.style.removeProperty('display');\n    }\n\n    dialogs();\n  }\n\n  private scrollIntoView(productId?: string): void {\n    let component;\n\n    if (!productId) {\n      component = queryElement('.best-buy_main');\n    } else {\n      component = queryElement(`.bb-result_component[data-productId=\"${productId}\"]`, this.resultsList);\n      const moreToggle = queryElement(`[${attr}-el=\"more-toggle\"]`, component);\n      if (!moreToggle) return;\n      simulateEvent(moreToggle, 'click');\n    }\n\n    if (!component) return;\n\n    component.scrollIntoView({ behavior: 'instant' });\n    window.scrollBy(0, -32);\n  }\n}\n", "export { addListener } from './addListener';\nexport { clearFormField } from './clearFormField';\nexport { cloneNode } from './cloneNode';\nexport { extractCommaSeparatedValues } from './extractCommaSeparatedValues';\nexport { extractNumberFromString } from './extractNumberFromString';\nexport { extractNumberSuffix } from './extractNumberSuffix';\nexport { findTextNode } from './findTextNode';\nexport { getAllParents } from './getAllParents';\nexport { getDistanceFromTop } from './getDistanceFromTop';\nexport { getFormFieldValue } from './getFormFieldValue';\nexport { getHiddenParent } from './getHiddenParent';\nexport { getObjectEntries } from './getObjectEntries';\nexport { getObjectKeys } from './getObjectKeys';\nexport { isScrollable } from './isScrollable';\nexport { isVisible } from './isVisible';\nexport { noop } from './noop';\nexport { queryElement } from './queryElement';\nexport { removeChildElements } from './removeChildElements';\nexport { removeSpaces } from './removeSpaces';\nexport { removeTrailingSlash } from './removeTrailingSlash';\nexport { sameValues } from './sameValues';\nexport { selectInputElement } from './selectInputElement';\nexport { setFormFieldValue } from './setFormFieldValue';\nexport { simulateEvent } from './simulateEvent';\nexport { throwError } from './throwError';\nexport { wait } from './wait';\n", "/**\n * Dispatches a custom event that bubbles from the target.\n * @param target The element where the event will originate.\n * @param events The event name or an array of event names.\n * @returns True if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\nexport const simulateEvent = (target, events) => {\n    if (!Array.isArray(events))\n        events = [events];\n    const eventsSuccess = events.map((event) => target.dispatchEvent(new Event(event, { bubbles: true })));\n    return eventsSuccess.every((success) => success);\n};\n", "import { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\n\nexport const dialogs = (component: HTMLElement = document.body) => {\n  const attr = 'data-dialog';\n  const components = queryElements<HTMLDivElement>(`[${attr}=\"component\"]`);\n\n  components.forEach((component) => {\n    // get the required elemenets\n    const open = queryElement<HTMLButtonElement>(`[${attr}=\"open\"]`, component);\n    const dialog = queryElement<HTMLDialogElement>('dialog', component);\n    const close = queryElement<HTMLButtonElement>(`[${attr}=\"close\"]`, component);\n\n    if (!open || !dialog || !close) return;\n\n    // open the dialog\n    open.addEventListener('click', () => {\n      dialog.showModal();\n    });\n\n    // close the dialog\n    close.addEventListener('click', () => {\n      dialog.close();\n    });\n  });\n};\n", "export * from './checkInputValidity';\nexport * from './clearInput';\nexport * from './formatInput';\nexport * from './getInputValue';\nexport * from './handleEnterInInputs';\nexport * from './setError';\nexport * from './syncSlider';\n", "import type { Input } from 'src/types';\n\nexport function checkInputValidity(input: Input): { isValid: boolean; error: string | undefined } {\n  let isValid = true,\n    error: string | undefined;\n\n  if (input instanceof HTMLInputElement) {\n    const { type, required, value } = input;\n\n    // Check for required input explicitly\n    if (required && !value.trim()) {\n      isValid = false;\n      error = 'This field is required.';\n      return { isValid, error };\n    }\n\n    switch (type) {\n      case 'number':\n        const { min, max } = input;\n        let minValid = true;\n        if (!!min) minValid = Number(value) >= Number(min);\n\n        let maxValid = true;\n        if (!!max) maxValid = Number(value) <= Number(max);\n\n        isValid = minValid && maxValid;\n        if (isValid) break;\n\n        error = !minValid\n          ? `Input needs to be ${min} or higher`\n          : `Input needs to be ${max} or less`;\n        break;\n      default:\n        isValid = input.checkValidity();\n        error = isValid ? undefined : input.validationMessage;\n        break;\n    }\n  } else if (input instanceof HTMLSelectElement) {\n    isValid = input.checkValidity();\n    error = isValid ? undefined : input.validationMessage;\n  }\n\n  return {\n    isValid,\n    error,\n  };\n}\n", "import type { Input } from 'src/types';\n\nexport function clearInput(input: Input): void {\n  if (input instanceof HTMLInputElement) {\n    input.value = '';\n  } else if (input instanceof HTMLSelectElement) {\n    input.selectedIndex = 0;\n  }\n}\n", "import type { Input } from 'src/types';\n\nimport { queryElements } from '$utils/dom';\n\nexport function formatInput(input: Input): void {\n  if (input instanceof HTMLInputElement) {\n    const { type, value } = input;\n    if (type !== 'number') return;\n\n    const { step } = input;\n\n    if (Number(step) < 1) return;\n\n    input.value = Math.round(Number(value)).toString();\n  } else if (input.type === 'fieldset') {\n    const radios = queryElements('input[type=\"radio\"]') as HTMLInputElement[];\n    radios.forEach((radio) => {\n      const { parentElement, checked } = radio;\n      if (!parentElement) return;\n      if (checked) {\n        parentElement.classList.add('checked');\n      } else {\n        parentElement.classList.remove('checked');\n      }\n    });\n  }\n}\n", "export * from './createElement';\nexport * from './getWrapper';\nexport * from './handleConditionalVisibility';\nexport * from './queryElement';\nexport * from './queryelements';\n", "/**\n * A function to programatically create an element of any type\n * @param type what type of element is it\n * @param location to what element should it be added as a child to\n * @param options what additional items should be added, e.g. class, dataset, text, callback or attribute\n * @returns the HTML element\n */\n\ntype CallBackType = (ev: Event) => void;\n\nexport const createElement = (\n  type: string,\n  location: HTMLHeadElement | HTMLBodyElement,\n  options: { [key: string]: string | boolean | CallBackType } = {}\n) => {\n  const element = document.createElement(type);\n\n  Object.entries(options).forEach(([key, value]) => {\n    switch (key) {\n      case 'class':\n        element.classList.add(value as string);\n        break;\n      case 'dataset':\n        Object.entries(value).forEach(([dataKey, dataValue]) => {\n          element.dataset[dataKey] = dataValue;\n        });\n        break;\n      case 'text':\n        element.textContent = value as string;\n        break;\n      case 'callback':\n        element.onload = value as CallBackType;\n        break;\n      default:\n        element.setAttribute(key, value as string);\n        break;\n    }\n  });\n\n  location.appendChild(element);\n  return element;\n};\n", "import type { Input } from 'src/types';\n\nexport function getWrapper(input: Input): HTMLElement | undefined {\n  let child = input as HTMLElement,\n    wrapper: HTMLElement | undefined;\n\n  while (child) {\n    if (\n      child.parentElement &&\n      child.parentElement.classList &&\n      child.parentElement.classList.contains('custom-field_component')\n    ) {\n      wrapper = child.parentElement;\n      break;\n    } else if (child.parentElement) {\n      child = child.parentElement;\n    } else {\n      break;\n    }\n  }\n\n  return wrapper;\n}\n", "import type { Input } from 'src/types';\n\nimport { queryElement } from '$utils/dom';\nimport { getInputValue } from '$utils/input';\n\nexport function handleConditionalVisibility(item: HTMLElement, inputs: Input[]): void {\n  const { condition } = item.dataset;\n  if (!condition) return;\n\n  const parsedCondition = JSON.parse(condition);\n\n  const input = inputs.find((input) => input.dataset.input === parsedCondition.dependsOn);\n  if (!input) return;\n\n  let conditionsMet = false;\n\n  switch (parsedCondition.operator) {\n    case 'equal':\n      conditionsMet = getInputValue(input) === parsedCondition.value;\n      break;\n    case 'notequal':\n      conditionsMet = getInputValue(input) !== parsedCondition.value;\n      break;\n  }\n\n  item.style.display = conditionsMet ? 'block' : 'none';\n  const itemInput = queryElement('[data-input]', item) as Input;\n  if (itemInput) {\n    itemInput.dataset.conditionsmet = conditionsMet.toString();\n  }\n}\n", "import type { Input } from 'src/types';\n\nimport { queryElement } from '$utils/dom';\n\nexport function getInputValue(input: Input): string | boolean | undefined {\n  let value;\n\n  if (input instanceof HTMLInputElement || input instanceof HTMLSelectElement) {\n    value = input.value;\n  } else if (input instanceof HTMLFieldSetElement) {\n    const checkedRadio = queryElement('input[type=\"radio\"]:checked', input) as HTMLInputElement;\n    value = checkedRadio.value;\n  }\n\n  if (input instanceof HTMLInputElement && input.type === 'checkbox') {\n    value = input.checked;\n  }\n\n  if (value === 'true' || value === 'on' || value === 'Y') {\n    value = true;\n  } else if (value === 'false' || value === 'off' || value === 'N') {\n    value = false;\n  }\n\n  return value;\n}\n", "import type { Input } from 'src/types';\n\n/**\n * Function to run a callback on Enter when input is focused and remove the listener on focus out\n * @param input The input to add the listeners to\n * @param callback The function to run/remove on focus change\n */\nexport const handleEnterInInputs = (input: Input, callback: () => void) => {\n  const runOnEnterWrapper = (event: Event) => {\n    runOnEnter(event as KeyboardEvent);\n  };\n\n  input.addEventListener('focus', handleFocus, true);\n  input.addEventListener('blur', handleBlur, true);\n  input.addEventListener('input', handleInput, true);\n\n  function handleFocus(): void {\n    input.addEventListener('keydown', runOnEnterWrapper);\n  }\n\n  function handleBlur(): void {\n    input.removeEventListener('keydown', runOnEnterWrapper);\n  }\n\n  function handleInput(): void {\n    input.removeEventListener('keydown', runOnEnterWrapper);\n  }\n\n  function runOnEnter(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      callback();\n    }\n  }\n};\n", "import type { Input } from 'src/types';\n\nimport { getWrapper } from '../dom/getWrapper';\nimport { queryElement } from '../dom/queryElement';\n\nexport function setError(input: Input, text?: string): void {\n  const wrapper = getWrapper(input);\n\n  if (!wrapper) return;\n\n  const message = queryElement('[data-calc-el=\"message\"]', wrapper);\n  const error = queryElement('[data-calc-el=\"error\"]', wrapper);\n\n  if (!error) return;\n\n  if (text) {\n    error.textContent = text;\n    error.style.display = 'block';\n    if (message) message.style.display = 'none';\n  } else {\n    error.style.display = 'none';\n    if (message) message.style.removeProperty('display');\n  }\n}\n", "export function syncSlider(inputId: string, initialValue: number) {\n  const input = document.getElementById(inputId) as HTMLInputElement | null;\n  if (!input) return;\n\n  const wrapper = document.querySelector(`[fs-rangeslider-calc=\"${inputId}\"]`);\n  const handle = document.querySelector(`[fs-rangeslider-handlename=\"${inputId}\"]`) as HTMLElement;\n  const fill = document.querySelector(`[fs-rangeslider-fillname=\"${inputId}\"]`) as HTMLElement;\n  if (!wrapper || !handle) return;\n\n  const updateSliderUI = () => {\n    const value = parseFloat(input.value);\n    if (isNaN(value)) return;\n\n    const min = parseFloat(input.min || handle.getAttribute('aria-valuemin') || '0');\n    const max = parseFloat(input.max || handle.getAttribute('aria-valuemax') || '100');\n    const clamped = Math.min(Math.max(value, min), max);\n    const percent = ((clamped - min) / (max - min)) * 100;\n\n    const trackWidth = wrapper.clientWidth;\n    const pixelOffset = (percent / 100) * trackWidth;\n\n    handle.style.left = `${pixelOffset}px`;\n    fill.style.width = `${pixelOffset}px`;\n  };\n\n  updateSliderUI();\n\n  // On input update\n  input.addEventListener('input', updateSliderUI);\n}\n", "export * from './getBaseURLForAPI';\nexport * from './isStaging';\n", "export * from './filterAllowed';\nexport * from './formatNumber';\nexport * from './getOrdinalDate';\nexport * from './numberToCurrency';\n", "export function filterAllowed<T extends number>(values: (string | number)[], allowed: readonly T[]): T[] {\n  return values.map(Number).filter((v): v is T => allowed.includes(v as T));\n}\n", "/**\n * Formats a number as a string: plain number, currency, or percent.\n * @param value - The number as a string or number (e.g. \"270000\" or 270000)\n * @param options - Optional formatting options\n *   - type: 'number' | 'currency' | 'percent' (default: 'number')\n *   - decimals: number of decimal places (default: 0 for number/currency, 2 for percent)\n *   - fallback: string (default: \"\") - Value to return if input is not a valid number\n * @returns The formatted string (e.g. \"\u00A3270,000\", \"270,000\", or \"75.00%\")\n */\nexport function formatNumber(\n  value: string | number,\n  options?: { type?: 'number' | 'currency' | 'percent'; decimals?: number; fallback?: string }\n): string {\n  const { type = 'number', decimals, fallback = '' } = options || {};\n  let num = typeof value === 'number' ? value : parseFloat(value.replace(/,/g, ''));\n  if (isNaN(num)) return fallback;\n\n  if (type === 'currency') {\n    const formatted = num.toLocaleString('en-GB', {\n      maximumFractionDigits: decimals ?? 0,\n      minimumFractionDigits: decimals ?? 0,\n    });\n    return `\u00A3${formatted}`;\n  }\n\n  if (type === 'percent') {\n    const d = decimals ?? 2;\n    const percentValue = num;\n    const formatted = percentValue.toLocaleString('en-GB', { maximumFractionDigits: d, minimumFractionDigits: d });\n    return `${formatted}%`;\n  }\n\n  // Default: plain number\n  const formatted = num.toLocaleString('en-GB', {\n    maximumFractionDigits: decimals ?? 0,\n    minimumFractionDigits: decimals ?? 0,\n  });\n  return formatted;\n}\n", "export const getOrginalDate = (date: Date): string => {\n  const day = date.toLocaleDateString('en-GB', { weekday: 'short', day: 'numeric' });\n  const dayNumber = date.getDate();\n  const suffix = getOrdinalSuffix(dayNumber);\n  return day.replace(/\\d+/, dayNumber + suffix);\n};\n\nexport const getOrdinalSuffix = (day: number): string => {\n  if (day > 3 && day < 21) return 'th'; // Catch 11th, 12th, 13th\n  switch (day % 10) {\n    case 1:\n      return 'st';\n    case 2:\n      return 'nd';\n    case 3:\n      return 'rd';\n    default:\n      return 'th';\n  }\n};\n", "export * from './getFromCookie';\nexport * from './setSearchParameter';\nexport * from './setToCookie';\n", "export const getFromCookie = (key: string): string | null => {\n  const cookie = document.cookie.split('; ').find((row) => row.startsWith(`${key}=`));\n  if (cookie) return cookie.split('=')[1];\n  return null;\n};\n", "export const setToCookie = (key: string, value: string) => {\n  document.cookie = `${key}=${value}; path=/`;\n};\n", "import { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\n\nimport { HandleCalculator } from './handleCalculator';\n\nexport const calculators = () => {\n  const attr = 'data-calc';\n\n  // Forces Outputs to Sliders - Mortgage Calc page New\n  const repaymentValueSlider = queryElement<HTMLInputElement>(`[data-input=\"RepaymentValue\"]`);\n  const depositAmountSlider = queryElement<HTMLInputElement>(`[data-input=\"DepositAmountSlider\"]`);\n  const rateSlider = queryElement<HTMLInputElement>(`[data-input=\"Rate\"]`);\n\n  if (repaymentValueSlider) repaymentValueSlider.setAttribute(`${attr}-output`, 'BorrowingAmountHigher');\n  if (depositAmountSlider) depositAmountSlider.setAttribute(`${attr}-output`, 'DepositAmount');\n  if (rateSlider) rateSlider.setAttribute(`${attr}-output`, 'InitialRate');\n  // ----- End\n\n  const components = queryElements<HTMLDivElement>(`[${attr}]`);\n\n  components.forEach((component) => {\n    const calculator = new HandleCalculator(component);\n    calculator.init();\n  });\n};\n", "import { API_ENDPOINTS } from 'src/constants';\nimport type { APIResponse, Result } from 'src/types';\n\nimport { handleEnterInInputs } from '$utils/input/handleEnterInInputs';\nimport { isStaging } from '$utils/environment/isStaging';\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\nimport { syncSlider } from '$utils/input/syncSlider';\n\nimport { type CalculatorConfig, calculatorConfig } from './calculatorConfig';\nimport { HandleInputs } from './handleInputs';\nimport { HandleOutputs } from './handleOutputs';\n\nconst attr = 'data-calc';\nconst API_ENDPOINT = API_ENDPOINTS.calculatorTrigger;\nconst API_ENDPOINT_PRODUCT = API_ENDPOINTS.productsTrigger;\n\nexport class HandleCalculator {\n  name: string;\n  component: HTMLDivElement;\n  config: CalculatorConfig;\n  inputs: HandleInputs;\n  private outputs: HandleOutputs;\n  private conditionals: HTMLElement[];\n  private button: HTMLButtonElement;\n  private buttonText: HTMLDivElement;\n  private buttonLoader: HTMLDivElement;\n  private isLoading: boolean;\n  private result?: Result;\n  private isSyncing: boolean;\n\n  constructor(component: HTMLDivElement) {\n    this.name = component.dataset.calc as string;\n    this.component = component;\n    this.config = calculatorConfig[this.name];\n    this.inputs = new HandleInputs(this);\n    this.outputs = new HandleOutputs(this);\n    this.conditionals = queryElements(`[data-condition]`, this.component);\n    this.button = queryElement(`[${attr}-el=\"button\"]`, this.component) as HTMLButtonElement;\n    this.buttonText = queryElement(`[${attr}-el=\"button-text\"]`, this.button) as HTMLDivElement;\n    this.buttonLoader = queryElement(`[${attr}-el=\"button-loader\"]`, this.button) as HTMLDivElement;\n    this.isLoading = false;\n    this.isSyncing = false;\n  }\n\n  init(): void {\n    this.inputs.init();\n    if (isStaging) {\n      this.inputs.check();\n      this.outputs.check();\n      console.groupEnd();\n    }\n\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    this.inputs.all.forEach((input) => {\n      handleEnterInInputs(input, () => {\n        this.submit();\n      });\n    });\n\n    this.button.addEventListener('click', () => {\n      this.submit();\n    });\n  }\n\n  submit(): void {\n    this.toggleLoading();\n    const isValid = this.inputs.validateInputs();\n    const allPresent = this.inputs.check();\n    // cancel if inputs are invalid or not all present\n    if (!isValid || !allPresent) {\n      if (isStaging) console.log('inputs not valid or not all present');\n      this.toggleLoading(false);\n      return;\n    }\n    this.handleAzureRequest();\n  }\n\n  private toggleLoading(success?: boolean): void {\n    this.isLoading = !this.isLoading;\n    if (this.isLoading) {\n      this.buttonText.style.opacity = '0';\n      this.buttonLoader.style.opacity = '1';\n    } else if (success) {\n      this.buttonText.textContent = 'Recalculate';\n      this.buttonText.style.opacity = '1';\n      this.buttonLoader.style.opacity = '0';\n    } else {\n      this.buttonText.textContent = 'Try again...';\n      this.buttonText.style.opacity = '1';\n      this.buttonLoader.style.opacity = '0';\n    }\n  }\n\n  private async handleAzureRequest(): Promise<void> {\n    if (isStaging) {\n      console.groupCollapsed('API Call');\n      console.time('API Request');\n    }\n    try {\n      const result = await this.makeAzureRequest();\n      this.result = result.result;\n\n      // --- MORT v2 -- Check if `data-results` is set in `calculator.component` - New Mortgage Calc\n      const resultsId = this.component.getAttribute('data-results');\n      const calcName = this.component.getAttribute('data-calc');\n\n      if (resultsId && calcName === 'residentialborrowinglimit') {\n        // Find the calculator with `data-calc=\"mortgagecost\"` and trigger calculation\n        const mortgageCalcComponent = document.querySelector('[data-calc=\"mortgagecost\"]') as HTMLDivElement;\n        if (mortgageCalcComponent) {\n          const mortgageCalc = new HandleCalculator(mortgageCalcComponent);\n          mortgageCalc.submit();\n\n          // To return single product\n          const mortInputs = mortgageCalc.inputs.getValues();\n          const calcInputs = this.inputs.getValues();\n\n          const DepositAmount = parseFloat((calcInputs['DepositAmount'] as string) || '0');\n          const RepaymentValue = parseFloat((mortInputs['RepaymentValue'] as string) || '0');\n          const PropertyValue = RepaymentValue + DepositAmount;\n\n          syncSlider('DepositAmountSlider', DepositAmount);\n          syncSlider('RepaymentValue', RepaymentValue);\n          // Get Product Update\n\n          const prodresult = await this.makeAzureRequestProduct({\n            PropertyValue,\n            RepaymentValue,\n            TermYears: parseFloat((mortInputs['TermYears'] as string) || '0'),\n            PropertyType: 1,\n            MortgageType: 1,\n          });\n\n          if (prodresult) {\n            this.populateProductCard(prodresult.result);\n\n            const mortPickTitle = document.querySelector('#mortPickTitle');\n            const mortPickArea = document.querySelector('#mortPickArea');\n            if (prodresult.result.success) {\n              if (mortPickTitle && mortPickArea) {\n                (mortPickTitle as HTMLElement).style.display = 'flex';\n                (mortPickArea as HTMLElement).style.display = 'flex';\n              }\n            } else {\n              if (mortPickTitle && mortPickArea) {\n                (mortPickTitle as HTMLElement).style.display = 'none';\n                (mortPickArea as HTMLElement).style.display = 'none';\n              }\n            }\n          }\n        }\n      }\n\n      if (this.result === null) {\n        this.toggleLoading(false);\n      } else {\n        this.toggleLoading(true);\n        this.outputs.displayResults(this.result);\n      }\n      if (resultsId && calcName === 'residentialborrowinglimit') {\n        if (this.result) {\n          this.scrollToDiv(resultsId);\n        }\n      }\n    } catch (error) {\n      console.error('Error retrieving calculation', error);\n      this.toggleLoading(false);\n    }\n\n    if (isStaging) {\n      console.timeEnd('API Request');\n      console.groupEnd();\n    }\n  }\n\n  private scrollToDiv(id: string): void {\n    const targetElement = document.querySelector('#' + id);\n\n    if (targetElement) {\n      targetElement.scrollIntoView({\n        behavior: 'smooth', // Smooth scroll\n        block: 'start', // Align to the top of the viewport\n      });\n    }\n  }\n\n  private populateProductCard(results: Result): void {\n    if (!results.data || !Array.isArray(results.data)) return;\n\n    document.querySelectorAll('[data-calc-output]').forEach((output) => {\n      const key = output.getAttribute('data-calc-output');\n      if (!key || !(key in results.data[0])) return;\n\n      const value = results.data[0][key];\n      const stringValue = typeof value === 'object' ? JSON.stringify(value) : String(value);\n\n      if (output instanceof HTMLImageElement) {\n        output.src = stringValue;\n        output.alt = key;\n      } else {\n        output.textContent = stringValue;\n      }\n    });\n  }\n\n  private calculateMonthlyPayment(borrowAmount: number, termYears: any, annualRate: any) {\n    const n = termYears * 12; // Total number of monthly payments\n    const r = annualRate / 100 / 12; // Convert annual rate to monthly rate\n\n    if (r === 0) {\n      // If interest rate is 0, simple division\n      return borrowAmount / n;\n    }\n\n    return (borrowAmount * r * Math.pow(1 + r, n)) / (Math.pow(1 + r, n) - 1);\n  }\n\n  private async makeAzureRequest(): Promise<APIResponse> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    // New Mortgage Calcu\n    const values = this.inputs.getValues(); // Get input values\n    const depositValue = values['DepositAmount'];\n    const depositAmount = parseFloat(typeof depositValue === 'string' ? depositValue : '0');\n    const borrowValue = values['RepaymentValue'];\n    const borrowAmount = parseFloat(typeof borrowValue === 'string' ? borrowValue : '0');\n    const depositSliderValue = values['DepositAmountSlider'];\n    const depositSliderAmount = parseFloat(typeof depositSliderValue === 'string' ? depositSliderValue : '0');\n\n    const body = JSON.stringify({ calculator: this.name, input: values });\n\n    const response = await fetch(API_ENDPOINT, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API responded with status ${response.status}`);\n    }\n\n    const result = await response.json();\n    let monthlyRepayment;\n\n    // Adjust Result to add Calulations not brought back from API for New Mortgage Calc\n    if (depositAmount > 0 && result) {\n      if (result.result.BorrowingAmountLower) {\n        //monthlyRepayment = this.calculateMonthlyPayment(borrowAmount, 25, 4.65)\n        result.result.DepositAmount = depositAmount;\n        result.result.PropertyValue = parseFloat(result.result.BorrowingAmountHigher) + depositAmount;\n        result.result.RepaymentValue = parseFloat(result.result.BorrowingAmountHigher);\n        result.result.TermYears = 25;\n        //result.result.FutureMonthlyPayment = monthlyRepayment\n      }\n    }\n\n    if (result.result.TotalOverTerm) {\n      monthlyRepayment = this.calculateMonthlyPayment(borrowAmount, values['TermYears'], values['Rate']);\n\n      result.result.TotalOverTerm = Math.round(result.result.TotalOverTerm);\n      result.result.DepositAmount = depositSliderAmount;\n      result.result.PropertyValue = borrowAmount + depositSliderAmount;\n      result.result.RepaymentValue = borrowAmount;\n      result.result.TermYears = values['TermYears'];\n      result.result.FutureMonthlyPayment = monthlyRepayment\n        ? Math.round(monthlyRepayment)\n        : Math.round(result.result.FutureMonthlyPayment);\n    }\n\n    return result;\n  }\n\n  private async makeAzureRequestProduct({\n    PropertyValue,\n    PropertyType = 1,\n    MortgageType = 1,\n    RepaymentValue,\n    TermYears,\n    NumberOfResults = 1,\n  }: {\n    PropertyValue: number;\n    PropertyType?: number;\n    MortgageType?: number;\n    RepaymentValue: number;\n    TermYears: number;\n    NumberOfResults?: number;\n  }): Promise<APIResponse> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    // Construct request body using function parameters\n    const body = JSON.stringify({\n      input: {\n        PropertyValue, // Market value of property\n        PropertyType, // 1 for house; 2 for flat\n        MortgageType, // 1 for Residential; 2 for Buy to Let\n        RepaymentValue, // Repayment amount\n        InterestOnlyValue: '0', // Interest-only value\n        TermYears, // Mortgage term in whole years\n        SchemePurpose: '1', // 1 for Purchase; 2 for Remortgage\n        SchemePeriods: ['1'], // Array of mortgage scheme durations (1, 2, 3, 4)\n        SchemeTypes: ['1'], // Array of scheme types (Fixed = 1, Variable = 2)\n        NumberOfResults, // Total number of products to return\n        Features: {\n          Erc: false, // ERC feature flag\n          Offset: false, // Offset feature flag\n          NewBuild: false, // New Build feature flag\n        },\n        SortColumn: '1', // Sorting column for results (1-6)\n        UseStaticApr: false, // Whether to use a static APR\n      },\n    });\n\n    const response = await fetch(API_ENDPOINT_PRODUCT, {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(`API responded with status ${response.status}`);\n    }\n\n    const result = await response.json();\n\n    if (result.result.data[0].FutureMonthlyPayment) {\n      result.result.data[0].FutureMonthlyPayment = Math.round(result.result.data[0].FutureMonthlyPayment);\n      result.result.data[0].InitialRate = result.result.data[0].Rate;\n      result.result.data[0].TermYears = result.result.data[0].TermYears;\n    }\n\n    const rateSlider = document.querySelector('[data-input=\"Rate\"]') as HTMLInputElement | null;\n    if (rateSlider) {\n      rateSlider.setAttribute('value', result.result.data[0].Rate);\n      rateSlider.setAttribute('placeholder', result.result.data[0].Rate);\n    }\n\n    return result;\n  }\n}\n", "export interface CalculatorInputs {\n  names: string[];\n  repeats?: string[];\n}\n\nexport interface CalculatorOutputs {\n  names: string[];\n  repeats?: string[];\n}\n\nexport interface CalculatorConfig {\n  inputs: CalculatorInputs;\n  outputs: CalculatorOutputs;\n  ifError?: string; // \"There seems to be a problem with the calculator, please verify your input values.\"\n}\n\nexport interface CalculatorConfigs {\n  [key: string]: CalculatorConfig;\n}\n\nexport const calculatorConfig: CalculatorConfigs = {\n  residentialborrowinglimit: {\n    inputs: { names: ['Applicant1Income', 'Applicant2Income', 'DepositAmount'] },\n    outputs: { names: ['BorrowingAmountLower', 'BorrowingAmountHigher',] },\n  },\n  buytoletborrowinglimit: {\n    inputs: { names: ['RentalIncome'] },\n    outputs: { names: ['BorrowingAmountLower', 'BorrowingAmountHigher'] },\n  },\n  mortgagecost: {\n    inputs: { names: ['RepaymentValue', 'TermYears', 'Rate', 'PaymentType'] },\n    outputs: {\n      names: [\n        'MonthlyPayment',\n        'TotalOverTerm',\n        'CapitalRepayment',\n        'InterestRepayment',\n        'ChartLabels',\n        'ChartDate',\n      ],\n    },\n  },\n  houseprice: {\n    inputs: {\n      names: [\n        'Number',\n        'SubBuildingName',\n        'BuildingName',\n        // 'DependentStreet',\n        'Street',\n        'Postcode',\n      ],\n    },\n    outputs: {\n      names: [\n        'PropertyValue',\n        'ValuationUpper',\n        'ValuationLower',\n        'MonthlyRental',\n        'MonthlyRentalUpper',\n        'MonthlyRentalLower',\n      ],\n    },\n  },\n  loantovalue: {\n    inputs: { names: ['PropertyValue', 'Type', 'DepositAmount', 'LoanAmount', 'LoanToValue'] },\n    outputs: { names: ['LoanAmount', 'DepositAmount', 'LoanToValue'] },\n  },\n  stampduty: {\n    inputs: { names: ['PurchasePrice', 'Location', 'FirstTimeBuyer', 'SecondProperty'] },\n    outputs: {\n      names: ['BandRate', 'BandValue', 'BandCost', 'TotalCost'],\n      repeats: ['StampDutyData'],\n    },\n  },\n  overpayment: {\n    inputs: {\n      names: [\n        'LoanAmount',\n        'Rate',\n        'Term',\n        'LoanType',\n        'Value',\n        'EventDate',\n        'RegularPayment',\n        'Frequency',\n      ],\n      repeats: ['OverpaymentEvents'],\n    },\n    outputs: {\n      names: [\n        'ChartLabels',\n        'ChartData',\n        'ChartData2',\n        'OverpayingSaving',\n        'OverpayingInterest',\n        'OverpayingTerm',\n      ],\n    },\n  },\n  ratechange: {\n    inputs: { names: ['LoanAmount', 'CurrentRate', 'Term', 'ChangeRate', 'PaymentType'] },\n    outputs: { names: ['CurrentPayment', 'NewPayment'] },\n  },\n  interest: {\n    inputs: { names: ['AmountInvested', 'InterestRate', 'TaxStatus'] },\n    outputs: { names: ['TaxRate', 'MonthlyInterest'] },\n  },\n  lifeinsurance: {\n    inputs: {\n      names: [\n        'Income',\n        'Spouse',\n        // 'ChildAge',\n        'University',\n        'LoanAmount',\n        'Rent',\n        'TotalLoans',\n        'TotalCreditCards',\n        'TotalSavings',\n        'TotalLifeInsurance',\n        'OtherAssets',\n      ],\n      repeats: ['ChildAge'],\n    },\n    outputs: {\n      names: [\n        'IncomeReplacement',\n        'ChildrenCover',\n        'UniversityCover',\n        'HousingCover',\n        'Debts',\n        'Assets',\n        'TotalCoverRequired',\n      ],\n    },\n  },\n  savings: {\n    inputs: {\n      names: ['RequiredAmount', 'GrowthRate', 'DepositAmount', 'MonthlyInvestmentAmount', 'Term'],\n    },\n    outputs: { names: ['SavingsTermTotal', 'SavingsTotalPerMonth', 'ChartLabels', 'ChartData'] },\n  },\n  offsetmortgage: {\n    inputs: {\n      names: [\n        'LoanAmount',\n        'Rate',\n        'Term',\n        'Fee',\n        'SavingsAmount',\n        'SavingsRate',\n        'MonthlySavings',\n        'OffsetRate',\n        'OffsetFees',\n        'CompareTerm',\n        'TaxStatus',\n      ],\n    },\n    outputs: {\n      names: [\n        'OffsetStandardMonthly',\n        'OffsetMonthly',\n        'OffsetStandardInterestCost',\n        'OffsetInterestCost',\n        'OffsetInterestEarned',\n        'ChartLabels',\n        'ChartData',\n        'ChartData2',\n      ],\n    },\n  },\n  bmi: {\n    inputs: { names: ['Height', 'Weight'] },\n    outputs: { names: ['Bmi'] },\n  },\n  comparerates: {\n    inputs: {\n      names: [\n        'PropertyValue',\n        'LoanAmount',\n        'Term',\n        'Type',\n        'CurrentRate',\n        'CurrentFees',\n        'CurrentType',\n        'CurrentSchemeLength',\n        'CurrentFollowOn',\n        'CompareRate',\n        'CompareFees',\n        'CompareType',\n        'CompareSchemeLength',\n        'CompareFollowOn',\n        'ERCAmount',\n        'ERCTerm',\n        'ERCAdd',\n        'ComparisonTerm',\n        'InterestRateEnvironment',\n      ],\n    },\n    outputs: { names: ['CostOfRate1', 'CostOfRate2', 'ChartLabels', 'ChartData', 'ChartData2'] },\n  },\n  rentprice: {\n    inputs: {\n      names: [\n        'Number',\n        'SubBuildingName',\n        'BuildingName',\n        'DependentStreet',\n        'Street',\n        'Postcode',\n        'addressId',\n      ],\n    },\n    outputs: {\n      names: [\n        'PropertyValue',\n        'ValuationUpper',\n        'ValuationLower',\n        'MonthlyRental',\n        'MonthlyRentalUpper',\n        'MonthlyRentalLower',\n      ],\n    },\n  },\n  costofdoingnothing: {\n    inputs: {\n      names: [\n        'PropertyValue',\n        'LoanAmount',\n        'Term',\n        'Type',\n        'CurrentRate',\n        'CurrentFees',\n        'CurrentType',\n        'CurrentSchemeLength',\n        'CurrentFollowOn',\n        'CompareRate',\n        'CompareFees',\n        'CompareType',\n        'CompareSchemeLength',\n        'CompareFollowOn',\n        'ERCAmount',\n        'ERCTerm',\n        'ERCAdd',\n        'ComparisonTerm',\n        'InterestRateEnvironment',\n      ],\n    },\n    outputs: { names: ['CostOfRate1', 'CostOfRate2', 'ChartLabels', 'ChartData', 'ChartData2'] },\n  },\n};\n", "import { checkInputValidity, formatInput, getInputValue, setError } from '$utils/input';\nimport { handleConditionalVisibility, queryElement, queryElements } from '$utils/dom';\n\nimport type { Input, InputType } from '../types';\nimport type { CalculatorInputs } from './calculatorConfig';\nimport type { HandleCalculator } from './handleCalculator';\nimport { HandleInputRepeat } from './handleInputRepeat';\n\n/**\n * @todo check input values are integer\n * @todo focus the first incorrect input\n * @todo show error messages\n * @todo account for radio inputs\n * @todo only submit the inputs that match those from the config\n * - e.g. don't submit radio button on savings calculator\n * @todo check() to report on repeats better\n */\n\nexport class HandleInputs {\n  calculator: HandleCalculator;\n  config: CalculatorInputs;\n  all: Input[];\n  private repeats?: HandleInputRepeat[];\n  inputs: Input[];\n  private conditionals: HTMLDivElement[];\n\n  constructor(calculator: HandleCalculator) {\n    this.calculator = calculator;\n    this.config = calculator.config.inputs;\n\n    this.all = queryElements(`[data-input]`, calculator.component);\n\n    if (this.config.repeats) {\n      this.repeats = this.config.repeats.map((repeat) => {\n        return new HandleInputRepeat(this.calculator, repeat);\n      });\n\n      this.inputs = [];\n      this.all.forEach((input: Input) => {\n        const isRepeat = this.repeats?.some((repeat) => {\n          return repeat.inputs.includes(input);\n        });\n\n        if (!isRepeat) this.inputs.push(input);\n      });\n    } else {\n      this.inputs = queryElements(`[data-input]`, calculator.component);\n    }\n\n    this.conditionals = queryElements('.calculator_inputs [data-condition]', calculator.component);\n  }\n\n  init(): void {\n    if (this.repeats) {\n      this.repeats.forEach((repeat) => {\n        repeat.init();\n      });\n    }\n    this.minMaxValues();\n    this.handleConditionals();\n    this.bindEvents();\n  }\n\n  minMaxValues(): void {\n    this.all.forEach((input) => {\n      if (input.type === 'date') {\n        const today = new Date();\n        const futureMonth = new Date(today.getTime());\n        futureMonth.setMonth(today.getMonth() + 1);\n\n        const futureYear = new Date(today.getTime());\n        futureYear.setFullYear(today.getFullYear() + 5);\n\n        function formatDate(date: Date): string {\n          const yyyy: string = date.getFullYear().toString();\n          const mm: string = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero based, adding 1 for human readability\n          const dd: string = date.getDate().toString().padStart(2, '0');\n          return yyyy + '-' + mm + '-' + dd;\n        }\n\n        const nextMonthDate: string = formatDate(futureMonth);\n        const fiveYearsLaterDate: string = formatDate(futureYear);\n\n        input.setAttribute('min', nextMonthDate);\n        input.setAttribute('max', fiveYearsLaterDate);\n      }\n    });\n  }\n\n  check(): boolean {\n    const tableData: { input: string; present: boolean }[] = [];\n    let allPresent = true;\n\n    this.config.names.forEach((name) => {\n      const input = this.all.find((input) => input.dataset.input === name);\n\n      const isOptionalAndMissing = name === 'DepositAmount' && !input;\n\n      tableData.push({\n        input: name,\n        present: !!input || isOptionalAndMissing,\n      });\n\n      if (!input && name !== 'DepositAmount') {\n        allPresent = false;\n      }\n    });\n\n    console.table(tableData);\n    return allPresent;\n  }\n\n  validateInput(input: Input): boolean {\n    const validity = checkInputValidity(input);\n\n    if (!validity.error) {\n      setError(input);\n    } else {\n      setError(input, validity.error);\n    }\n\n    return validity.isValid;\n  }\n\n  validateInputs(): boolean {\n    let inputFocused = false,\n      isValid = true;\n    this.inputs.forEach((input) => {\n      const inputValid = this.validateInput(input);\n      if (!inputValid) {\n        isValid = false;\n        if (!inputFocused) {\n          input.focus();\n          inputFocused = true;\n        }\n      }\n    });\n\n    return isValid;\n  }\n\n  getValues(): InputType {\n    const values: InputType = {};\n    if (this.calculator.name === 'comparerates') {\n      (values.PropertyValue = getInputValue(\n        queryElement('[data-input=\"PropertyValue\"]', this.calculator.component) as Input\n      ) as string),\n        (values.LoanAmount = getInputValue(\n          queryElement('[data-input=\"LoanAmount\"]', this.calculator.component) as Input\n        ) as string),\n        (values.Term = getInputValue(\n          queryElement('[data-input=\"Term\"]', this.calculator.component) as Input\n        ) as string),\n        (values.Type = getInputValue(\n          queryElement('[data-input=\"Type\"]', this.calculator.component) as Input\n        ) as string),\n        (values.ComparisonRates = [\n          {\n            Rate: getInputValue(\n              queryElement('[data-input=\"CurrentRate\"]', this.calculator.component) as Input\n            ) as string,\n            Fees: getInputValue(\n              queryElement('[data-input=\"CurrentFees\"]', this.calculator.component) as Input\n            ) as string,\n            Type: getInputValue(\n              queryElement('[data-input=\"CurrentType\"]', this.calculator.component) as Input\n            ) as string,\n            SchemeLength: getInputValue(\n              queryElement('[data-input=\"CurrentSchemeLength\"]', this.calculator.component) as Input\n            ) as string,\n            ERCAmount: getInputValue(\n              queryElement('[data-input=\"ERCAmount\"]', this.calculator.component) as Input\n            ) as string,\n            ERCTerm: getInputValue(\n              queryElement('[data-input=\"ERCTerm\"]', this.calculator.component) as Input\n            ) as string,\n            ERCAdd: getInputValue(queryElement('[data-input=\"ERCAdd\"]', this.calculator.component) as Input) as string,\n            FollowOn: getInputValue(\n              queryElement('[data-input=\"CurrentFollowOn\"]', this.calculator.component) as Input\n            ) as string,\n          },\n          {\n            Rate: getInputValue(\n              queryElement('[data-input=\"CompareRate\"]', this.calculator.component) as Input\n            ) as string,\n            Fees: getInputValue(\n              queryElement('[data-input=\"CompareFees\"]', this.calculator.component) as Input\n            ) as string,\n            Type: getInputValue(\n              queryElement('[data-input=\"CompareType\"]', this.calculator.component) as Input\n            ) as string,\n            SchemeLength: getInputValue(\n              queryElement('[data-input=\"CompareSchemeLength\"]', this.calculator.component) as Input\n            ) as string,\n            FollowOn: getInputValue(\n              queryElement('[data-input=\"CompareFollowOn\"]', this.calculator.component) as Input\n            ) as string,\n          },\n        ] as any),\n        (values.ComparisonTerm = getInputValue(\n          queryElement('[data-input=\"ComparisonTerm\"]', this.calculator.component) as Input\n        ) as string),\n        (values.InterestRateEnvironment = getInputValue(\n          queryElement('[data-input=\"InterestRateEnvironment\"]', this.calculator.component) as Input\n        ) as string);\n    } else {\n      this.inputs.forEach((input: Input) => {\n        const calcInput = input.dataset.input;\n        const value = getInputValue(input);\n\n        if (!calcInput || !value) return;\n\n        const { conditionsmet } = input.dataset;\n        if (conditionsmet === 'false') return;\n\n        values[calcInput] = value;\n      });\n\n      if (this.repeats) {\n        this.repeats.forEach((repeat) => {\n          values[repeat.name] = repeat.getValues();\n        });\n      }\n    }\n    return values;\n  }\n\n  handleConditionals(): void {\n    this.conditionals.forEach((item) => {\n      handleConditionalVisibility(item, this.inputs);\n    });\n  }\n\n  private bindEvents(): void {\n    // validate inputs on value change\n    this.all.forEach((input) => {\n      //const eventType = input.class === 'inputslider_input' ? 'mouseup' : 'change';\n\n      input.addEventListener('input', () => {\n        formatInput(input);\n        this.validateInput(input);\n        this.handleConditionals();\n        // New Mortgage calc out update on change\n\n        if (this.calculator.name === 'mortgagecost') {\n          //alert(input.name)\n          //this.calculator.submit();\n        }\n      });\n    });\n  }\n}\n", "import type { InputArray, InputObject } from 'src/types';\n\nimport { queryElement, queryElements } from '$utils/dom';\nimport { getInputValue } from '$utils/input';\n\nimport type { HandleCalculator } from './handleCalculator';\n\ntype Input = HTMLInputElement | HTMLSelectElement;\n// type Input = HTMLInputElement | HTMLSelectElement | HTMLFieldSetElement;\n\nconst attr = 'data-calc';\n\n/**\n * How to handle input repeats\n * 1. for each repeat, we need to:\n * - get the template (first item)\n * - get the button\n * - duplicate the template on button click\n * - remove templates on click (second phase)\n * - get all inputs and output them in the correct way (e.g. array of objects)\n */\n\n/**\n * @todo update inputs when added/removed\n */\n\ntype Type = 'stringArray' | 'objectArray';\n\nexport class HandleInputRepeat {\n  private calculator: HandleCalculator;\n  name: string;\n  private template: HTMLDivElement;\n  private templateWrapper: HTMLDivElement;\n  inputs: Input[];\n  private clone: HTMLDivElement;\n  private groups: HTMLDivElement[];\n  private max: number;\n  private type: Type;\n  private button: HTMLButtonElement;\n\n  constructor(calculator: HandleCalculator, name: string) {\n    this.calculator = calculator;\n    this.name = name;\n    this.template = queryElement(`[${attr}-input-repeat=${name}]`, calculator.component) as HTMLDivElement;\n\n    this.templateWrapper = this.template.parentElement as HTMLDivElement;\n    this.inputs = queryElements(`[data-input]`, this.template);\n    this.clone = this.template.cloneNode(true) as HTMLDivElement;\n    this.groups = [this.template];\n    this.max = Number(this.template.dataset.calcInputRepeatMax);\n    this.type = this.inputs.length === 1 ? 'stringArray' : 'objectArray';\n    this.button = queryElement(`[${attr}-input-repeat-duplicate=\"${name}\"]`, calculator.component) as HTMLButtonElement;\n  }\n\n  init(): void {\n    this.button.addEventListener('click', () => {\n      this.addTemplate();\n    });\n  }\n\n  addTemplate(): void {\n    // check if this should go ahead\n    const maxGroups = this.maxGroupsCheck();\n    if (maxGroups) return;\n\n    // clone the clone and add it as a child\n    const newItem = this.clone.cloneNode(true) as HTMLDivElement;\n    const label = queryElement('label', newItem);\n    const input = queryElement('input, select', newItem);\n\n    if (label && input) {\n      const name = `${this.name}-${this.groups.length + 1}`;\n      label.setAttribute('for', name);\n      input.setAttribute('id', name);\n    }\n\n    this.templateWrapper.appendChild(newItem);\n    this.groups.push(newItem);\n\n    // check if the maximum number of items have been entered\n    this.maxGroupsCheck();\n  }\n\n  maxGroupsCheck(): boolean {\n    if (this.groups.length === this.max) {\n      this.button.disabled;\n      return true;\n    }\n\n    return false;\n  }\n\n  getValues(): InputObject | InputArray {\n    /**\n     * Plan\n     * 1. loop through the groups\n     * 2. if the groups are made of 1 input, add it directly to the array\n     * 3. if there are more than 1 input per group add as an object\n     */\n\n    const values: (string | InputObject)[] = [];\n\n    this.groups.forEach((group) => {\n      const inputs = queryElements('[data-input]', group) as Input[];\n      if (this.type === 'stringArray') {\n        inputs.forEach((input) => {\n          const value = getInputValue(input);\n          if (value) values.push(value.toString());\n        });\n      } else if (this.type === 'objectArray') {\n        const object: Record<string, any> = {};\n        inputs.forEach((input) => {\n          const calcInput = input.dataset.input;\n          const value = getInputValue(input);\n          if (!calcInput || !value) return;\n\n          object[calcInput] = value;\n        });\n\n        values.push(object);\n      }\n    });\n\n    return values as InputArray | InputObject;\n  }\n}\n", "import Chart, { type ChartTypeRegistry } from 'chart.js/auto';\nimport type { BasicObject, Result } from 'src/types';\n\nimport { isStaging } from '$utils/environment';\nimport { numberToCurrency } from '$utils/formatting';\nimport { queryElement, queryElements } from '$utils/dom';\n\nimport type { CalculatorOutputs } from './calculatorConfig';\nimport type { HandleCalculator } from './handleCalculator';\nimport { handleConditionalVisibility } from '$utils/dom';\n\ntype Output = HTMLDivElement | HTMLSpanElement;\n\nconst attr = 'data-calc';\n\n/**\n * @docs data-calc-output-mod - number to multiply the output by (update to data-calc-output-multiplier)\n */\n\nexport class HandleOutputs {\n  private calculator: HandleCalculator;\n  private config: CalculatorOutputs;\n  private all: Output[];\n  private repeatTemplates: HTMLDivElement[];\n  private repeatOutputs: Output[];\n  private outputs: Output[];\n  private repeatClones: { [key: string]: HTMLElement[] };\n  private conditionals: HTMLDivElement[];\n  private chart: HTMLCanvasElement | undefined;\n  private chartJS?: Chart;\n  private results: HTMLDivElement;\n  private result?: Result;\n  private calcElement: HTMLElement | null = null;\n  private resultsId: string | null;\n\n  constructor(calculator: HandleCalculator) {\n    this.calculator = calculator;\n    this.resultsId = calculator.component.getAttribute('data-results');\n    this.config = calculator.config.outputs;\n\n    this.all = this.resultsId\n      ? queryElements(`#${this.resultsId} [${attr}-output]`, document)\n      : queryElements(`[${attr}-output]`, calculator.component);\n\n    this.repeatTemplates = queryElements(`[${attr}-output-repeat]`, calculator.component);\n    this.repeatOutputs = queryElements(`[${attr}-output-repeat] [${attr}-output]`, calculator.component);\n    this.outputs = this.all.filter((output) => !this.repeatOutputs.includes(output));\n    this.repeatClones = {};\n\n    this.chart = queryElement(`[${attr}-el=\"chart\"]`, calculator.component);\n\n    // Find the matching results container or fall back to default\n    this.results = this.resultsId\n      ? (queryElement(`#${this.resultsId}`, document) as HTMLDivElement)\n      : (queryElement(`[${attr}-el=\"results\"]`, calculator.component) as HTMLDivElement);\n\n    this.conditionals = this.resultsId\n      ? queryElements(`#${this.resultsId}`, document)\n      : queryElements('.calculator_results-wrapper [data-condition]', calculator.component);\n  }\n\n  check(): boolean {\n    const tableData: { output: string; present: boolean }[] = [];\n    let allPresent = true;\n\n    // check which outputs are/aren't present\n    this.config.names.forEach((name) => {\n      const output = this.outputs.find((output) => output.dataset.calcOutput === name);\n      tableData.push({\n        output: name,\n        present: !!output,\n      });\n\n      if (!output) allPresent = false;\n    });\n\n    if (isStaging) {\n      console.groupCollapsed(`${allPresent ? 'all outputs present' : 'outputs missing'}`);\n      console.table(tableData);\n      console.groupEnd();\n    }\n\n    return allPresent;\n  }\n\n  handleConditionals(): void {\n    this.conditionals.forEach((item) => {\n      handleConditionalVisibility(item, this.calculator.inputs.inputs);\n    });\n  }\n\n  displayResults(result: Result): void {\n    this.result = result;\n\n    if (this.repeatTemplates.length > 0) {\n      this.repeatTemplates.forEach((template) => {\n        template.style.display = 'none';\n        const fragment = document.createDocumentFragment();\n        this.handleTemplateRepeats(template, fragment);\n        if (template.parentElement) template.parentElement.appendChild(fragment);\n      });\n    }\n\n    this.populateOutputs();\n    this.populateChart();\n    this.handleConditionals();\n\n    if (!this.resultsId) {\n      this.results.style.display = 'block';\n    } else {\n      this.results.style.display = 'grid';\n    }\n  }\n\n  private handleTemplateRepeats(template: HTMLDivElement, fragment: DocumentFragment): void {\n    const repeatName = template.dataset.calcOutputRepeat;\n    if (!repeatName || !this.result || !this.result[repeatName]) return;\n\n    // find and delete any old clones\n    const clonesToDelete = this.repeatClones[repeatName];\n    if (clonesToDelete) {\n      clonesToDelete.forEach((cloneToDelete) => {\n        cloneToDelete.remove();\n      });\n    }\n\n    const dataItems = this.result[repeatName];\n    if (!Array.isArray(dataItems)) return;\n\n    const clones: HTMLElement[] = [];\n    dataItems.forEach((dataItem) => {\n      const clone = this.prepareClone(template, dataItem);\n      if (clone) {\n        fragment.appendChild(clone);\n        clones.push(clone);\n      }\n    });\n\n    this.repeatClones[repeatName] = clones;\n  }\n\n  private prepareClone(template: HTMLDivElement, dataItem: BasicObject): HTMLDivElement | null {\n    const clone = template.cloneNode(true) as HTMLDivElement;\n    clone.style.removeProperty('display');\n\n    const outputs = queryElements(`[${attr}-output]`, clone) as HTMLDivElement[];\n    this.populateOutputs(outputs, dataItem);\n\n    return clone;\n  }\n\n  private populateOutput(output: HTMLElement, value: string | number) {\n    if (typeof value === 'number') {\n      const { calcOutputMod } = output.dataset;\n      if (calcOutputMod) value = Number(calcOutputMod) * value;\n      output.textContent = numberToCurrency(value);\n    } else {\n      output.textContent = value;\n    }\n  }\n\n  private populateOutputs(outputs?: HTMLElement[], data?: BasicObject): void {\n    if (!outputs || !data) {\n      outputs = this.outputs;\n      data = this.result as BasicObject;\n    }\n\n    outputs.forEach((output) => {\n      const key = output.dataset.calcOutput;\n      if (!key) return;\n      const value = data[key];\n\n      if (value === 0 || data[key]) {\n        // If the element is an input, update value and placeholder\n        if (output instanceof HTMLInputElement) {\n          output.value = String(value);\n          output.placeholder = String(value);\n        }\n        // If the element is an image and type = url, update src\n        else if (output.tagName === 'IMG' && output.dataset.calcOutputType === 'url') {\n          (output as HTMLImageElement).src = String(value);\n        }\n        // Otherwise, update the text content\n        else {\n          this.populateOutput(output, value);\n        }\n      }\n    });\n  }\n\n  private populateChart(): void {\n    if (!this.result || !this.chart) return;\n\n    const chartLabels = this.result.ChartLabels as string;\n    const labels = chartLabels.split(',');\n\n    const chartData1 = this.result.ChartData as string;\n    const data1 = chartData1.split(',').map(Number);\n\n    let data2 = null;\n    if (this.result.ChartData2) {\n      const chartData2 = this.result.ChartData2 as string;\n      data2 = chartData2.split(',').map(Number);\n    }\n\n    const datasets = [\n      {\n        data: data1,\n        borderColor: '#fff',\n        backgroundColor: '#fff',\n        borderWidth: 1,\n      },\n    ];\n\n    if (data2) {\n      datasets.push({\n        data: data2,\n        borderColor: '#d70206',\n        backgroundColor: '#d70206',\n        borderWidth: 1,\n      });\n    }\n\n    if (this.chartJS) {\n      this.chartJS.data.labels = labels;\n      this.chartJS.data.datasets[0].data = data1;\n      if (data2) this.chartJS.data.datasets[1].data = data2;\n      this.chartJS.update();\n    } else {\n      this.chartJS = new Chart(this.chart, {\n        type: this.chart.dataset.calcChartType as keyof ChartTypeRegistry,\n        data: {\n          labels,\n          datasets,\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            // legend: { labels: { font: { family: 'Gotham, sans-serif;' } } },\n            legend: {\n              labels: {\n                filter: (item, chart) => false,\n              },\n              title: {\n                display: true,\n                text: this.chart.dataset.calcChartTitle,\n                font: { family: 'Gotham, sans-serif;' },\n                padding: 10,\n              },\n            },\n          },\n          scales: {\n            x: { ticks: { color: '#fff' } },\n            y: { ticks: { color: '#fff' } },\n          },\n        },\n      });\n\n      Chart.defaults.color = '#fff';\n    }\n  }\n}\n", "import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n", "/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "import { details } from './details';\nimport { dialogs } from './dialogs';\n\nexport const components = () => {\n  console.log('components');\n  dialogs();\n  details();\n};\n", "import { queryElement } from '$utils/dom';\n\nexport const details = () => {\n  document.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n    if (!target) return;\n\n    const { tagName } = target;\n    if (tagName !== 'SUMMARY') return;\n\n    const details = target.closest('details') as HTMLDetailsElement;\n    const icon = queryElement('[data-details=\"icon\"]', details) as HTMLElement;\n\n    if (!details || !icon) return;\n\n    const { open } = details;\n    let rotate = icon.dataset.detailsIconRotate as string;\n    if (!rotate) rotate = '180';\n    const rotateBy = open ? '0deg' : `${rotate}deg`;\n\n    icon.style.transform = `rotate(${rotateBy})`;\n  });\n};\n", "import { CostOfDoingNothingCalculator } from './handleCostOfDoingNothing';\n\nexport const costOfDoingNothing = () => {\n  const component = document.querySelector('[data-calc=\"costofdoingnothing\"]') as HTMLDivElement;\n  if (component) {\n    new CostOfDoingNothingCalculator(component);\n  }\n};\n", "import type { CostOfDoingNothingRequest } from 'src/calculators/calculators';\nimport { API_ENDPOINTS } from 'src/constants';\nimport type { APIResponse, Input } from 'src/types';\nimport { queryElement, queryElements } from '$utils/dom';\nimport { checkInputValidity, formatInput, getInputValue, setError } from '$utils/input';\n\nimport type { Inputs as BestBuyInputs, Outputs as BestBuyOutputs, PropertyType, SortColumn } from '../bestbuys/types';\nimport { HandleCODNOutputs } from './handleCODNOutputs';\n\nexport class CostOfDoingNothingCalculator {\n  private component: HTMLDivElement;\n  private inputs: Input[];\n  private buttons: HTMLButtonElement[];\n  private buttonsText: HTMLDivElement;\n  private buttonsLoader: HTMLDivElement;\n  private currentLenderDropdown: HTMLSelectElement;\n  private mortgageTypeDropdown: HTMLSelectElement;\n  private followOnField: HTMLInputElement;\n  private isLoading: boolean;\n  private formattedValues: BestBuyInputs = {} as BestBuyInputs;\n  private formattedCostOfDoingNothingValues: CostOfDoingNothingRequest = {} as CostOfDoingNothingRequest;\n  private outputHandler: HandleCODNOutputs;\n\n  constructor(component: HTMLDivElement) {\n    this.component = component;\n    this.inputs = queryElements(`[data-input], input, select`, component);\n    this.buttons = queryElements(`[data-calc-el=\"button\"]`, component);\n    this.buttonsText = queryElement(`[data-calc-el=\"button-text\"]`, component) as HTMLDivElement;\n    this.buttonsLoader = queryElement(`[data-calc-el=\"button-loader\"]`, component) as HTMLDivElement;\n    this.currentLenderDropdown = queryElement(`#CurrentLender`, component) as HTMLSelectElement;\n    this.mortgageTypeDropdown = queryElement(`#MortgageType`, component) as HTMLSelectElement;\n    this.followOnField = queryElement(`#FollowOn`, component) as HTMLInputElement;\n    this.isLoading = false;\n    this.outputHandler = new HandleCODNOutputs(component);\n\n    this.bindEvents();\n    this.init();\n  }\n\n  private bindEvents(): void {\n    this.inputs.forEach((input) => {\n      input.addEventListener('change', () => {\n        formatInput(input);\n        this.validateInput(input);\n      });\n    });\n\n    this.buttons.forEach((button) => {\n      button.addEventListener('click', async () => {\n        const valid = this.validateInputs();\n        if (!valid) return;\n        this.toggleLoading();\n        try {\n          const bestBuyResult = await this.handleBestBuyRequest();\n          if (bestBuyResult) {\n            await this.handleCalculationRequest(bestBuyResult);\n            this.toggleLoading(true);\n          }\n        } catch (error) {\n          console.error('Error during calculation:', error);\n          this.toggleLoading(false); // Ensure loading is toggled off in case of an error\n        }\n      });\n    });\n\n    // Add event listeners for the MortgageType and CurrentLender dropdowns\n    this.mortgageTypeDropdown.addEventListener('change', () => {\n      this.updateFollowOnField();\n    });\n\n    this.currentLenderDropdown.addEventListener('change', () => {\n      this.updateFollowOnField();\n    });\n  }\n\n  private validateInput(input: Input): boolean {\n    const validity = checkInputValidity(input);\n\n    if (!validity.error) {\n      setError(input);\n    } else {\n      setError(input, validity.error);\n    }\n\n    return validity.isValid;\n  }\n\n  private validateInputs(): boolean {\n    return this.inputs.every((input) => {\n      return this.validateInput(input);\n    });\n  }\n\n  private toggleLoading(success?: boolean): void {\n    this.isLoading = !this.isLoading;\n    if (this.isLoading) {\n      this.buttonsText.style.opacity = '0';\n      this.buttonsLoader.style.opacity = '1';\n    } else if (success) {\n      this.buttonsText.textContent = 'Recalculate';\n      this.buttonsText.style.opacity = '1';\n      this.buttonsLoader.style.opacity = '0';\n    } else {\n      this.buttonsText.textContent = 'Try again...';\n      this.buttonsText.style.opacity = '1';\n      this.buttonsLoader.style.opacity = '0';\n    }\n  }\n\n  private getValues() {\n    const values: { [key: string]: any } = {};\n    this.inputs.forEach((input) => {\n      const key = input.dataset.input;\n      const value = getInputValue(input);\n      if (key) {\n        values[key] = value;\n      }\n    });\n    return values;\n  }\n\n  //TODO: Make sure all defaults are correct here\n  private getBestBuyInput(): BestBuyInputs {\n    const propertyValueInput = queryElement(`[data-input=\"PropertyValue\"]`, this.component) as HTMLInputElement;\n    const loanAmountInput = queryElement(`[data-input=\"LoanAmount\"]`, this.component) as HTMLInputElement;\n    const typeInput = queryElement(`[data-input=\"Type\"]`, this.component) as HTMLSelectElement;\n    const termYearsInput = queryElement(`[data-input=\"Term\"]`, this.component) as HTMLInputElement;\n\n    const propertyValue = propertyValueInput ? propertyValueInput.value : '0';\n    const loanAmount = loanAmountInput ? loanAmountInput.value : '0';\n    const type = typeInput ? typeInput.value : '';\n    const termYears = termYearsInput ? termYearsInput.value : '0';\n    const mortgageType = this.mortgageTypeDropdown.value === 'Residential' ? '1' : '2';\n\n    const formattedValues: BestBuyInputs = {\n      PropertyValue: propertyValue,\n      RepaymentValue: type === 'R' ? loanAmount : '0',\n      InterestOnlyValue: type === 'I' ? loanAmount : '0',\n      PropertyType: '1' as PropertyType,\n      MortgageType: mortgageType,\n      TermYears: termYears,\n      SchemePurpose: '2',\n      SchemePeriods: ['1'],\n      SchemeTypes: ['1'],\n      NumberOfResults: '1',\n      Features: {\n        // @ts-ignore\n        Erc: true,\n        Offset: false,\n        NewBuild: false,\n      },\n      SortColumn: '1' as SortColumn,\n      UseStaticApr: false,\n    };\n\n    this.formattedValues = formattedValues;\n\n    return formattedValues;\n  }\n\n  private async getCostOfDoingNothingInput(bestBuyResult: BestBuyOutputs): Promise<CostOfDoingNothingRequest> {\n    const propertyValueInput = queryElement(`[data-input=\"PropertyValue\"]`, this.component) as HTMLInputElement;\n    const loanAmountInput = queryElement(`[data-input=\"LoanAmount\"]`, this.component) as HTMLInputElement;\n    const typeInput = queryElement(`[data-input=\"Type\"]`, this.component) as HTMLSelectElement;\n    const termYearsInput = queryElement(`[data-input=\"Term\"]`, this.component) as HTMLInputElement;\n    const followOnInput = queryElement(`[data-input=\"FollowOn\"]`, this.component) as HTMLInputElement;\n\n    const propertyValue = propertyValueInput ? parseInt(propertyValueInput.value) : 0;\n    const loanAmount = loanAmountInput ? parseInt(loanAmountInput.value) : 0;\n    const type = typeInput ? typeInput.value : 'R';\n    const termYears = termYearsInput ? parseInt(termYearsInput.value) : 0;\n    const followOnRate = followOnInput ? parseFloat(followOnInput.value) : 0;\n\n    // @ts-ignore\n    const formattedCostOfDoingNothingValues: CostOfDoingNothingRequest = {\n      calculator: 'comparerates',\n      input: {\n        PropertyValue: propertyValue, // min: 1, max: 10000000, step: 500, value: 250000\n        LoanAmount: loanAmount, // min: 5000, max: 10000000, step: 1000, value: 125000\n        Term: termYears, // min: 1, max: 40, step: 1, value: 25\n        Type: type as 'R' | 'I',\n        ComparisonRates: [\n          {\n            Rate: followOnRate, // min: 0.1, max: 15, step: 0.05, value: null | 4.99\n            Fees: 0, // min: -10000000, max: 10000000, step: 100, value: null | 850\n            Type: 'V',\n            SchemeLength: 24, // min: 1, max: 480 | 300, step: 12, value: null | 36\n            ERCAmount: 0, // min: 0, max: 100000, step: 100, value: null\n            ERCTerm: 0, // min: 0, max: 300, step: 1, value: 0\n            ERCAdd: true,\n            FollowOn: followOnRate, // min: 0.1, max: 15, step: 0.05, value: 5.6 | 7\n          },\n          {\n            Rate: bestBuyResult.Rate, // min: 0.1, max: 15, step: 0.05, value: null | 4.99\n            Fees: bestBuyResult.TotalFees, // min: -10000000, max: 10000000, step: 100, value: null | 850\n            Type: 'F',\n            SchemeLength: 24, // min: 1, max: 480 | 300, step: 12, value: null | 36\n            ERCAmount: 0, // min: 0, max: 100000, step: 100, value: null\n            ERCTerm: 0, // min: 0, max: 300, step: 1, value: 0\n            ERCAdd: true,\n            FollowOn: bestBuyResult.FollowOnRateValue, // min: 0.1, max: 15, step: 0.05, value: 5.6 | 7\n          },\n        ],\n        ComparisonTerm: 12, // min: 2, max: 60, step: 12, value: 24\n        InterestRateEnvironment: 1,\n      },\n    };\n\n    this.formattedCostOfDoingNothingValues = formattedCostOfDoingNothingValues;\n\n    return formattedCostOfDoingNothingValues;\n  }\n\n  private async handleCalculationRequest(bestBuyResult: BestBuyOutputs): Promise<void> {\n    const values = await this.getCostOfDoingNothingInput(bestBuyResult);\n    const body = JSON.stringify(values);\n\n    try {\n      const response = await fetch(API_ENDPOINTS.costOfDoingNothing, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body,\n      });\n\n      if (!response.ok) {\n        throw new Error(`API responded with status ${response.status}`);\n      }\n\n      const result = await response.json();\n      this.outputHandler.displayResults(result);\n    } catch (error) {\n      console.error('Error retrieving calculation', error);\n    }\n  }\n\n  private async handleSVRRequest(): Promise<void> {\n    const body = JSON.stringify({});\n\n    try {\n      const response = await fetch(API_ENDPOINTS.svrForLenders, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body,\n      });\n\n      if (!response.ok) {\n        throw new Error(`API responded with status ${response.status}`);\n      }\n\n      const result = await response.json();\n      this.populateCurrentLenderDropdown(result.result.data);\n      this.updateFollowOnField(); // Update FollowOn field after dropdown is populated\n    } catch (error) {\n      console.error('Error retrieving SVR data', error);\n    }\n  }\n\n  private async handleBestBuyRequest(): Promise<BestBuyOutputs> {\n    const body = JSON.stringify({ input: this.getBestBuyInput() });\n\n    try {\n      const response = await fetch(API_ENDPOINTS.productsTrigger, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body,\n      });\n\n      if (!response.ok) {\n        throw new Error(`API responded with status ${response.status}`);\n      }\n\n      const result = await response.json();\n      return result.result.data[0] as BestBuyOutputs;\n    } catch (error) {\n      console.error('Error retrieving Best Buy data', error);\n      throw error;\n    }\n  }\n\n  private populateCurrentLenderDropdown(lenders: any[]): void {\n    this.currentLenderDropdown.innerHTML = ''; // Clear existing options\n\n    lenders.forEach((lender) => {\n      const option = document.createElement('option');\n      option.value = lender.MasterLenderId; // Assuming 'MasterLenderId' is the identifier for the lender\n      option.text = lender.Lender; // Assuming 'Lender' is the name of the lender\n\n      // Add additional data attributes\n      option.dataset.buyToLetRate = lender.BuyToLetRate; // Assuming 'BuyToLetRate' is the attribute name\n      option.dataset.residentialRate = lender.ResidentialRate; // Assuming 'ResidentialRate' is the attribute name\n\n      this.currentLenderDropdown.add(option);\n    });\n  }\n\n  private updateFollowOnField(): void {\n    const selectedLenderOption = this.currentLenderDropdown.selectedOptions[0];\n    if (!selectedLenderOption) return;\n\n    const mortgageType = this.mortgageTypeDropdown.value;\n    let followOnRate = '';\n\n    if (mortgageType === 'Residential') {\n      followOnRate = selectedLenderOption.dataset.residentialRate || '';\n    } else if (mortgageType === 'BuyToLet') {\n      followOnRate = selectedLenderOption.dataset.buyToLetRate || '';\n    }\n\n    this.followOnField.value = followOnRate;\n  }\n\n  // private handleResponse(response: APIResponse): void {\n  //   const costOfRate2 = response.data.CostOfRate2;\n  //   const costOfRate1 = response.data.CostOfRate1;\n\n  //   const costOfRate1Element = queryElement(`[data-calc-output=\"CostOfRate1\"]`, this.component);\n  //   const costOfRate2Element = queryElement(`[data-calc-output=\"CostOfRate2\"]`, this.component);\n\n  //   if (costOfRate1Element) costOfRate1Element.textContent = `\u00A3${costOfRate1}`;\n  //   if (costOfRate2Element) costOfRate2Element.textContent = `\u00A3${costOfRate2}`;\n\n  //   // Additional handling for chart or other response data can be added here\n  // }\n\n  private async init(): Promise<void> {\n    await this.handleSVRRequest(); // Fetch and populate lender data on initialization\n    this.updateFollowOnField(); // Populate FollowOn field on page load\n  }\n}\n", "import type { APIResponse } from 'src/types';\nimport { numberToCurrency } from '$utils/formatting/numberToCurrency';\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\n\ntype Output = HTMLDivElement | HTMLSpanElement;\ntype BasicObject = { [key: string]: any };\n\nconst attr = 'data-calc';\n\nexport class HandleCODNOutputs {\n  private component: HTMLDivElement;\n  private outputs: Output[];\n  private result?: APIResponse;\n\n  constructor(component: HTMLDivElement) {\n    this.component = component;\n    this.outputs = queryElements(`[${attr}-output]`, component) as Output[];\n  }\n\n  displayResults(result: APIResponse): void {\n    this.result = result;\n    this.populateOutputs();\n\n    const resultsElement = queryElement(`[${attr}-el=\"results\"]`, this.component) as HTMLDivElement;\n    resultsElement.style.display = 'block';\n  }\n\n  private populateOutput(output: HTMLElement, value: string | number) {\n    if (typeof value === 'number') {\n      const { calcOutputMod } = output.dataset;\n      if (calcOutputMod) value = Number(calcOutputMod) * value;\n      output.textContent = numberToCurrency(value);\n    } else {\n      output.textContent = value;\n    }\n  }\n\n  private populateOutputs(outputs?: Output[], data?: BasicObject): void {\n    if (!outputs || !data) {\n      outputs = this.outputs;\n      data = this.result?.result;\n    }\n\n    const savingElement = queryElement(`[${attr}-output=\"SavingBlock\"]`, this.component) as HTMLDivElement;\n    const noSavingElement = queryElement(`[${attr}-output=\"NoSavingBlock\"]`, this.component) as HTMLDivElement;\n\n    // Check if the current rate is less than the new rate and show text if so\n    if (data['CostOfRate1'] < data['CostOfRate2']) {\n      savingElement.style.display = 'none';\n      noSavingElement.style.display = 'block';\n    }\n\n    // Check if the current rate is more than the new rate and show new rate breakdown\n    if (data['CostOfRate1'] >= data['CostOfRate2']) {\n      noSavingElement.style.display = 'none';\n      savingElement.style.display = 'block';\n      //Add values to the data object\n      data['AnnualCost'] = (data['CostOfRate1'] - data['CostOfRate2']) / 2;\n      data['MonthlyCost'] = (data['CostOfRate1'] - data['CostOfRate2']) / 12;\n      data['FollowOnPayments'] = data['CostOfRate1'] / 12;\n      data['PaymentsAfterSwitch'] = data['CostOfRate2'] / 12;\n      outputs.forEach((output) => {\n        const key = output.dataset.calcOutput;\n        if (!key) return;\n\n        const value = data[key];\n        if (value === 0 || data[key]) {\n          this.populateOutput(output, value);\n        }\n      });\n    }\n  }\n}\n", "import { MCTManager } from 'src/mct/shared/MCTManager';\n\nexport const mct = () => {\n  MCTManager.start();\n};\n", "import { queryElement, queryElements } from '$utils/dom';\n\nimport { initForm } from '../stages/form';\nimport type { MainFormManager } from '../stages/form/Manager_Main';\nimport { initResults } from '../stages/results';\nimport type { ResultsManager } from '../stages/results/Manager';\nimport { initAppointment } from '../stages/appointment';\nimport type { AppointmentManager } from '../stages/appointment/Manager';\n\nimport { lcidAPI, logUserEventsAPI } from '$mct/api';\nimport { globalEventBus, testComponents, testSimpleComponent } from '$mct/components';\nimport { DOM_CONFIG } from '$mct/config';\nimport { StateManager, CalculationManager } from '$mct/state';\nimport { FormEventNames, MCTEventNames, StageIDENUM } from '$mct/types';\nimport type {\n  InputData,\n  InputKey,\n  Inputs,\n  InputValue,\n  AppState,\n  CalculationKey,\n  Calculations,\n  CalculationValue,\n  GoToStageOptions,\n  ICID,\n  LCID,\n  LogUserEventCustom,\n  LogUserEventRequest,\n  CalculationKeysENUM,\n} from '$mct/types';\nimport { getInputValueAsLandC } from '$mct/utils';\n\nconst attr = DOM_CONFIG.attributes;\n\nlet numberOfStagesShown: number = 0;\ninterface Stage {\n  // id: StageIDENUM;\n  init: (options?: any) => void;\n  show: (scrollTo?: boolean) => void;\n  hide: () => void;\n}\n\nconst stageManagers: Record<string, Stage> = {};\n\ninterface DOM {\n  component: HTMLElement | null;\n  stages: Partial<Record<StageIDENUM, HTMLElement>>;\n}\n\nconst dom: DOM = {\n  component: null,\n  stages: {},\n};\n\nconst stateManager = new StateManager();\nconst calculationManager = new CalculationManager(stateManager);\n\nexport const MCTManager = {\n  start() {\n    this.initState();\n    this.initDOM();\n    this.initICID();\n    this.initLCID();\n    this.initStages();\n    this.route();\n    this.removeInitialStyles();\n\n    // Setup event bus for testing (optional)\n    this.setupEventBusDebug();\n  },\n\n  initState() {\n    console.log('\uD83D\uDD04 Initializing hybrid MCTManager with new state management...');\n\n    // Subscribe to state changes for debugging\n    stateManager.subscribe((event) => {\n      console.log('\uD83D\uDD04 State changed via new manager:', {\n        changes: event.changes,\n        timestamp: new Date().toISOString(),\n      });\n    });\n\n    stateManager.loadFromPersistence();\n    stateManager.enableAutoPersistence();\n  },\n\n  initDOM(): DOM {\n    dom.component = queryElement(`[${attr.component}=\"component\"]`) as HTMLElement;\n    if (!dom.component) throw new Error('MCT component not found');\n\n    const stages = queryElements(`[${attr.stage}]`, dom.component);\n    stages.forEach((stage) => {\n      const name = stage.getAttribute(attr.stage);\n      if (name) dom.stages[name as StageIDENUM] = stage as HTMLElement;\n    });\n\n    return dom;\n  },\n\n  initICID() {\n    const icid = this.getICID();\n    this.setICID(icid ?? 'default');\n  },\n\n  async initLCID() {\n    const currentLCID = this.getLCID();\n    const icid = this.getICID();\n\n    try {\n      const lcid = await lcidAPI.generate(currentLCID, icid);\n      this.setLCID(lcid);\n    } catch {\n      console.error('Failed to generate LCID');\n    }\n  },\n\n  initStages() {\n    // const form = this.getStageDOM(StageIDENUM.Questions);\n    // const results = this.getStageDOM(StageIDENUM.Results);\n    // const appointment = this.getStageDOM(StageIDENUM.Appointment);\n\n    // if (form) {\n    //   const formManager = initForm({\n    //     element: form,\n    //     id: StageIDENUM.Questions,\n    //     prefillFrom: 'none',\n    //   });\n    // }\n\n    // if (results) {\n    //   const resultsManager = initResults(results);\n    //   stageManagers[StageIDENUM.Results] = resultsManager as ResultsManager;\n    // }\n\n    // if (appointment) {\n    //   const appointmentManager = initAppointment(appointment);\n    //   stageManagers[StageIDENUM.Appointment] = appointmentManager as AppointmentManager;\n    // }\n\n    const mainForm = this.getStageDOM(StageIDENUM.Questions);\n    if (mainForm) {\n      const mainFormManager = initForm(mainForm, {\n        mode: 'main',\n        prefill: false,\n      });\n      mainFormManager?.hide();\n      stageManagers[StageIDENUM.Questions] = mainFormManager as MainFormManager;\n    }\n\n    const results = this.getStageDOM(StageIDENUM.Results);\n    if (results) {\n      const resultsManager = initResults(results);\n      resultsManager?.hide();\n      stageManagers[StageIDENUM.Results] = resultsManager as ResultsManager;\n    }\n\n    const appointment = this.getStageDOM(StageIDENUM.Appointment);\n    if (appointment) {\n      const appointmentManager = initAppointment(appointment);\n      appointmentManager?.hide();\n      stageManagers[StageIDENUM.Appointment] = appointmentManager as AppointmentManager;\n    }\n  },\n\n  getComponentDOM() {\n    if (!dom.component) throw new Error('MCT component not initialised');\n    return dom.component;\n  },\n\n  getStageDOM(name: StageIDENUM): HTMLElement | undefined {\n    return dom.stages[name];\n  },\n\n  route() {\n    /**\n     * @plan\n     * - need to check local storage on load and populate the state\n     * - if user came from another page still show the form?\n     * - if user came from another page, prefill the results? Maybe click a button to do so?\n     * - populate the customer-identifier? populate the whole form?\n     *\n     * - once questions are done, init the results\n     */\n\n    // const params = new URLSearchParams(window.location.search);\n    // const profile = params.get(parameters.profile) as ProfileName | undefined;\n\n    // if (profile) this.goToStage('questions', { questions: { profile } });\n\n    // if (profile === 'residential-purchase') {\n    //   this.goToStage('results');\n    // } else {\n    //   this.goToStage('questions');\n    // }\n\n    const numberOfStages = Object.keys(stageManagers).length;\n    if (numberOfStages === 0) {\n      console.error('\uD83D\uDD04 No stage managers initialised');\n      return;\n    } else if (numberOfStages === 1) {\n      const onlyStage = Object.values(stageManagers)[0];\n      if (onlyStage) {\n        onlyStage.show(numberOfStagesShown !== 0);\n        onlyStage.init();\n        numberOfStagesShown += 1;\n      }\n    } else {\n      this.goToStage(StageIDENUM.Questions);\n    }\n\n    // this.goToStage(StageIDENUM.Results);\n  },\n\n  goToStage(stageId: StageIDENUM, options: GoToStageOptions = {}): boolean {\n    console.log('\uD83D\uDD04 Going to stage', stageId);\n    globalEventBus.emit(MCTEventNames.STAGE_GO_TO, { stageId });\n\n    // get the stage and cancel if not found\n    const nextStage = stageManagers[stageId] ?? null;\n    if (!nextStage) return false;\n\n    // hide the current stage\n    const currentStage = stageManagers[stateManager.getCurrentStage() as StageIDENUM] ?? null;\n    if (currentStage) currentStage.hide();\n\n    // update the state, init and show the next stage\n    stateManager.setCurrentStage(stageId);\n    nextStage.show(numberOfStagesShown !== 0);\n    numberOfStagesShown += 1;\n\n    // Pass stage-specific options to the init method\n    const stageOptions = options[stageId];\n    if (stageOptions && typeof nextStage.init === 'function') {\n      nextStage.init(stageOptions);\n    } else {\n      nextStage.init();\n    }\n\n    return true;\n  },\n\n  removeInitialStyles() {\n    const elements = queryElements(`[${attr.initial}]`, this.getComponentDOM());\n    console.log('\uD83D\uDD04 Removing initial styles', elements);\n    elements.forEach((element) => {\n      element.removeAttribute(attr.initial);\n    });\n  },\n\n  setICID(icid: string) {\n    stateManager.setICID(icid);\n  },\n\n  getICID(): string | null {\n    return stateManager.getICID();\n  },\n\n  setLCID(lcid: string | null) {\n    stateManager.setLCID(lcid);\n  },\n\n  getLCID(): string | null {\n    return stateManager.getLCID();\n  },\n\n  setAnswer(answerData: InputData) {\n    stateManager.setAnswer(answerData);\n  },\n\n  getAnswer(key: InputKey): InputValue | undefined {\n    return stateManager.getAnswer(key);\n  },\n\n  getAnswerAsLandC(key: InputKey): InputValue | undefined {\n    return getInputValueAsLandC(key) as InputValue | undefined;\n  },\n\n  setAnswers(answerDataArray: InputData[]) {\n    stateManager.setAnswers(answerDataArray);\n  },\n\n  getAnswers(): Inputs {\n    return stateManager.getAnswers();\n  },\n\n  getAnswersAsLandC(): Inputs {\n    return Object.fromEntries(\n      Object.entries(this.getAnswers()).map(([key, value]) => [key, getInputValueAsLandC(key as InputKey)])\n    );\n  },\n\n  setCalculation(key: CalculationKeysENUM, value: CalculationValue) {\n    calculationManager.setCalculation(key, value);\n  }, // TEST\n\n  getCalculation(key: CalculationKeysENUM): CalculationValue | undefined {\n    return calculationManager.getCalculation(key);\n  }, // TEST\n\n  setCalculations(calculations: Partial<Calculations>) {\n    stateManager.setCalculations(calculations);\n  },\n\n  getCalculations(): Calculations {\n    return stateManager.getCalculations();\n  },\n\n  recalculate(): void {\n    calculationManager.recalculate();\n  },\n\n  setMortgageId(mortgageId: number | null) {\n    stateManager.set('mortgageId', mortgageId);\n  },\n\n  getMortgageId(): number | null {\n    return stateManager.get('mortgageId');\n  },\n\n  async logUserEvent(event: LogUserEventCustom): Promise<void> {\n    const answers = this.getAnswersAsLandC();\n    const FormValues: Record<string, string> = {};\n    for (const [key, value] of Object.entries(answers)) {\n      FormValues[key] = value != null ? String(value) : '';\n    }\n\n    const payload: LogUserEventRequest = {\n      ...event,\n      LCID: this.getLCID() as LCID,\n      ICID: this.getICID() as ICID,\n      FormValues,\n      CreatedBy: 'MCT',\n    };\n\n    try {\n      const response = await logUserEventsAPI.logEvent(payload);\n      console.log('LogUserEvent: ', response);\n    } catch (error) {\n      console.error('error', error);\n    }\n  },\n\n  // clearAnswer(key: AnswerKey) {\n  //   if (USE_NEW_STATE_MANAGEMENT.answers) {\n  //     // Use new state management\n  //     newStateManager.clearAnswer(key);\n  //     // Keep legacy state in sync\n  //     delete legacyState.answers[key];\n  //   } else {\n  //     // Use legacy approach\n  //     const data = this.getPersistedData();\n  //     delete data.answers?.[key];\n  //     this.setPersistedData(data);\n  //     delete legacyState.answers[key];\n  //   }\n  // },\n\n  // clearAnswers() {\n  //   if (USE_NEW_STATE_MANAGEMENT.answers) {\n  //     // Use new state management\n  //     newStateManager.clearAnswers();\n  //     // Keep legacy state in sync\n  //     legacyState.answers = {};\n  //   } else {\n  //     // Use legacy approach\n  //     const data = this.getPersistedData();\n  //     data.answers = {};\n  //     this.setPersistedData(data);\n  //     legacyState.answers = {};\n  //   }\n  // },\n\n  // setProducts(products: Product[]) {\n  //   stateManager.setProducts(products);\n  // },\n\n  // getProducts(): Product[] | null {\n  //   return stateManager.getProducts();\n  // },\n\n  // setSummary(summary: SummaryInfo) {\n  //   stateManager.setSummary(summary);\n  // },\n\n  // getSummary(): SummaryInfo | null {\n  //   return stateManager.getSummary();\n  // },\n\n  getState(): AppState {\n    return stateManager.getState();\n  },\n\n  getCalculationManager(): CalculationManager {\n    return calculationManager;\n  },\n\n  setupEventBusDebug() {\n    if (typeof window === 'undefined') return;\n\n    // Make event bus available globally for testing\n    (window as any).globalEventBus = globalEventBus;\n\n    // Add some test event listeners\n    globalEventBus.on(FormEventNames.QUESTION_CHANGED, (payload) => {\n      console.log('\uD83D\uDCE1 MCT Event: Question changed', payload);\n    });\n\n    globalEventBus.on(FormEventNames.NAVIGATION_UPDATE, (payload) => {\n      console.log('\uD83D\uDCE1 MCT Event: Navigation updated', payload);\n    });\n\n    // Make component testing available\n    (window as any).testComponents = testComponents;\n    (window as any).testSimpleComponent = testSimpleComponent;\n\n    console.log('\uD83D\uDD27 Event Bus & Component Debug Tools Available!');\n    console.log('- globalEventBus - Access the global event bus');\n    console.log('- globalEventBus.emit(\"form:question:changed\", {...}) - Test events');\n    console.log('- testSimpleComponent() - Test simple component (recommended first)');\n    console.log('- testComponents() - Test full component system');\n  },\n};\n", "import { StageIDENUM } from '$mct/types';\nimport type { FormOptions } from '../../shared/types/common';\nimport { MainFormManager } from './Manager_Main';\n\nexport const initForm = (component: HTMLElement, options: FormOptions): MainFormManager | null => {\n  const manager = options.mode === 'main' ? new MainFormManager(component) : null;\n  if (!manager) return null;\n  return manager;\n};\n", "import { simulateEvent } from '@finsweet/ts-utils';\n\nimport { DOM_CONFIG, EVENTS_CONFIG } from '$mct/config';\nimport { MainGroup, OutputGroup } from './Groups';\nimport { MCTManager } from 'src/mct/shared/MCTManager';\nimport { logError } from '$mct/utils';\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\nimport type { InputKey, InputValue, LogUserEventCustom, Profile, QuestionsStageOptions } from '$mct/types';\nimport { GroupNameENUM } from '$mct/types';\nimport { StageIDENUM } from '$mct/types';\nimport { FormManager } from './Manager_Base';\n\nconst attr = DOM_CONFIG.attributes.form;\n\nexport class MainFormManager extends FormManager {\n  public activeGroupIndex: number = 0;\n  public components: {\n    header: HTMLElement;\n    secondHeader: HTMLElement;\n    identifier: HTMLElement;\n    // profileSelect: HTMLSelectElement;\n    wrapper: HTMLElement;\n    scroll: HTMLElement;\n    nextButton: HTMLButtonElement;\n    prevButton: HTMLButtonElement;\n    groupElements: HTMLElement[];\n    hideOnGroup: HTMLElement[];\n    showOnGroup: HTMLElement[];\n    loader: HTMLElement;\n  };\n\n  constructor(component: HTMLElement) {\n    super(component);\n    this.components = {\n      header: queryElement(`[${attr.components}=\"header\"]`, component) as HTMLElement,\n      secondHeader: queryElement(`[${attr.components}=\"sticky-header\"]`, component) as HTMLElement,\n      identifier: queryElement(`[${attr.components}=\"identifier\"]`, component) as HTMLElement,\n      wrapper: queryElement(`[${attr.components}=\"wrapper\"]`, component) as HTMLElement,\n      scroll: queryElement(`[${attr.components}=\"scroll\"]`, component) as HTMLElement,\n      nextButton: queryElement(`[${attr.components}=\"next\"]`, component) as HTMLButtonElement,\n      prevButton: queryElement(`[${attr.components}=\"previous\"]`, component) as HTMLButtonElement,\n      groupElements: queryElements(`[${attr.group}]`, component) as HTMLElement[],\n      hideOnGroup: queryElements(`[${attr.hideOnGroup}]`, component) as HTMLElement[],\n      showOnGroup: queryElements(`[${attr.showOnGroup}]`, component) as HTMLElement[],\n      loader: queryElement(`[${attr.components}=\"loader\"]`, component) as HTMLElement,\n    };\n  }\n\n  public init(): void {\n    if (this.isInitialised) return;\n    this.isInitialised = true;\n\n    this.showLoader(true);\n    this.showHeader('static');\n\n    this.components.groupElements.forEach((groupEl, index) => {\n      const name = groupEl.getAttribute(attr.group) as GroupNameENUM;\n      if (!name) return;\n\n      const group = name === GroupNameENUM.Output ? new OutputGroup(groupEl, this) : new MainGroup(groupEl, this);\n      index === 0 ? group.show() : group.hide();\n      this.groups.push(group);\n    });\n\n    this.handleShowHideOnGroup();\n\n    // this.prepareWrapper();\n\n    // const initialGroup = this.getActiveGroup();\n    // if (initialGroup) initialGroup.show();\n\n    // Handle profile option if provided\n    this.handleIdentifier();\n\n    this.component.addEventListener('mct:navigation:update', (event: Event) => {\n      const { nextEnabled, prevEnabled } = (event as CustomEvent).detail;\n      if (typeof nextEnabled === 'boolean') this.components.nextButton.disabled = !nextEnabled;\n      if (typeof prevEnabled === 'boolean') this.components.prevButton.disabled = !prevEnabled;\n    });\n\n    this.components.nextButton.addEventListener('click', () => {\n      console.log('nextButton clicked');\n      const currentGroup = this.getActiveGroup();\n      if (!currentGroup || currentGroup instanceof OutputGroup) return;\n\n      const currentItem = currentGroup.getActiveQuestion();\n      if (!currentItem.isValid()) return;\n\n      currentGroup.navigate('next');\n    });\n\n    this.components.prevButton.addEventListener('click', () => {\n      const currentGroup = this.getActiveGroup();\n      if (!currentGroup || currentGroup instanceof OutputGroup) {\n        this.navigateToPreviousGroup();\n        return;\n      }\n\n      currentGroup.navigate('prev');\n    });\n\n    this.onMount();\n    this.prepareWrapper();\n    this.showLoader(false);\n\n    // setTimeout(() => {\n    //   this.showLoader(false);\n    //   this.prepareWrapper();\n    // }, 1000);\n  }\n\n  public show(scrollTo: boolean = true): void {\n    this.component.style.removeProperty('display');\n    if (scrollTo) this.component.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  public hide(): void {\n    this.component.style.display = 'none';\n  }\n\n  private showLoader(show: boolean): void {\n    this.components.loader.style.display = show ? 'flex' : 'none';\n  }\n\n  public prepareWrapper(): void {\n    if (this.groups.length === 0) return;\n\n    const firstItem = this.getFirstEl();\n    const lastItem = this.getLastEl();\n    if (!firstItem || !lastItem) return;\n\n    const { scroll, wrapper } = this.components;\n\n    const topPad = scroll.offsetHeight / 2 - firstItem.offsetHeight / 2;\n    const bottomPad = scroll.offsetHeight / 2 - lastItem.offsetHeight / 2;\n\n    wrapper.style.paddingTop = `${topPad}px`;\n    wrapper.style.paddingBottom = `${bottomPad}px`;\n  }\n\n  private getFirstEl(): HTMLElement | null {\n    const group = this.groups[0];\n    if (group instanceof MainGroup) return group.questions[0].getElement();\n    if (group instanceof OutputGroup) return group.getComponent();\n    return null;\n  }\n\n  private getLastEl(): HTMLElement | undefined {\n    const group = this.groups.at(this.activeGroupIndex);\n    if (group instanceof MainGroup) {\n      // Find the last visible question\n      const visibleQuestions = group.getVisibleQuestions();\n      if (visibleQuestions.length === 0) return undefined;\n      return visibleQuestions.at(-1)?.getElement();\n    }\n    if (group instanceof OutputGroup) return group.getComponent();\n    return undefined;\n  }\n\n  public updateNavigation(options: { nextEnabled?: boolean; prevEnabled?: boolean } = {}): void {\n    this.component.dispatchEvent(\n      new CustomEvent('mct:navigation:update', {\n        detail: options,\n        bubbles: false,\n      })\n    );\n  }\n\n  public handleInputChange(isValid: boolean) {\n    this.updateNavigation({ nextEnabled: isValid });\n  }\n\n  private getActiveGroup(): MainGroup | OutputGroup | undefined {\n    return this.groups[this.activeGroupIndex];\n  }\n\n  private getGroupByName(name: GroupNameENUM): MainGroup | OutputGroup | undefined {\n    return this.groups.find((group) => group.name === name);\n  }\n\n  public updateGroupVisibility(): void {\n    // Always show customer-identifier\n    const identifierGroup = this.getGroupByName(GroupNameENUM.CustomerIdentifier) as MainGroup;\n    identifierGroup.show();\n\n    // Get the profile\n    const profile = this.determineProfile();\n    if (!profile) {\n      this.groups.filter((group) => group !== identifierGroup).forEach((group) => group.hide());\n      return;\n    }\n\n    // Show the profile group if it exists\n    const profileGroup = this.getGroupByName(profile.name as any) as MainGroup;\n    profileGroup.show();\n\n    // Show output group if it exists\n    const outputGroup = this.getGroupByName(GroupNameENUM.Output) as OutputGroup;\n    profileGroup.isComplete() ? outputGroup.show() : outputGroup.hide();\n\n    this.groups\n      .filter((group) => group !== identifierGroup && group !== profileGroup && group !== outputGroup)\n      .forEach((group) => group.hide());\n  }\n\n  public getPreviousGroupInSequence(): MainGroup | OutputGroup | undefined {\n    if (this.activeGroupIndex <= 0) return undefined;\n    return this.groups[0];\n  }\n\n  public navigateToNextGroup() {\n    const activeGroup = this.getActiveGroup();\n    if (!activeGroup) return logError(`Next group: No active group found`);\n    if (!this.profile) return logError(`Next group: No profile found`);\n\n    const { name } = activeGroup;\n    if (name === GroupNameENUM.CustomerIdentifier && activeGroup instanceof MainGroup) {\n      // progress to profile group from identifier group\n      this.handleIdentifier(this.profile);\n\n      const profileGroup = this.getGroupByName(this.profile.name as any) as MainGroup;\n      if (!profileGroup) return logError(`Next group: No matching group for profile: ${this.profile.name}`);\n\n      const profileGroupIndex = this.groups.indexOf(profileGroup);\n      if (profileGroupIndex === -1) return logError(`Next group: No group index for profile: ${this.profile.name}`);\n\n      this.activeGroupIndex = profileGroupIndex;\n      this.showHeader('sticky');\n\n      const firstVisibleIndex = profileGroup.getNextVisibleIndex(-1);\n      if (firstVisibleIndex < profileGroup.questions.length) {\n        profileGroup.activeQuestionIndex = firstVisibleIndex;\n        const firstQuestion = profileGroup.getActiveQuestion();\n        profileGroup.activateQuestion(firstQuestion);\n        profileGroup.handleNextButton(firstQuestion.isValid());\n      }\n    } else if (name !== GroupNameENUM.Output && activeGroup instanceof MainGroup) {\n      // progress to the output group from profile group\n      const outputGroup = this.getGroupByName(GroupNameENUM.Output) as OutputGroup;\n      if (!outputGroup) return logError(`Next group: No output group found`);\n\n      const outputGroupIndex = this.groups.indexOf(outputGroup);\n      if (outputGroupIndex === -1) return logError(`Next group: No group index for output`);\n\n      this.activeGroupIndex = outputGroupIndex;\n      outputGroup.activate();\n\n      MCTManager.logUserEvent({\n        EventName: EVENTS_CONFIG.questionsComplete,\n        EventValue: EVENTS_CONFIG.questionsComplete,\n      });\n    } else if (name === GroupNameENUM.Output && activeGroup instanceof OutputGroup) {\n      // end of form, determine next step\n      // console.log('End of form, navigate to results');\n      // console.log(MCTManager.getAnswers());\n\n      MCTManager.goToStage(StageIDENUM.Results);\n    }\n\n    this.handleShowHideOnGroup();\n  }\n\n  private handleShowHideOnGroup(): void {\n    console.log('handleShowHideOnGroup');\n    const activeGroup = this.getActiveGroup();\n    console.log(activeGroup);\n    if (!activeGroup) return;\n\n    const { name } = activeGroup;\n    console.log(name);\n\n    // hide elements that are in the hideOnGroup array\n    this.components.hideOnGroup.forEach((element) => {\n      const group = element.getAttribute(attr.hideOnGroup);\n\n      if (group === name) {\n        element.style.display = 'none';\n      } else {\n        element.style.removeProperty('display');\n      }\n    });\n\n    // show elements that are in the showOnGroup array\n    this.components.showOnGroup.forEach((element) => {\n      const group = element.getAttribute(attr.showOnGroup);\n\n      if (group === name) {\n        element.style.removeProperty('display');\n      } else {\n        element.style.display = 'none';\n      }\n    });\n  }\n\n  public navigateToPreviousGroup() {\n    const activeGroup = this.getActiveGroup();\n    if (!activeGroup) return logError(`Previous group: No active group found`);\n    if (!this.profile) return logError(`Previous group: No profile found`);\n\n    // save previous group to determine which group to navigate to\n    let previousGroup: MainGroup | OutputGroup | undefined;\n\n    const { name } = activeGroup;\n    if (name === GroupNameENUM.Output && activeGroup instanceof OutputGroup) {\n      // revert to profile group from output group\n      const profileGroup = this.getGroupByName(this.profile.name as any) as MainGroup;\n      if (!profileGroup) return logError(`Previous group: No matching group for profile: ${this.profile.name}`);\n\n      const profileGroupIndex = this.groups.indexOf(profileGroup);\n      if (profileGroupIndex === -1) return logError(`Previous group: No group index for profile: ${this.profile.name}`);\n\n      this.activeGroupIndex = profileGroupIndex;\n      this.showHeader('sticky');\n      previousGroup = profileGroup;\n    } else if (name !== GroupNameENUM.CustomerIdentifier && activeGroup instanceof MainGroup) {\n      // revert to the identifier group from profile group\n      const identifierGroup = this.getGroupByName(GroupNameENUM.CustomerIdentifier) as MainGroup;\n      if (!identifierGroup) return logError(`Previous group: No identifier group found`);\n\n      const identifierGroupIndex = this.groups.indexOf(identifierGroup);\n      if (identifierGroupIndex === -1) return logError(`Previous group: No group index for identifier`);\n\n      this.activeGroupIndex = identifierGroupIndex;\n      this.showHeader('static');\n      previousGroup = identifierGroup;\n    } else return this.handleShowHideOnGroup();\n\n    if (!previousGroup) return logError(`Previous group: No previous group found`);\n    if (!(previousGroup instanceof MainGroup)) return logError(`Previous group: Previous group is not a main group`);\n\n    // get the last visible question in the identifier group and activate it\n    const lastVisibleIndex = previousGroup.getPrevVisibleIndex(previousGroup.questions.length);\n    if (lastVisibleIndex < 0)\n      return logError(`Previous group: No last visible index group for profile: ${this.profile}`);\n\n    previousGroup.activeQuestionIndex = lastVisibleIndex;\n    previousGroup.activateQuestion(previousGroup.getActiveQuestion());\n\n    this.handleShowHideOnGroup();\n  }\n\n  private handleIdentifier(profile?: Profile) {\n    console.log('handleIdentifier', profile);\n    if (!profile) {\n      this.components.identifier.style.display = 'none';\n    } else {\n      this.components.identifier.textContent = profile.display;\n      this.components.identifier.style.removeProperty('display');\n    }\n  }\n\n  private showHeader(type: 'static' | 'sticky') {\n    const { header, secondHeader: stickyHeader } = this.components;\n    if (!header || !stickyHeader) return;\n    if (type === 'static') {\n      header.style.removeProperty('display');\n      stickyHeader.style.display = 'none';\n    } else if (type === 'sticky') {\n      header.style.display = 'none';\n      stickyHeader.style.removeProperty('display');\n    }\n\n    this.prepareWrapper();\n  }\n\n  // public reset() {\n  //   MCTManager.clearAnswers();\n  //   this.groups.forEach((group) => (group instanceof MainGroup ? group.reset() : null));\n  // }\n}\n", "/**\n * class for managing a group of questions\n */\n\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\n\nimport { DOM_CONFIG } from '$mct/config';\nimport { QuestionComponent } from './Questions';\nimport type { FormManager } from './Manager_Base';\nimport { trackGAEvent } from '$utils/analytics/trackGAEvent';\nimport { generateSummaryLines, generateProductsAPIInput, logError } from '$mct/utils';\nimport { productsAPI } from '$mct/api';\nimport type { ProductsResponse, SummaryInfo, SummaryLines } from '$mct/types';\nimport { GroupNameENUM } from '$mct/types';\nimport type { MainFormManager } from './Manager_Main';\nimport globalEventBus from 'src/mct/shared/components/events/globalEventBus';\n\nconst attr = DOM_CONFIG.attributes.form;\nconst classes = DOM_CONFIG.classes;\n\n// @description: Base class for all groups\nexport abstract class BaseGroup {\n  protected component: HTMLElement;\n  protected formManager: FormManager;\n  public isVisible: boolean = false;\n  public name: GroupNameENUM | null = null;\n\n  constructor(component: HTMLElement, formManager: FormManager) {\n    this.component = component;\n    this.formManager = formManager;\n    this.name = component.getAttribute(attr.group) as GroupNameENUM | null;\n  }\n\n  public getComponent(): HTMLElement {\n    return this.component;\n  }\n\n  protected abstract show(): void;\n  protected abstract hide(): void;\n}\n\n// @description: Base class for all question groups\nexport abstract class QuestionGroup extends BaseGroup {\n  public questions: QuestionComponent[] = [];\n  public activeQuestionIndex: number = 0;\n\n  constructor(component: HTMLElement, formManager: FormManager) {\n    super(component, formManager);\n  }\n\n  abstract handleChange(index: number): void;\n\n  abstract handleEnter(index: number): void;\n\n  public show(): void {\n    this.component.style.removeProperty('display');\n    this.isVisible = true;\n    // console.log('show: updateActiveQuestions', this.name);\n    this.updateActiveQuestions();\n  }\n\n  public hide(): void {\n    this.component.style.display = 'none';\n    this.isVisible = false;\n    // console.log('hide: updateActiveQuestions', this.name);\n    this.updateActiveQuestions();\n  }\n\n  public updateActiveQuestions(): void {\n    /**\n     * Update:\n     * - Don't save answers to MCT here\n     * - This will show the questions that should be visible based on the storage\n     * - Answers will need to be rendered on page load for this to display nicely\n     */\n\n    // console.log('function: updateActiveQuestions');\n    // console.log('saving answers to MCT');\n    this.formManager.saveAnswersToMCT();\n    const currentAnswers = this.formManager.getAnswers();\n\n    this.questions.forEach((question) => {\n      const shouldBeVisible = question.shouldBeVisible(currentAnswers, this.isVisible);\n      shouldBeVisible ? question.require() : question.unrequire();\n    });\n  }\n\n  public isComplete(): boolean {\n    return this.questions\n      .filter((question) => !question.getStateValue('dependsOn'))\n      .every((question) => question.isValid());\n  }\n\n  public reset(): void {\n    if (this.questions.length === 0) return;\n    this.questions.forEach((question) => question.reset());\n  }\n}\n\n// @description: Class for managing a main group of questions\nexport class MainGroup extends QuestionGroup {\n  protected formManager: MainFormManager;\n\n  constructor(component: HTMLElement, formManager: MainFormManager) {\n    super(component, formManager);\n    this.formManager = formManager;\n    this.questions = this.initQuestions();\n    this.formManager.components.scroll = queryElement(`[${attr.components}=\"scroll\"]`) as HTMLElement;\n    // console.log('init: updateActiveQuestions');\n    this.updateActiveQuestions();\n  }\n\n  private initQuestions(): QuestionComponent[] {\n    const questionEls = queryElements(`[${attr.question}]`, this.component) as HTMLElement[];\n    return questionEls.map((element, index) => {\n      const question = new QuestionComponent({\n        element,\n        debug: false,\n        autoBindEvents: true,\n        formManager: this.formManager,\n        onChange: () => this.handleChange(index),\n        onEnter: () => this.handleEnter(index),\n        indexInGroup: index,\n        groupName: this.name as string,\n      });\n\n      // Initialize the component\n      question.initialise();\n\n      if (index !== 0) question.disable();\n      if (question.getStateValue('dependsOn')) question.unrequire();\n      return question;\n    });\n  }\n\n  public handleChange(index: number): void {\n    console.log('handleChange', index);\n    if (index !== this.activeQuestionIndex)\n      throw new Error(`Invalid question index: ${index}. Expected: ${this.activeQuestionIndex}`);\n    console.log('handleChange: updateActiveQuestions');\n\n    const question = this.questions[index];\n\n    console.log('handleChange: updateActiveQuestions');\n    this.formManager.saveAnswersToMCT();\n    this.updateActiveQuestions();\n    this.formManager.updateGroupVisibility();\n    this.formManager.prepareWrapper();\n    this.handleNextButton(question.isValid());\n\n    // console.log('handleChange, sending GA event');\n    trackGAEvent('form_interaction', {\n      event_category: 'MCTForm',\n      event_label: `MCT_${question.getStateValue('finalName')}`,\n    });\n  }\n\n  public handleEnter(index: number): void {\n    if (index !== this.activeQuestionIndex)\n      throw new Error(`Invalid question index: ${index}. Expected: ${this.activeQuestionIndex}`);\n\n    const current = this.getActiveQuestion();\n    if (current.isValid()) {\n      this.navigate('next');\n    } else {\n      current.updateVisualState(false);\n    }\n  }\n\n  public handleNextButton(isValid: boolean) {\n    this.formManager.updateNavigation({ nextEnabled: isValid });\n  }\n\n  public getActiveQuestion(): QuestionComponent {\n    return this.questions[this.activeQuestionIndex];\n  }\n\n  public getVisibleQuestions(): QuestionComponent[] {\n    return this.questions.filter((question) => question.getStateValue('isVisible'));\n  }\n\n  public getNextVisibleIndex(start: number): number {\n    let index = start + 1;\n    while (index < this.questions.length && !this.questions[index].getStateValue('isVisible')) {\n      index += 1;\n    }\n    return index;\n  }\n\n  public getPrevVisibleIndex(start: number): number {\n    let index = start - 1;\n    while (index >= 0 && !this.questions[index].getStateValue('isVisible')) {\n      index -= 1;\n    }\n    return index;\n  }\n\n  public navigate(direction: 'next' | 'prev') {\n    this.formManager.saveAnswersToMCT();\n    const activeQuestion = this.getActiveQuestion();\n    this.deactivateQuestion(activeQuestion);\n\n    if (direction === 'next') {\n      const nextIndex = this.getNextVisibleIndex(this.activeQuestionIndex);\n\n      // If there's a next question in this group\n      if (nextIndex < this.questions.length) {\n        this.activeQuestionIndex = nextIndex;\n        const nextQuestion = this.getActiveQuestion();\n        this.activateQuestion(nextQuestion);\n        this.formManager.updateNavigation({ prevEnabled: true });\n      } else {\n        // If we're at the end of this group, try the next group\n        this.formManager.navigateToNextGroup();\n      }\n    } else {\n      const prevIndex = this.getPrevVisibleIndex(this.activeQuestionIndex);\n\n      // If there's a previous question in this group\n      if (prevIndex >= 0) {\n        this.activeQuestionIndex = prevIndex;\n        const prevItem = this.getActiveQuestion();\n        this.activateQuestion(prevItem);\n        this.formManager.updateNavigation({\n          prevEnabled: !(this.formManager.activeGroupIndex === 0 && prevIndex === 0),\n        });\n      } else {\n        // If we're at the start of this group, try the previous group\n        const prevGroup = this.formManager.getPreviousGroupInSequence();\n        if (prevGroup) this.formManager.navigateToPreviousGroup();\n      }\n    }\n  }\n\n  public activateQuestion(question: QuestionComponent): void {\n    question.enable();\n    question.focus();\n    question.toggleActive(true);\n    this.scrollToQuestion(question);\n    this.handleNextButton(question.isValid());\n  }\n\n  private deactivateQuestion(question: QuestionComponent): void {\n    question.disable();\n    question.toggleActive(false);\n  }\n\n  private scrollToQuestion(item: QuestionComponent): void {\n    this.formManager.components.scroll.scrollTo({\n      top:\n        item.getElement().offsetTop -\n        this.formManager.components.scroll.offsetHeight / 2 +\n        item.getElement().offsetHeight / 2,\n      behavior: 'smooth',\n    });\n  }\n}\n\n// @description: Output group of questions\nexport class OutputGroup extends BaseGroup {\n  protected formManager: MainFormManager;\n  private card: HTMLElement;\n  private loader: HTMLElement;\n  private response: ProductsResponse | null = null;\n  private summaryInfo: SummaryInfo | null = null;\n  private outputs: HTMLDivElement[];\n  private button: HTMLButtonElement;\n\n  constructor(component: HTMLElement, formManager: MainFormManager) {\n    super(component, formManager);\n    this.formManager = formManager;\n    this.card = queryElement(`[${attr.element}=\"output-card\"]`, this.component) as HTMLElement;\n    this.loader = queryElement(`[${attr.element}=\"output-loader\"]`, this.component) as HTMLElement;\n    this.outputs = queryElements(`[${attr.output}]`, this.component) as HTMLDivElement[];\n    this.button = queryElement(`[${attr.element}=\"get-results\"]`, this.component) as HTMLButtonElement;\n\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    this.button.addEventListener('click', () => this.navigateToResults());\n  }\n\n  public show(): void {\n    this.component.style.removeProperty('display');\n    this.isVisible = true;\n  }\n\n  public hide(): void {\n    this.component.style.display = 'none';\n    this.isVisible = false;\n  }\n\n  private scrollToOutput(): void {\n    this.formManager.components.scroll.scrollTo({\n      top:\n        this.component.offsetTop -\n        this.formManager.components.scroll.offsetHeight / 2 +\n        this.component.offsetHeight / 2,\n      behavior: 'smooth',\n    });\n  }\n\n  private showLoader(show: boolean): void {\n    if (show) {\n      this.loader.style.removeProperty('display');\n    } else {\n      this.loader.style.display = 'none';\n    }\n  }\n\n  public activate(): void {\n    this.card.classList.add(classes.active);\n    this.scrollToOutput();\n    this.handleProducts();\n  }\n\n  private async handleProducts(): Promise<void> {\n    this.showLoader(true);\n    this.button.disabled = true;\n    this.response = await this.fetchProducts();\n    if (!this.response) {\n      logError('No products response');\n      return;\n    }\n\n    this.summaryInfo = this.response.result.SummaryInfo;\n\n    this.updateOutputs();\n    this.showLoader(false);\n\n    if (this.response.result.Products.length === 0) {\n      this.button.disabled = true;\n    } else {\n      this.button.disabled = false;\n    }\n  }\n\n  private async fetchProducts(): Promise<ProductsResponse | null> {\n    const input = generateProductsAPIInput();\n    try {\n      return await productsAPI.search(input);\n    } catch (error) {\n      return logError('Failed to fetch products:', { data: error, returnNull: true }) as null;\n    }\n  }\n\n  private updateOutputs(): void {\n    if (!this.summaryInfo) return;\n\n    const summaryLines = generateSummaryLines(this.summaryInfo, this.formManager.getAnswers());\n    if (!summaryLines) return;\n\n    this.outputs.forEach((output) => {\n      const key = output.getAttribute(attr.output) as keyof SummaryLines;\n      output.innerHTML = summaryLines[key];\n    });\n  }\n\n  private navigateToResults(): void {\n    this.formManager.navigateToNextGroup();\n  }\n}\n", "import { lendersAPI } from '$mct/api';\nimport { StatefulInputGroup, type StatefulInputGroupOptions, type StatefulInputGroupState } from '$mct/components';\nimport { DOM_CONFIG } from '$mct/config';\nimport { FormEventNames, type Inputs, type InputValue, type SelectOption } from '$mct/types';\nimport type { FormManager } from './Manager_Base';\n\nconst attr = DOM_CONFIG.attributes.form;\nconst classes = DOM_CONFIG.classes;\n\ninterface QuestionOptions extends StatefulInputGroupOptions<QuestionState> {\n  formManager: FormManager;\n  indexInGroup: number;\n}\n\ninterface QuestionState extends StatefulInputGroupState {\n  isVisible: boolean;\n  dependsOn: string | null;\n  dependsOnValue: string | null;\n}\n\nexport class QuestionComponent extends StatefulInputGroup<QuestionState> {\n  private formManager: FormManager;\n  public indexInGroup: number;\n\n  constructor(options: QuestionOptions) {\n    super(options);\n\n    this.formManager = options.formManager;\n    this.onEnter = options.onEnter;\n    this.indexInGroup = options.indexInGroup;\n  }\n\n  protected init(): void {\n    if (this.isInitialized) return;\n    this.isInitialized = true;\n    this.onInit();\n\n    const dependsOn = this.getAttribute(attr.dependsOn);\n    const dependsOnValue = this.getAttribute(attr.dependsOnValue);\n    if (dependsOn) this.setStateValue('dependsOn', dependsOn);\n    if (dependsOnValue) this.setStateValue('dependsOnValue', dependsOnValue);\n\n    // Call the lender select handler\n    if (this.getStateValue('initialName') === 'Lender') this.handleLenderSelect();\n\n    this.log('QuestionComponent: init complete');\n  }\n\n  // Test method to verify the component is working\n  public testState(): void {\n    console.log('QuestionComponent state:', this.getState());\n    console.log('QuestionComponent isVisible:', this.getStateValue('isVisible'));\n  }\n\n  private async handleLenderSelect(): Promise<void> {\n    if (this.getStateValue('initialName') !== 'Lender') return;\n\n    try {\n      const lenders = await lendersAPI.getAll();\n      const lenderOptions = lenders.map(\n        (lender): SelectOption => ({\n          value: lender.MasterLenderId.toString(),\n          label: lender.LenderName,\n        })\n      );\n\n      this.setSelectOptions(lenderOptions);\n    } catch (error) {\n      console.error('Failed to fetch lenders:', error);\n    }\n  }\n\n  public updateVisualState(isValid: boolean): void {\n    this.toggleClass(this.element, 'has-error');\n  }\n\n  public enable(): void {\n    this.inputs.forEach((input) => {\n      input.disabled = false;\n    });\n  }\n\n  public disable(): void {\n    this.inputs.forEach((input) => {\n      input.disabled = true;\n    });\n  }\n\n  public focus(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No input found to focus on');\n    input.focus();\n  }\n\n  public require(): void {\n    this.eventBus.emit(FormEventNames.QUESTION_REQUIRED, { question: this });\n    this.formManager.saveQuestion(this);\n    this.show();\n    this.setStateValue('isVisible', true);\n  }\n\n  public unrequire(): void {\n    this.eventBus.emit(FormEventNames.QUESTION_UNREQUIRED, { question: this });\n    this.formManager.removeQuestion(this);\n    this.hide();\n    this.setStateValue('isVisible', false);\n  }\n\n  public toggleActive(active?: boolean): void {\n    if (active === undefined) {\n      this.toggleClass(this.element, classes.active);\n    } else {\n      this.toggleClass(this.element, classes.active, active);\n    }\n  }\n\n  public shouldBeVisible(answers: Inputs, groupIsVisible: boolean): boolean {\n    // parent group is not visible\n    if (!groupIsVisible) return false;\n\n    const dependsOn = this.getStateValue('dependsOn');\n    const dependsOnValue = this.getStateValue('dependsOnValue');\n\n    if (!dependsOn) return true; // question depends on nothing\n    if (!dependsOnValue) return answers[dependsOn] !== null; // question depends on a prior question being answered, no specific value\n    return answers[dependsOn] === dependsOnValue; // question depends on a prior question being answered, with a specific value\n  }\n}\n", "// Create the main API instance\nimport { APIClient } from './client';\nimport {\n  CreateLeadAndBookingAPI,\n  LCIDAPI,\n  LendersAPI,\n  LogUserEventsAPI,\n  MortgageAppointmentSlotsAPI,\n  ProductsAPI,\n} from './methods';\n\n// Create a single API client instance\nconst apiClient = new APIClient();\n\n// Export typed API methods\nexport const createLeadAndBookingAPI = new CreateLeadAndBookingAPI(apiClient);\nexport const lcidAPI = new LCIDAPI(apiClient);\nexport const lendersAPI = new LendersAPI(apiClient);\nexport const logUserEventsAPI = new LogUserEventsAPI(apiClient);\nexport const mortgageAppointmentSlotsAPI = new MortgageAppointmentSlotsAPI(apiClient);\nexport const productsAPI = new ProductsAPI(apiClient);\n\n// Export the client for advanced usage\nexport { apiClient };\n\n// Re-export types and error handler\nexport { APIError, APIErrorHandler } from './client';\n", "export * from './APIClient';\nexport * from './ErrorHandler';\n", "import { API_CONFIG } from '$mct/config';\nimport { getBaseURLForAPI } from '$utils/environment/getBaseURLForAPI';\n\nexport interface RequestOptions extends RequestInit {\n  timeout?: number;\n  retries?: number;\n  retryDelay?: number;\n}\n\nexport interface APIClientConfig {\n  baseURL?: string;\n  defaultHeaders?: Record<string, string>;\n  timeout?: number;\n  retries?: number;\n  retryDelay?: number;\n}\n\nexport interface APIErrorResponse {\n  title: string;\n  status: number;\n  detail: string;\n}\n\nexport interface APIErrorItem {\n  field?: string;\n  message?: string;\n  code?: string;\n}\n\nexport class APIError extends Error {\n  constructor(\n    message: string,\n    public status: number,\n    public endpoint: string,\n    public response?: any,\n    public errorDetails?: APIErrorResponse\n  ) {\n    super(message);\n    this.name = 'APIError';\n  }\n}\n\nexport class APIClient {\n  private baseURL: string;\n  private defaultHeaders: Record<string, string>;\n  private timeout: number;\n  private retries: number;\n  private retryDelay: number;\n\n  constructor(config: APIClientConfig = {}) {\n    this.baseURL = config.baseURL || API_CONFIG.baseURL;\n    this.defaultHeaders = {\n      'Content-Type': 'application/json',\n      ...config.defaultHeaders,\n    };\n    this.timeout = config.timeout || API_CONFIG.timeout;\n    this.retries = config.retries || API_CONFIG.retries;\n    this.retryDelay = config.retryDelay || API_CONFIG.retryDelay;\n  }\n\n  async request<T>(endpoint: string, options: RequestOptions = {}): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n    console.log('\uD83D\uDD04 Request URL: ', url);\n    console.log('\uD83D\uDD04 Request Options: ', options);\n    const headers = { ...this.defaultHeaders, ...options.headers };\n\n    const requestOptions: RequestInit = {\n      ...options,\n      headers,\n    };\n\n    console.log('\uD83D\uDD04 Request Options: ', requestOptions);\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt <= this.retries; attempt++) {\n      try {\n        const response = await this.makeRequest<T>(url, requestOptions);\n        return response;\n      } catch (error) {\n        lastError = error as Error;\n\n        // Don't retry on client errors (4xx) except 429 (rate limit)\n        if (error instanceof APIError && error.status >= 400 && error.status < 500 && error.status !== 429) {\n          throw error;\n        }\n\n        // If this is the last attempt, throw the error\n        if (attempt === this.retries) {\n          throw error;\n        }\n\n        // Wait before retrying\n        await this.delay(this.retryDelay * Math.pow(2, attempt)); // Exponential backoff\n      }\n    }\n\n    throw lastError;\n  }\n\n  private async makeRequest<T>(url: string, options: RequestInit): Promise<T> {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        let errorData;\n        let errorDetails: APIErrorResponse | undefined;\n\n        try {\n          errorData = await response.json();\n\n          // Check if the response has the expected error structure\n          if (errorData && typeof errorData === 'object' && errorData.error) {\n            errorDetails = errorData.error as APIErrorResponse;\n\n            // Log the complete error object for debugging\n            console.error('\u274C Complete API Error Object:', errorData);\n\n            // Log the structured error details\n            console.error('\u274C API Error Response:', {\n              title: errorDetails.title,\n              status: errorDetails.status,\n              detail: errorDetails.detail,\n              url: url,\n            });\n\n            // Check for additional errors array\n            if (errorData.errors && Array.isArray(errorData.errors)) {\n              console.error('\u274C API Validation Errors:', {\n                count: errorData.errors.length,\n                errors: errorData.errors.map((err: APIErrorItem) => ({\n                  field: err.field || 'unknown',\n                  message: err.message || 'No message',\n                  code: err.code || 'unknown',\n                })),\n                url: url,\n              });\n            }\n          } else {\n            // Fallback for non-structured error responses\n            console.error('\u274C API Error Response:', {\n              status: response.status,\n              statusText: response.statusText,\n              data: errorData,\n              url: url,\n            });\n          }\n        } catch {\n          errorData = await response.text();\n          console.error('\u274C API Error Response (text):', {\n            status: response.status,\n            statusText: response.statusText,\n            data: errorData,\n            url: url,\n          });\n        }\n\n        const errorMessage = errorDetails\n          ? `${errorDetails.title}: ${errorDetails.detail}`\n          : `HTTP ${response.status}: ${response.statusText}`;\n\n        throw new APIError(errorMessage, response.status, url, errorData, errorDetails);\n      }\n\n      // Log successful responses for debugging\n      const responseData = await response.json();\n      console.log('\u2705 API Success Response:', {\n        status: response.status,\n        url: url,\n        data: responseData,\n      });\n\n      return responseData;\n    } catch (error) {\n      clearTimeout(timeoutId);\n\n      if (error instanceof APIError) {\n        throw error;\n      }\n\n      if (error instanceof Error && error.name === 'AbortError') {\n        console.error('\u23F0 Request timeout:', { url });\n        throw new APIError('Request timeout', 408, url);\n      }\n\n      console.error('\uD83C\uDF10 Network error:', {\n        url,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      });\n      throw new APIError(error instanceof Error ? error.message : 'Network error', 0, url);\n    }\n  }\n\n  private delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n", "import { logError } from '$mct/utils';\nimport { APIError } from './APIClient';\n\nexport class APIErrorHandler {\n  static handle(error: unknown, context: string): void {\n    if (error instanceof APIError) {\n      this.handleAPIError(error, context);\n    } else {\n      this.handleGenericError(error, context);\n    }\n  }\n\n  private static handleAPIError(error: APIError, context: string): void {\n    // Enhanced logging with structured data\n    logError(`API Error in ${context}`, {\n      data: {\n        endpoint: error.endpoint,\n        status: error.status,\n        message: error.message,\n        response: error.response,\n      },\n    });\n\n    // Show user-friendly message based on error type\n    this.showUserFriendlyMessage(error);\n  }\n\n  private static handleGenericError(error: unknown, context: string): void {\n    logError(`Generic error in ${context}`, {\n      data: {\n        error: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined,\n      },\n    });\n  }\n\n  private static showUserFriendlyMessage(error: APIError): void {\n    let message = 'An error occurred while fetching data.';\n\n    switch (error.status) {\n      case 404:\n        message = 'The requested data was not found.';\n        break;\n      case 429:\n        message = 'Too many requests. Please try again in a moment.';\n        break;\n      case 500:\n        message = 'Server error. Please try again later.';\n        break;\n      case 408:\n        message = 'Request timed out. Please check your connection and try again.';\n        break;\n    }\n\n    // You could integrate this with a toast notification system\n    console.warn('User message:', message);\n  }\n}\n", "export * from './fetchData';\nexport * from './generateProductsAPIInput';\nexport * from './generateSummaryLines';\nexport * from './getEnumKey';\nexport * from './getEnumValue';\nexport * from './getInputValueAsLandC';\nexport * from './getValueAsLandC';\nexport * from './logError';\n", "import { getBaseURLForAPI } from '$utils/environment/getBaseURLForAPI';\n\nexport const fetchData = async <T>(endpoint: string, options?: RequestInit): Promise<T> => {\n  const baseURL = getBaseURLForAPI();\n  const response = await fetch(`${baseURL}${endpoint}`, options);\n  if (!response.ok) throw new Error('Failed to fetch data');\n\n  return response.json();\n};\n", "import { FILTERS_CONFIG } from '$mct/config';\nimport { MCTManager } from '$mct/manager';\nimport {\n  CalculationKeysENUM,\n  InputKeysENUM,\n  MortgageTypeENUM,\n  PropertyTypeENUM,\n  PurchRemoENUM,\n  ResiBtlENUM,\n  SapValueENUM,\n  SchemePeriodsENUM,\n  SchemePurposeENUM,\n  SchemeTypesENUM,\n  SortColumnENUM,\n  type InputsByEndOfForm,\n  type ProductsOptions,\n  type ProductsRequest,\n  type ProductsRequestFeatures,\n  type PurchInputs,\n  type RemoInputs,\n} from '$mct/types';\nimport { getEnumKey, getValueAsLandC } from '$mct/utils';\n\nexport const generateProductsAPIInput = (options: ProductsOptions = {}): ProductsRequest | null => {\n  MCTManager.recalculate();\n  console.log('generateProductsAPIInput');\n  const PurchRemo = getValueAsLandC(InputKeysENUM.PurchRemo);\n  const answers =\n    PurchRemo === PurchRemoENUM.Purchase\n      ? (MCTManager.getAnswers() as InputsByEndOfForm & PurchInputs)\n      : PurchRemo === PurchRemoENUM.Remortgage\n        ? (MCTManager.getAnswers() as InputsByEndOfForm & RemoInputs)\n        : null;\n\n  if (!answers) return null;\n\n  const { PropertyValue, ResiBtl, MortgageLength } = answers;\n\n  const RepaymentValue =\n    PurchRemo === PurchRemoENUM.Purchase\n      ? PropertyValue - (answers as InputsByEndOfForm & PurchInputs)[InputKeysENUM.DepositAmount]\n      : answers.RepaymentValue;\n\n  // No question exists for PropertyType, so we use the default value\n  const PropertyType = PropertyTypeENUM.House;\n\n  // Format required ProductsRequest values\n  const MortgageType =\n    ResiBtl === getEnumKey(ResiBtlENUM, ResiBtlENUM.Residential) ? MortgageTypeENUM.Residential : MortgageTypeENUM.Btl;\n  const TermYears = MortgageLength;\n  const SchemePurpose =\n    PurchRemo === PurchRemoENUM.Purchase ? SchemePurposeENUM.Purchase : SchemePurposeENUM.Remortgage;\n  const SchemePeriods = getValueAsLandC(InputKeysENUM.SchemePeriods) as SchemePeriodsENUM; // Make sure this returns non-undefined (should be fine)\n  const SchemeTypes = getValueAsLandC(InputKeysENUM.SchemeTypes) as SchemeTypesENUM[]; // This returns an array as expected\n\n  const NumberOfResults = options.numberOfResults ?? 1;\n  const SortColumn = options.sortColumn ?? SortColumnENUM.Rate;\n\n  const endOfAnswersInput: ProductsRequest = {\n    PropertyValue,\n    RepaymentValue,\n    PropertyType,\n    MortgageType,\n    TermYears,\n    SchemePurpose,\n    SchemePeriods: [SchemePeriods],\n    SchemeTypes,\n    NumberOfResults,\n    SortColumn,\n  };\n\n  console.log('endOfAnswersInput', endOfAnswersInput);\n\n  const InterestOnlyValue = (answers.InterestOnlyValue as number) ?? 0;\n\n  // First try options, then filters config\n  // @TODO: check that NewBuild flag is being passed through options\n  const NewBuild = options.NewBuild ?? FILTERS_CONFIG.NewBuild === 'true' ? true : false;\n\n  // First try options, then filters config\n  // @TODO: check that SapValue flag is being passed through options\n  const SapValue =\n    options.SapValue ?? FILTERS_CONFIG.SapValue === getEnumKey(SapValueENUM, SapValueENUM.No)\n      ? SapValueENUM.No\n      : SapValueENUM.Yes;\n\n  const Features: ProductsRequestFeatures = {};\n  if (options.HelpToBuy) Features.HelpToBuy = options.HelpToBuy;\n  if (options.Offset) Features.Offset = options.Offset;\n  if (options.EarlyRepaymentCharge) Features.EarlyRepaymentCharge = options.EarlyRepaymentCharge;\n  if (NewBuild !== undefined) Features.NewBuild = NewBuild;\n\n  const IncludeRetention = (MCTManager.getCalculation(CalculationKeysENUM.IncludeRetention) as boolean) ?? false;\n\n  const input: ProductsRequest = {\n    ...endOfAnswersInput,\n    InterestOnlyValue,\n    SapValue,\n    Features,\n    IncludeRetention,\n  };\n\n  console.log('input', input);\n\n  MCTManager.setCalculations({ RepaymentValue, InterestOnlyValue });\n\n  return input;\n};\n", "import { formatNumber } from '$utils/formatting';\nimport { DOM_CONFIG } from '$mct/config';\nimport {\n  RepaymentTypeENUM,\n  SchemePeriodsENUM,\n  SchemeTypesENUM,\n  type Inputs,\n  // type CheckboxList,\n  type SummaryInfo,\n  type SummaryLines,\n} from '$mct/types';\nimport { generateProductsAPIInput } from './generateProductsAPIInput';\n\nconst classes = DOM_CONFIG.classes;\n\nexport const generateSummaryLines = (summaryInfo: SummaryInfo, answers: Inputs): SummaryLines | null => {\n  const productsAPIInput = generateProductsAPIInput();\n  if (!productsAPIInput) return null;\n  const { RepaymentValue, TermYears, SchemePeriods, SchemeTypes } = productsAPIInput;\n  const { RepaymentType } = answers;\n\n  // Get repayment and term years text\n  const RepaymentValueText = formatNumber(RepaymentValue, { type: 'currency' });\n  const TermYearsText = `${TermYears} years`;\n\n  // Get repayment type text\n  const RepaymentTypeText =\n    RepaymentType === RepaymentTypeENUM.Repayment\n      ? 'repayment'\n      : RepaymentTypeENUM.InterestOnly\n        ? 'interest only'\n        : 'part repayment part interest';\n\n  // Get scheme types text\n  const SchemeTypesMap = SchemeTypes.map((type) => (type === SchemeTypesENUM.Fixed ? 'fixed' : 'variable'));\n\n  // Get scheme periods text\n  const SchemePeriodsMap = SchemePeriods.map((period) =>\n    period === SchemePeriodsENUM.TwoYears\n      ? '2'\n      : period === SchemePeriodsENUM.ThreeYears\n        ? '3'\n        : period === SchemePeriodsENUM.FiveYears\n          ? '5'\n          : '5+'\n  );\n\n  const SchemePeriodsText = `${SchemePeriodsMap} year`;\n\n  const SchemeTypesText =\n    SchemeTypesMap.length === 1\n      ? `${SchemeTypesMap[0]} rate`\n      : SchemeTypesMap.length > 1\n        ? `${SchemeTypesMap[0]} or ${SchemeTypesMap[1]} rate`\n        : null;\n\n  const BorrowOverTerm = `Looks like you want to borrow <span class=\"${classes.highlight}\">${RepaymentValueText}</span> over <span class=\"${classes.highlight}\">${TermYearsText}</span>`;\n  const SchemeAndType = `<span class=\"${classes.highlight}\">${SchemePeriodsText} ${SchemeTypesText} ${RepaymentTypeText}</span> mortgage`;\n  const ProductsAndLenders = `Great news. We\u2019ve found <span class=\"${classes.highlight}\">${summaryInfo.NumberOfProducts} mortgage products</span> from <span class=\"${classes.highlight}\">${summaryInfo.NumberOfLenders}</span> different lenders. Click below to see your results.`;\n  const DealsAndRates = `We\u2019ve found <span class=\"${classes.highlight}\">${summaryInfo.NumberOfProducts} deals</span> starting from <span class=\"${classes.highlight}\">${summaryInfo.LowestRate}%</span>.`;\n  const Summary = `${BorrowOverTerm} with a ${SchemeAndType}`;\n  return {\n    BorrowOverTerm,\n    SchemeAndType,\n    ProductsAndLenders,\n    DealsAndRates,\n    Summary,\n  };\n};\n", "export const getEnumValue = <T extends Record<string, string | number>>(\n  enumObj: T,\n  key: string | keyof T\n): T[keyof T] | undefined => {\n  return enumObj[key as keyof T];\n};\n", "import { MCTManager } from '$mct/manager';\nimport {\n  CreditImpairedENUM,\n  EndOfTermENUM,\n  FirstTimeBuyerENUM,\n  InputKeysENUM,\n  PurchRemoENUM,\n  ReadinessToBuyENUM,\n  RemoChangeENUM,\n  RepaymentTypeENUM,\n  ResiBtlENUM,\n  SchemePeriodsENUM,\n  SchemeTypesENUM,\n  type InputKey,\n  type Inputs,\n  type InputValue,\n} from '$mct/types';\nimport { getEnumValue } from '$mct/utils';\n\n// Helper type to extract the value type from an interface\ntype ExtractValueType<T, K extends keyof T> = T[K];\n\n// Union type for all possible keys (both enum values and literal keys)\ntype AllKeys = keyof Inputs | (typeof InputKeysENUM)[keyof typeof InputKeysENUM];\n\n// Conditional type that returns the correct type based on the Inputs interface\ntype GetValueAsLandCReturnType<T extends AllKeys> = T extends keyof Inputs\n  ? ExtractValueType<Inputs, T>\n  : T extends (typeof InputKeysENUM)[keyof typeof InputKeysENUM]\n    ? ExtractValueType<Inputs, T>\n    : never;\n\nexport const getInputValueAsLandC = <T extends AllKeys>(key: T): GetValueAsLandCReturnType<T> | undefined => {\n  const value = MCTManager.getAnswer(key as InputKey) as InputValue | undefined;\n  if (!value) return undefined;\n\n  // Return number or boolean values as they are\n  if (typeof value === 'number' || typeof value === 'boolean') return value as GetValueAsLandCReturnType<T>;\n\n  // Resolve array values first (convert enum keys to enum values)\n  if (Array.isArray(value)) {\n    switch (key) {\n      case InputKeysENUM.SchemeTypes:\n      case 'SchemeTypes':\n        return value.map(\n          (v) => getEnumValue(SchemeTypesENUM, v) as SchemeTypesENUM\n        ) as unknown as GetValueAsLandCReturnType<T>;\n      default:\n        return value as unknown as GetValueAsLandCReturnType<T>;\n    }\n  }\n\n  // Resolve string values (convert enum keys to enum values)\n  switch (key) {\n    case InputKeysENUM.PurchRemo:\n    case 'PurchRemo':\n      return getEnumValue(PurchRemoENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.FTB:\n    case 'FTB':\n      return getEnumValue(FirstTimeBuyerENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.ResiBtl:\n    case 'ResiBtl':\n      return getEnumValue(ResiBtlENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.ReadinessToBuy:\n    case 'ReadinessToBuy':\n      return getEnumValue(ReadinessToBuyENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.CreditImpaired:\n    case 'CreditImpaired':\n      return getEnumValue(CreditImpairedENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.RepaymentType:\n    case 'RepaymentType':\n      return getEnumValue(RepaymentTypeENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.SchemePeriods:\n    case 'SchemePeriods':\n      return getEnumValue(SchemePeriodsENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.EndOfTerm:\n    case 'EndOfTerm':\n      return getEnumValue(EndOfTermENUM, value) as GetValueAsLandCReturnType<T>;\n\n    case InputKeysENUM.RemoChange:\n    case 'RemoChange':\n      return getEnumValue(RemoChangeENUM, value) as GetValueAsLandCReturnType<T>;\n\n    default:\n      return value as GetValueAsLandCReturnType<T>;\n  }\n};\n", "import { MCTManager } from '$mct/manager';\nimport {\n  CreditImpairedENUM,\n  EndOfTermENUM,\n  FirstTimeBuyerENUM,\n  InputKeysENUM,\n  PurchRemoENUM,\n  ReadinessToBuyENUM,\n  RemoChangeENUM,\n  RepaymentTypeENUM,\n  ResiBtlENUM,\n  SchemePeriodsENUM,\n  SchemeTypesENUM,\n  type InputKey,\n  type Inputs,\n} from '$mct/types';\nimport { getEnumValue } from '$mct/utils';\n\n// Helper type to extract the value type from an interface\ntype ExtractValueType<T, K extends keyof T> = T[K];\n\n// Union type for all possible keys (both enum values and literal keys)\ntype AllKeys = keyof Inputs | (typeof InputKeysENUM)[keyof typeof InputKeysENUM];\n\n// Map of keys to their corresponding enums\ntype EnumMap = {\n  PurchRemo: typeof PurchRemoENUM;\n  FTB: typeof FirstTimeBuyerENUM;\n  ResiBtl: typeof ResiBtlENUM;\n  ReadinessToBuy: typeof ReadinessToBuyENUM;\n  CreditImpaired: typeof CreditImpairedENUM;\n  RepaymentType: typeof RepaymentTypeENUM;\n  SchemeTypes: typeof SchemeTypesENUM;\n  SchemePeriods: typeof SchemePeriodsENUM;\n  EndOfTerm: typeof EndOfTermENUM;\n  RemoChange: typeof RemoChangeENUM;\n};\n\n// Conditional type that returns the enum values\ntype GetValueAsLandCReturnType<T extends AllKeys> = T extends keyof EnumMap\n  ? T extends 'SchemeTypes'\n    ? SchemeTypesENUM[] // Special case for SchemeTypes which should return an array\n    : EnumMap[T][keyof EnumMap[T]]\n  : T extends keyof Inputs\n    ? ExtractValueType<Inputs, T>\n    : never;\n\nexport const getValueAsLandC = <T extends AllKeys>(key: T): GetValueAsLandCReturnType<T> | undefined => {\n  const value = MCTManager.getAnswer(key as InputKey);\n\n  if (!value) return undefined;\n\n  // Return number or boolean values as they are\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return value as GetValueAsLandCReturnType<T>;\n  }\n\n  // Dynamic enum mapping\n  const enumMap: Record<string, any> = {\n    PurchRemo: PurchRemoENUM,\n    FTB: FirstTimeBuyerENUM,\n    ResiBtl: ResiBtlENUM,\n    ReadinessToBuy: ReadinessToBuyENUM,\n    CreditImpaired: CreditImpairedENUM,\n    RepaymentType: RepaymentTypeENUM,\n    SchemeTypes: SchemeTypesENUM,\n    SchemePeriods: SchemePeriodsENUM,\n    EndOfTerm: EndOfTermENUM,\n    RemoChange: RemoChangeENUM,\n  };\n\n  const enumType = enumMap[key as string];\n  if (enumType) {\n    // Handle array values (like SchemeTypes)\n    if (Array.isArray(value)) {\n      return value.map((v) => getEnumValue(enumType, v)) as unknown as GetValueAsLandCReturnType<T>;\n    }\n    // Handle string values\n    return getEnumValue(enumType, value as string) as GetValueAsLandCReturnType<T>;\n  }\n\n  return value as GetValueAsLandCReturnType<T>;\n};\n", "type LogErrorOptions = {\n  data?: any;\n  returnNull?: boolean;\n};\n\nexport function logError(message: string, options: LogErrorOptions = {}): false | null {\n  console.log(message, options.data || '');\n  return options.returnNull ? null : false;\n}\n", "export * from './CreateLeadAndBookingAPI';\nexport * from './LCIDAPI';\nexport * from './LendersAPI';\nexport * from './LogUserEventsAPI';\nexport * from './MortgageAppointmentSlotsAPI';\nexport * from './ProductsAPI';\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { CreateLeadAndBookingRequest, CreateLeadAndBookingResponse } from '$mct/types';\n\nexport class CreateLeadAndBookingAPI {\n  constructor(private client: APIClient) {}\n\n  async createLeadAndBooking(request: CreateLeadAndBookingRequest): Promise<CreateLeadAndBookingResponse> {\n    const input = { input: request };\n    console.log('CreateLeadAndBooking Request: ', input);\n    console.log('CreateLeadAndBooking Endpoint: ', API_CONFIG.endpoints.createLeadAndBooking);\n    return this.client.request<CreateLeadAndBookingResponse>(API_CONFIG.endpoints.createLeadAndBooking, {\n      method: 'POST',\n      body: JSON.stringify(input),\n    });\n  }\n}\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { ICID, LCID } from '$mct/types';\n\nexport class LCIDAPI {\n  constructor(private client: APIClient) {}\n\n  async generate(lcid: LCID | null, icid: ICID | null): Promise<LCID> {\n    const response = await this.client.request<{ result: { lcid: LCID } }>(API_CONFIG.endpoints.lcid, {\n      method: 'POST',\n      body: JSON.stringify({\n        endpoint: 'NewEnquiry',\n        input: { lcid, icid },\n      }),\n    });\n\n    if (!response?.result?.lcid) throw new Error('Failed to generate LCID');\n    return response.result.lcid;\n  }\n}\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { LenderDetails, LenderListResponse } from '$mct/types';\n\nexport class LendersAPI {\n  constructor(private client: APIClient) {}\n\n  async getAll(): Promise<LenderDetails[]> {\n    const response = await this.client.request<LenderListResponse>(API_CONFIG.endpoints.lenders);\n    return response.result.lenders;\n  }\n}\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { LogUserEventRequest, LogUserEventResponse } from '$mct/types';\n\nexport class LogUserEventsAPI {\n  constructor(private client: APIClient) {}\n\n  async logEvent(request: LogUserEventRequest): Promise<LogUserEventResponse> {\n    console.log('LogUserEventsAPI: ', request);\n    return this.client.request<LogUserEventResponse>(API_CONFIG.endpoints.logUserEvents, {\n      method: 'POST',\n      body: JSON.stringify({ input: request }),\n    });\n  }\n}\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { MortgageAppointmentSlotsResponse } from '$mct/types';\n\nexport class MortgageAppointmentSlotsAPI {\n  constructor(private client: APIClient) {}\n\n  async getSlots(dateFrom: string, dateTo: string): Promise<MortgageAppointmentSlotsResponse> {\n    const params = new URLSearchParams({\n      dateFrom,\n      dateTo,\n    });\n\n    return this.client.request<MortgageAppointmentSlotsResponse>(\n      `${API_CONFIG.endpoints.mortgageAppointmentSlots}?${params.toString()}`,\n      {\n        method: 'GET',\n      }\n    );\n  }\n}\n", "import { APIClient } from '../client/APIClient';\nimport { API_CONFIG } from '$mct/config';\nimport type { ProductsRequest, ProductsResponse } from '$mct/types';\n\nexport class ProductsAPI {\n  constructor(private client: APIClient) {}\n\n  async search(request: ProductsRequest): Promise<ProductsResponse> {\n    return this.client.request<ProductsResponse>(API_CONFIG.endpoints.products, {\n      method: 'POST',\n      body: JSON.stringify({ input: request }),\n    });\n  }\n}\n", "export * from './base';\nexport * from './events';\nexport * from './tests';\n", "// Base Components\nexport * from './BaseComponent';\nexport * from './InteractiveComponent';\nexport * from './StatefulComponent';\nexport * from './StatefulInputGroup';\nexport * from './StatefulManager';\nexport * from './InputGroupBase';\n", "import { globalEventBus } from '../events/globalEventBus';\nimport type { TypedEventHandler } from '../events/EventBus';\nimport type { EventName, AllEvents } from '$mct/types';\n\nexport interface ComponentOptions {\n  element: HTMLElement;\n  debug?: boolean;\n  customEventBus?: typeof globalEventBus;\n}\n\nexport abstract class BaseComponent {\n  protected element: HTMLElement;\n  protected eventBus: typeof globalEventBus;\n  protected debug: boolean;\n  protected isInitialized: boolean = false;\n  protected isDestroyed: boolean = false;\n\n  constructor(options: ComponentOptions) {\n    this.element = options.element;\n    this.eventBus = options.customEventBus || globalEventBus;\n    this.debug = options.debug || false;\n  }\n\n  /**\n   * Initialize the component - call this after construction\n   */\n  public initialise(): void {\n    this.log('BaseComponent: initialise');\n    if (this.isInitialized || this.isDestroyed) return;\n    this.log('BaseComponent: calling init');\n    this.init();\n  }\n\n  /**\n   * Initialize the component\n   * Override in subclasses to add initialization logic\n   */\n  protected init(): void {\n    this.log('BaseComponent: init');\n    if (this.isInitialized) return;\n\n    this.isInitialized = true;\n\n    // Call the abstract initialization method\n    this.log('BaseComponent: calling abstract onInit');\n    this.onInit();\n  }\n\n  /**\n   * Abstract method for component-specific initialization\n   * Override in subclasses\n   */\n  protected abstract onInit(): void;\n\n  /**\n   * Abstract method for component-specific cleanup\n   * Override in subclasses\n   */\n  protected abstract onDestroy(): void;\n\n  /**\n   * Log messages when debug is enabled\n   */\n  protected log(message: string, data?: any): void {\n    if (this.debug) console.log(`[${this.constructor.name}] ${message}`, data);\n  }\n\n  /**\n   * Log error messages when debug is enabled\n   */\n  protected logError(message: string, data?: any): void {\n    if (this.debug) console.error(`[${this.constructor.name}] ${message}`, data);\n  }\n\n  /**\n   * Check if component is initialized\n   */\n  public isReady(): boolean {\n    return this.isInitialized && !this.isDestroyed;\n  }\n\n  /**\n   * Check if component is destroyed\n   */\n  public getDestroyed(): boolean {\n    return this.isDestroyed;\n  }\n\n  /**\n   * Destroy the component and clean up resources\n   */\n  public destroy(): void {\n    if (this.isDestroyed) return;\n\n    this.log('Destroying component');\n\n    // Call the abstract cleanup method\n    this.onDestroy();\n\n    this.isDestroyed = true;\n    this.isInitialized = false;\n  }\n\n  /**\n   * Emit an event through the event bus\n   */\n  protected emit<T extends EventName>(event: T, payload: AllEvents[T]): void {\n    if (this.isDestroyed) return;\n\n    this.eventBus.emit(event, payload);\n  }\n\n  /**\n   * Subscribe to an event\n   * @returns Unsubscribe function\n   */\n  protected on<T extends EventName>(event: T, handler: TypedEventHandler<T>): () => void {\n    return this.eventBus.on(event, handler);\n  }\n\n  /**\n   * Get the component's DOM element\n   */\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  /**\n   * Get a child element by selector\n   */\n  protected queryElement<T extends HTMLElement = HTMLElement>(\n    selector: string,\n    element: HTMLElement = this.element\n  ): T | null {\n    return element.querySelector(selector) as T;\n  }\n\n  /**\n   * Get child elements by selector\n   */\n  protected queryElements<T extends HTMLElement = HTMLElement>(\n    selector: string,\n    element: HTMLElement = this.element\n  ): T[] {\n    return Array.from(element.querySelectorAll(selector)) as T[];\n  }\n\n  /**\n   * Get a child element by attribute selector\n   */\n  protected queryElementByAttribute<T extends HTMLElement = HTMLElement>(\n    attribute: string,\n    value?: string,\n    element: HTMLElement = this.element\n  ): T | null {\n    const query = value ? `[${attribute}=${value}]` : `[${attribute}]`;\n    return element.querySelector(query) as T;\n  }\n\n  /**\n   * Get child elements by attributeselector\n   */\n  protected queryElementsByAttribute<T extends HTMLElement = HTMLElement>(\n    attribute: string,\n    value?: string,\n    element: HTMLElement = this.element\n  ): T[] {\n    const query = value ? `[${attribute}=${value}]` : `[${attribute}]`;\n    return Array.from(element.querySelectorAll(query)) as T[];\n  }\n\n  /**\n   * Check if element has a specific attribute\n   */\n  protected hasAttribute(name: string, element: HTMLElement = this.element): boolean {\n    return element.hasAttribute(name);\n  }\n\n  /**\n   * Get element attribute value\n   */\n  protected getAttribute(name: string, element: HTMLElement = this.element): string | null {\n    return element.getAttribute(name);\n  }\n\n  /**\n   * Set element attribute\n   */\n  protected setAttribute(element: HTMLElement, name: string, value: string): void {\n    element.setAttribute(name, value);\n  }\n\n  // /**\n  //  * Remove element attribute\n  //  */\n  // protected removeAttribute(name: string, element: HTMLElement = this.element): void {\n  //   element.removeAttribute(name);\n  // }\n\n  /**\n   * Add CSS class to element\n   */\n  protected addClass(element: HTMLElement, className: string): void {\n    element.classList.add(className);\n  }\n\n  /**\n   * Remove CSS class from element\n   */\n  protected removeClass(element: HTMLElement, className: string): void {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Toggle CSS class on element\n   */\n  protected toggleClass(element: HTMLElement, className: string, force?: boolean): void {\n    element.classList.toggle(className, force);\n  }\n\n  /**\n   * Add a style to an element\n   */\n  protected addStyle(element: HTMLElement, style: string, value: string): void {\n    element.style.setProperty(style, value);\n  }\n\n  /**\n   * Remove a style from an element\n   */\n  protected removeStyle(element: HTMLElement, style: string): void {\n    element.style.removeProperty(style);\n  }\n\n  /**\n   * Show an element\n   */\n  protected show(element: HTMLElement = this.element): void {\n    this.removeStyle(element, 'display');\n  }\n\n  /**\n   * Hide an element\n   */\n  protected hide(element: HTMLElement = this.element): void {\n    this.addStyle(element, 'display', 'none');\n  }\n}\n", "import { EventBus } from './EventBus';\n\n// Create a global event bus instance\n// This will be shared across all components in the MCT application\nexport const globalEventBus = new EventBus({\n  debug: process.env.NODE_ENV === 'development',\n});\n\n// Export for convenience\nexport default globalEventBus;\n", "import type { AllEvents, EventName, EventPayload } from '$mct/types';\n\nexport interface TypedEventHandler<T extends EventName> {\n  (payload: AllEvents[T]): void;\n}\n\nexport type AnyEventHandler = TypedEventHandler<any>;\n\nexport class EventBus {\n  private handlers: Map<EventName, Set<TypedEventHandler<any>>> = new Map();\n  private debug: boolean = false;\n  private globalHandlers: Set<TypedEventHandler<any>> = new Set();\n\n  constructor(options: { debug?: boolean } = {}) {\n    this.debug = options.debug || false;\n  }\n\n  /**\n   * Subscribe to a specific event with full type safety\n   * @returns Unsubscribe function\n   */\n  on<T extends EventName>(event: T, handler: TypedEventHandler<T>): () => void {\n    if (!this.handlers.has(event)) {\n      this.handlers.set(event, new Set());\n    }\n\n    this.handlers.get(event)!.add(handler);\n\n    if (this.debug) {\n      console.log(`\uD83D\uDCE1 EventBus: Subscribed to \"${event}\"`);\n    }\n\n    return () => {\n      this.handlers.get(event)?.delete(handler);\n      if (this.debug) {\n        console.log(`\uD83D\uDCE1 EventBus: Unsubscribed from \"${event}\"`);\n      }\n    };\n  }\n\n  /**\n   * Subscribe to all events (useful for debugging/monitoring)\n   */\n  onAll(handler: AnyEventHandler): () => void {\n    this.globalHandlers.add(handler);\n\n    return () => {\n      this.globalHandlers.delete(handler);\n    };\n  }\n\n  /**\n   * Emit an event to all subscribers with full type safety\n   */\n  emit<T extends EventName>(event: T, payload: AllEvents[T]): void {\n    if (this.debug) {\n      console.log(`\uD83D\uDCE1 EventBus: Emitting \"${event}\"`, payload);\n    }\n\n    // Notify global handlers first\n    this.globalHandlers.forEach((handler) => {\n      try {\n        handler(payload);\n      } catch (error) {\n        console.error(`Error in global event handler for ${event}:`, error);\n      }\n    });\n\n    // Notify specific event handlers\n    const handlers = this.handlers.get(event);\n    if (handlers) {\n      handlers.forEach((handler) => {\n        try {\n          handler(payload);\n        } catch (error) {\n          console.error(`Error in event handler for ${event}:`, error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Check if there are any handlers for an event\n   */\n  hasHandlers(event: EventName): boolean {\n    return this.handlers.has(event) && this.handlers.get(event)!.size > 0;\n  }\n\n  /**\n   * Get the number of handlers for an event\n   */\n  getHandlerCount(event: EventName): number {\n    return this.handlers.get(event)?.size || 0;\n  }\n\n  /**\n   * Clear all handlers for a specific event\n   */\n  clearEvent(event: EventName): void {\n    this.handlers.delete(event);\n    if (this.debug) {\n      console.log(`\uD83D\uDCE1 EventBus: Cleared all handlers for \"${event}\"`);\n    }\n  }\n\n  /**\n   * Clear all handlers\n   */\n  clear(): void {\n    this.handlers.clear();\n    this.globalHandlers.clear();\n    if (this.debug) {\n      console.log(`\uD83D\uDCE1 EventBus: Cleared all handlers`);\n    }\n  }\n}\n", "import { BaseComponent, type ComponentOptions } from './BaseComponent';\nimport type { TrackedEventListener } from '$mct/types';\n\nexport interface InteractiveComponentOptions extends ComponentOptions {\n  autoBindEvents?: boolean;\n}\n\nexport abstract class InteractiveComponent extends BaseComponent {\n  protected eventListeners: TrackedEventListener[] = [];\n  protected autoBindEvents: boolean;\n\n  constructor(options: InteractiveComponentOptions) {\n    super(options);\n    this.autoBindEvents = options.autoBindEvents ?? true;\n  }\n\n  /**\n   * Override to add event binding logic\n   */\n  protected onInit(): void {\n    this.log('InteractiveComponent: onInit');\n    if (this.autoBindEvents) {\n      this.log('InteractiveComponent: autoBindEvents is true, calling bindEvents');\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * Override to add event cleanup logic\n   */\n  protected onDestroy(): void {\n    this.unbindAllEvents();\n  }\n\n  /**\n   * Bind all event listeners\n   * Override in subclasses to add specific event bindings\n   */\n  protected abstract bindEvents(): void;\n\n  /**\n   * Add an event listener and track it for cleanup\n   */\n  protected addEventListener(config: TrackedEventListener): void {\n    const { element, event, handler, options } = config;\n    if (!element) return this.logError('Cannot add event listener: element is null');\n    if (!this.eventListeners) return this.logError('Cannot add event listener: eventListeners is null');\n\n    try {\n      element.addEventListener(event, handler, options);\n      this.eventListeners.push({ element, event, handler, options });\n\n      this.log(`Added event listener: ${event}`, { element, options });\n    } catch (error) {\n      this.logError('Error adding event listener:', error);\n    }\n  }\n\n  /**\n   * Remove a specific event listener\n   */\n  protected removeEventListener(config: TrackedEventListener): void {\n    const { element, event, handler, options } = config;\n    element.removeEventListener(event, handler, options);\n\n    // Remove from tracking array\n    const index = this.eventListeners.findIndex((listener) => {\n      listener.element === element && listener.event === event && listener.handler === handler;\n    });\n\n    if (index === -1) return;\n    this.eventListeners.splice(index, 1);\n    this.log(`Removed event listener: ${event}`, { element });\n  }\n\n  /**\n   * Remove all tracked event listeners\n   */\n  protected unbindAllEvents(): void {\n    this.eventListeners.forEach(({ element, event, handler, options }) => {\n      element.removeEventListener(event, handler, options);\n    });\n\n    this.log(`Unbound ${this.eventListeners.length} event listeners`);\n    this.eventListeners = [];\n  }\n\n  /**\n   * Get the number of active event listeners\n   */\n  public getEventListenerCount(): number {\n    return this.eventListeners.length;\n  }\n\n  /**\n   * Check if an element has a specific event listener\n   */\n  protected hasEventListener(config: TrackedEventListener): boolean {\n    const { element, event, handler } = config;\n    return this.eventListeners.some((listener) => {\n      listener.element === element && listener.event === event && listener.handler === handler;\n    });\n  }\n\n  /**\n   * Prevent default behavior and stop propagation\n   */\n  protected preventDefaultAndStop(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Prevent default behavior only\n   */\n  protected preventDefault(event: Event): void {\n    event.preventDefault();\n  }\n\n  /**\n   * Stop event propagation only\n   */\n  protected stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  /**\n   * Create a debounced event handler\n   */\n  protected createDebouncedHandler(handler: Function, delay: number = 300): Function {\n    let timeoutId: ReturnType<typeof setTimeout> | null = null;\n\n    return (...args: any[]) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(() => {\n        handler.apply(this, args);\n      }, delay);\n    };\n  }\n\n  /**\n   * Create a throttled event handler\n   */\n  protected createThrottledHandler(handler: Function, delay: number = 300): Function {\n    let lastCall = 0;\n\n    return (...args: any[]) => {\n      const now = Date.now();\n\n      if (now - lastCall >= delay) {\n        lastCall = now;\n        handler.apply(this, args);\n      }\n    };\n  }\n}\n", "import { InteractiveComponent, type InteractiveComponentOptions } from './InteractiveComponent';\n\nexport interface StatefulComponentOptions<T = any> extends InteractiveComponentOptions {\n  initialState: T;\n}\n\nexport abstract class StatefulComponent<T = any> extends InteractiveComponent {\n  protected state: T;\n  protected previousState: T;\n  protected stateSubscribers: Set<(currentState: T, previousState: T) => void>;\n\n  constructor(options: StatefulComponentOptions<T>) {\n    super(options);\n    this.stateSubscribers = new Set();\n    this.state = options.initialState;\n    this.previousState = options.initialState;\n  }\n\n  /**\n   * Get the current state\n   */\n  public getState(): T {\n    return { ...this.state };\n  }\n\n  /**\n   * Get the previous state\n   */\n  public getPreviousState(): T {\n    return { ...this.previousState };\n  }\n\n  /**\n   * Set state with updates\n   * Triggers state change events and notifies subscribers\n   */\n  protected setState(updates: Partial<T>): void {\n    if (this.isDestroyed) return;\n\n    this.previousState = { ...this.state };\n    this.state = { ...this.state, ...updates };\n\n    this.log('State updated', {\n      previous: this.previousState,\n      current: this.state,\n      changes: updates,\n    });\n\n    // Notify subscribers\n    this.notifyStateSubscribers();\n\n    // Emit state change event\n    this.emit('state:changed', {\n      changes: updates,\n      previousState: this.previousState,\n      currentState: this.state,\n    });\n\n    // Call the state change handler\n    this.onStateChange(this.previousState, this.state);\n  }\n\n  /**\n   * Subscribe to state changes\n   * @returns Unsubscribe function\n   */\n  public subscribeToState(callback: (currentState: T, previousState: T) => void): () => void {\n    this.stateSubscribers.add(callback);\n\n    return () => this.stateSubscribers.delete(callback);\n  }\n\n  /**\n   * Notify all state subscribers\n   */\n  private notifyStateSubscribers(): void {\n    this.stateSubscribers.forEach((callback) => {\n      try {\n        callback(this.state, this.previousState);\n      } catch (error) {\n        console.error('Error in state subscriber:', error);\n      }\n    });\n  }\n\n  /**\n   * Override in subclasses to handle state changes\n   */\n  protected onStateChange(previousState: T, currentState: T): void {\n    // Override in subclasses\n  }\n\n  /**\n   * Check if a specific part of the state has changed\n   */\n  protected hasStateChanged<K extends keyof T>(key: K): boolean {\n    return this.state[key] !== this.previousState[key];\n  }\n\n  /**\n   * Get the value of a specific state key\n   */\n  public getStateValue<K extends keyof T>(key: K): T[K] {\n    return this.state[key];\n  }\n\n  /**\n   * Set the value of a specific state key\n   */\n  protected setStateValue<K extends keyof T>(key: K, value: T[K]): void {\n    this.setState({ [key]: value } as unknown as Partial<T>);\n  }\n\n  /**\n   * Reset state to initial values\n   */\n  protected resetState(): void {\n    this.setState(this.getInitialState());\n  }\n\n  /**\n   * Get the initial state (override in subclasses if needed)\n   */\n  protected getInitialState(): T {\n    return this.state;\n  }\n\n  /**\n   * Override to add cleanup for state subscribers\n   */\n  protected onDestroy(): void {\n    super.onDestroy();\n    this.stateSubscribers.clear();\n  }\n}\n", "import { StatefulComponent, type StatefulComponentOptions } from './StatefulComponent';\nimport {\n  FormEventNames,\n  type AllEvents,\n  type CheckboxValues,\n  type Input,\n  type InputType,\n  type InputValue,\n  type NumberValue,\n  type RadioValue,\n  type SelectOption,\n  type SelectValue,\n  type TextValue,\n} from '$mct/types';\n\nexport interface StatefulInputGroupState {\n  value: InputValue | null;\n  isValid: boolean;\n  isInitialised: boolean;\n  type: InputType;\n  groupName: string;\n  initialName: string;\n  finalName: string;\n}\n\nexport interface StatefulInputGroupOptions<T extends StatefulInputGroupState = StatefulInputGroupState>\n  extends Omit<StatefulComponentOptions<T>, 'initialState'> {\n  extendedInitialState?: Partial<T>; // Additional state properties for extending classes\n  initialState?: T; // Optional - will be auto-generated if extendedInitialState is provided\n  onChange: () => void;\n  onEnter: () => void;\n  groupName: string;\n}\n\nexport abstract class StatefulInputGroup<\n  T extends StatefulInputGroupState = StatefulInputGroupState,\n> extends StatefulComponent<T> {\n  protected onChange: () => void; // The function to call when the input group changes\n  protected onEnter: () => void; // The function to call when the user presses enter\n  protected inputs: Input[] = []; // The inputs in the input group\n\n  constructor(options: StatefulInputGroupOptions<T>) {\n    // Use provided initialState or generate from base + extended\n    const finalInitialState =\n      options.initialState ||\n      (() => {\n        // Create base initialState\n        const baseInitialState: StatefulInputGroupState = {\n          value: null,\n          isValid: false,\n          isInitialised: false,\n          type: 'text', // Will be set in onInit\n          groupName: options.groupName,\n          initialName: '', // Will be set in onInit\n          finalName: '', // Will be set in onInit\n        };\n\n        // Merge base state with extended state\n        return {\n          ...baseInitialState,\n          ...options.extendedInitialState,\n        } as T;\n      })();\n\n    super({\n      ...options,\n      initialState: finalInitialState,\n    });\n\n    this.onChange = options.onChange;\n    this.onEnter = options.onEnter;\n  }\n\n  protected onInit(): void {\n    // Initialise inputs and detect type\n    this.inputs = this.queryElements('input, select') as Input[];\n    const type = this.detectType();\n    this.setStateValue('type', type);\n\n    // Get initial name\n    const initialName = this.inputs.find((input) => !!input.name)?.name as string;\n    this.setStateValue('initialName', initialName);\n\n    // Format names and IDs\n    this.formatInputNamesAndIDs();\n\n    // Bind event listeners using new component system\n    if (this.autoBindEvents) this.bindEvents();\n\n    // Mark as initialised\n    this.setStateValue('isInitialised', true);\n  }\n\n  // protected abstract init(): void;\n\n  protected formatInputNamesAndIDs(): void {\n    const groupName = this.getStateValue('groupName');\n    const initialName = this.getStateValue('initialName');\n    const finalName = `${groupName}-${initialName}`;\n    this.setStateValue('finalName', finalName);\n\n    if (this.getStateValue('type') === 'radio' || this.getStateValue('type') === 'checkbox') {\n      this.inputs.forEach((input) => {\n        const label = this.queryElement('label', input.parentElement as HTMLElement) as HTMLLabelElement;\n        const name = finalName;\n        const id = `${finalName}-${input.value}`;\n\n        label.setAttribute('for', id);\n        input.name = name;\n        input.id = id;\n      });\n    } else {\n      const label = this.queryElement('label') as HTMLLabelElement;\n      const input = this.inputs[0];\n      const nameAndID = finalName;\n\n      label.setAttribute('for', nameAndID);\n      input.name = nameAndID;\n      input.id = nameAndID;\n    }\n  }\n\n  protected bindEvents(): void {\n    this.inputs.forEach((input) => {\n      if (this.getStateValue('type') === 'text' || this.getStateValue('type') === 'number') {\n        this.addEventListener({ element: input, event: 'input', handler: () => this.onChange() });\n      } else {\n        this.addEventListener({ element: input, event: 'change', handler: () => this.onChange() });\n      }\n    });\n\n    this.addEventListener({\n      element: this.element,\n      event: 'keydown',\n      handler: (event: Event) => {\n        const ke = event as KeyboardEvent;\n        if (ke.key !== 'Enter') return;\n        this.onEnter();\n      },\n    });\n  }\n\n  protected handleChange(): void {\n    console.log('handleChange');\n    // Update value and validity\n    const value = this.getValue();\n    const isValid = this.isValid();\n\n    // Update state and call the onChange callback\n    this.setState({ value, isValid } as Partial<T>);\n    this.onChange();\n\n    // // Emit change event\n    // this.emit(FormEventNames.INPUT_CHANGED, {\n    //   value,\n    //   isValid,\n    //   type: this.getStateValue('type'),\n    //   groupName: this.getStateValue('groupName'),\n    //   finalName: this.getStateValue('finalName'),\n    // });\n  }\n\n  protected handleEnter(event: Event): void {\n    console.log('handleEnter');\n    // Check if the enter key was pressed\n    const ke = event as KeyboardEvent;\n    if (ke.key !== 'Enter') return;\n\n    // Update value and validity\n    const value = this.getValue();\n    const isValid = this.isValid();\n\n    // Update state and call the onEnter callback\n    this.setState({ value, isValid } as Partial<T>);\n\n    // If the input is not valid, do not call the onEnter callback\n    if (!isValid) return;\n    this.onEnter();\n\n    // this.emit(FormEventNames.INPUT_ON_ENTER, {\n    //   value,\n    //   isValid,\n    //   type: this.getStateValue('type'),\n    //   groupName: this.getStateValue('groupName'),\n    //   finalName: this.getStateValue('finalName'),\n    // });\n  }\n\n  public isValid(): boolean {\n    // Check if any of the inputs are invalid using the native validation API\n    const hasInvalidInput = this.inputs.some((input) => !input.checkValidity());\n    if (hasInvalidInput) return false;\n\n    const value = this.getValue();\n    const type = this.getStateValue('type');\n\n    // Additional type-specific validation\n    if (type === 'radio') return typeof value === 'string' && value !== '';\n    if (type === 'checkbox') {\n      if (typeof value === 'boolean') return true; // Single checkbox is always valid if it exists\n      return Array.isArray(value) && value.length > 0; // Multiple checkboxes need at least one selected\n    }\n    if (type === 'text') return typeof value === 'string' && value.trim() !== '';\n    if (type === 'number') return typeof value === 'number' && !isNaN(value);\n    if (type === 'select-one') return typeof value === 'string' && value !== '';\n\n    return false;\n  }\n\n  protected onStateChange(previousstate: T, currentState: T): void {\n    // Update visual state based on validation\n    if (this.hasStateChanged('isValid')) {\n      this.toggleClass(this.element, 'is-invalid', !currentState.isValid);\n    }\n  }\n\n  protected detectType(): InputType {\n    const input = this.queryElement('input, select') as Input;\n    if (!input) throw new Error('No \"input\" element found in question item');\n\n    if (input.type === 'radio') return 'radio';\n    if (input.type === 'checkbox') return 'checkbox';\n    if (input.type === 'text') return 'text';\n    if (input.type === 'number') return 'number';\n    if (input.type === 'select-one') return 'select-one';\n    if (input.type === 'email') return 'text';\n    if (input.type === 'tel') return 'text';\n    throw new Error(`Unsupported input type: ${input.type}`);\n  }\n\n  protected getRadioValue(): RadioValue | null {\n    const checked = this.inputs.find((input) => (input instanceof HTMLInputElement ? input.checked : false));\n    return checked?.value || null;\n  }\n\n  protected setRadioValue(value: RadioValue): void {\n    const input = this.inputs.find((i) => i.value === value);\n    if (!input || !(input instanceof HTMLInputElement)) throw new Error(`No radio input found with value: ${value}`);\n    input.checked = true;\n  }\n\n  protected resetRadioInput(): void {\n    this.inputs.forEach((input) => (input instanceof HTMLInputElement ? (input.checked = false) : null));\n  }\n\n  protected getCheckboxValues(): CheckboxValues {\n    // If there's only one checkbox, return true/false\n    if (this.inputs.length === 1) {\n      const input = this.inputs[0];\n      return input instanceof HTMLInputElement ? input.checked : false;\n    }\n\n    // For multiple checkboxes, return array of checked values\n    const checked = this.inputs.filter((input) => (input instanceof HTMLInputElement ? input.checked : false));\n    return checked.map((input) => input.value);\n  }\n\n  protected setCheckboxValues(values: CheckboxValues): void {\n    // If there's only one checkbox and value is boolean\n    if (this.inputs.length === 1 && typeof values === 'boolean') {\n      const input = this.inputs[0];\n      if (input instanceof HTMLInputElement) input.checked = values;\n      return;\n    }\n\n    // For multiple checkboxes, value should be an array\n    if (Array.isArray(values)) {\n      this.inputs.forEach((input) =>\n        input instanceof HTMLInputElement ? (input.checked = values.includes(input.value)) : null\n      );\n    }\n  }\n\n  protected resetCheckboxeInputs(): void {\n    this.inputs.forEach((input) => (input instanceof HTMLInputElement ? (input.checked = false) : null));\n  }\n\n  protected getTextValue(): TextValue | null {\n    const input = this.inputs[0];\n    return input ? input.value : null;\n  }\n\n  protected setTextValue(value: TextValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No text input found for text question');\n    input.value = value;\n  }\n\n  protected resetTextInputs(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No text input found for text question');\n    input.value = '';\n  }\n\n  protected getNumberValue(): NumberValue | null {\n    const input = this.inputs[0];\n    if (!input) return null;\n\n    const value = input.value.trim();\n    if (!value) return null;\n\n    const number = parseFloat(value);\n    return isNaN(number) ? null : number;\n  }\n\n  protected setNumberValue(value: NumberValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No number input found for number question');\n    input.value = value.toString();\n  }\n\n  protected resetNumberInput(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No number input found for number question');\n    input.value = '';\n  }\n\n  protected getSelectValue(): SelectValue | null {\n    const input = this.inputs[0];\n    if (!input) return null;\n    return input.value;\n  }\n\n  protected setSelectValue(value: SelectValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    input.value = value;\n  }\n\n  protected resetSelectInput(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    input.value = '';\n  }\n\n  protected setSelectOptions(options: SelectOption[]): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    if (!(input instanceof HTMLSelectElement)) throw new Error('No select input found for select question');\n\n    // Remove all existing options\n    input.innerHTML = '';\n\n    // Add new options\n    options.forEach((option) => {\n      const optionEl = document.createElement('option');\n      optionEl.value = option.value;\n      optionEl.text = option.label;\n      input.appendChild(optionEl);\n    });\n  }\n\n  public getValue(): InputValue | null {\n    switch (this.getStateValue('type')) {\n      case 'radio':\n        return this.getRadioValue();\n      case 'checkbox':\n        return this.getCheckboxValues();\n      case 'text':\n        return this.getTextValue();\n      case 'number':\n        return this.getNumberValue();\n      case 'select-one':\n        return this.getSelectValue();\n      default:\n        throw new Error(`Unsupported question type: ${this.getStateValue('type')}`);\n    }\n  }\n\n  public setValue(value: InputValue): void {\n    switch (this.getStateValue('type')) {\n      case 'radio':\n        if (typeof value !== 'string') throw new Error('Value for radio question must be a string');\n        this.setRadioValue(value);\n        break;\n      case 'checkbox':\n        if (!Array.isArray(value)) throw new Error('Value for checkbox question must be an array');\n        this.setCheckboxValues(value);\n        break;\n      case 'text':\n        if (typeof value !== 'string') throw new Error('Value for text question must be a string');\n        this.setTextValue(value);\n        break;\n      case 'number':\n        if (typeof value !== 'number') throw new Error('Value for number question must be a number');\n        this.setNumberValue(value);\n        break;\n      case 'select-one':\n        if (typeof value !== 'string') throw new Error('Value for select question must be a string');\n        this.setSelectValue(value);\n        break;\n      default:\n        throw new Error(`Unsupported question type: ${this.getStateValue('type')}`);\n    }\n  }\n\n  public getLabels(): string[] {\n    const checked = this.inputs.filter((input) => {\n      if (input instanceof HTMLInputElement) return input.checked;\n      return false;\n    });\n    const labelEls = checked.map((input) => this.queryElement(`label[for=\"${input.id}\"]`) as HTMLLabelElement);\n    return labelEls.map((label) => label.textContent as string);\n  }\n\n  public reset(): void {\n    switch (this.getStateValue('type')) {\n      case 'radio':\n        this.resetRadioInput();\n        break;\n      case 'checkbox':\n        this.resetCheckboxeInputs();\n        break;\n      case 'text':\n        this.resetTextInputs();\n        break;\n      case 'number':\n        this.resetNumberInput();\n        break;\n      case 'select-one':\n        this.resetSelectInput();\n        break;\n      default:\n        throw new Error(`Unsupported question type: ${this.getStateValue('type')}`);\n    }\n  }\n}\n", "import type { StageIDENUM } from '$mct/types';\nimport { StatefulComponent, type StatefulComponentOptions } from './StatefulComponent';\n\nexport interface StatefulManagerState {\n  id: StageIDENUM;\n  isVisible: boolean;\n  isComplete: boolean;\n}\n\nexport interface StatefulManagerOptions<T extends StatefulManagerState = StatefulManagerState>\n  extends Omit<StatefulComponentOptions<T>, 'initialState'> {\n  extendedInitialState?: Partial<T>; // Additional state properties for extending classes\n  initialState?: T; // Optional - will be auto-generated if extendedInitialState is provided\n  id: StageIDENUM;\n}\n\nexport abstract class StatefulManager<\n  T extends StatefulManagerState = StatefulManagerState,\n> extends StatefulComponent<T> {\n  constructor(options: StatefulManagerOptions<T>) {\n    // Use provided initialState or generate from base + extended\n    const finalInitialState =\n      options.initialState ||\n      (() => {\n        // Create base initialState\n        const baseInitialState: StatefulManagerState = {\n          id: options.id,\n          isVisible: false,\n          isComplete: false,\n        };\n\n        // Merge base state with extended state\n        return {\n          ...baseInitialState,\n          ...options.extendedInitialState,\n        } as T;\n      })();\n\n    super({\n      ...options,\n      initialState: finalInitialState,\n    });\n  }\n\n  protected onInit(): void {\n    // Bind event listeners using new component system\n    if (this.autoBindEvents) this.bindEvents();\n  }\n}\n", "import { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\n\nimport type {\n  CheckboxValues,\n  Input,\n  InputType,\n  InputValue,\n  NumberValue,\n  RadioValue,\n  SelectOption,\n  SelectValue,\n  TextValue,\n} from '$mct/types';\n\nexport type InputGroupOptions = {\n  onChange: () => void;\n  groupName: string;\n};\n\nexport abstract class InputGroupBase {\n  public el: HTMLElement;\n  protected onChange: () => void;\n  protected inputs: Input[] = [];\n  protected type: InputType;\n  public groupName: string;\n  public initialName: string;\n  // public initialName: string;\n  public finalName!: string;\n  // public id: string | null = null;\n\n  constructor(el: HTMLElement, options: InputGroupOptions) {\n    this.el = el;\n    this.onChange = options.onChange;\n    this.groupName = options.groupName;\n    this.inputs = queryElements('input, select', this.el) as Input[];\n    this.type = this.detectType();\n    this.initialName = this.inputs.find((input) => !!input.name)?.name as string;\n\n    this.baseInit();\n  }\n\n  protected baseInit(): void {\n    this.formatInputNamesAndIDs();\n    this.bindEventListeners();\n    this.init();\n  }\n\n  protected abstract init(): void;\n\n  protected formatInputNamesAndIDs(): void {\n    this.finalName = `${this.groupName}-${this.initialName}`;\n\n    if (this.type === 'radio' || this.type === 'checkbox') {\n      this.inputs.forEach((input) => {\n        const label = queryElement('label', input.parentElement as HTMLElement) as HTMLLabelElement;\n        const name = this.finalName;\n        const id = `${this.finalName}-${input.value}`;\n\n        label.setAttribute('for', id);\n        input.id = id;\n        input.name = name;\n      });\n    } else {\n      const label = queryElement('label', this.el) as HTMLLabelElement;\n      const input = this.inputs[0];\n      const nameAndID = this.finalName;\n\n      label.setAttribute('for', nameAndID);\n      input.name = nameAndID;\n      input.id = nameAndID;\n    }\n  }\n\n  protected bindEventListeners(): void {\n    this.inputs.forEach((input) => {\n      if (this.type === 'text' || this.type === 'number') {\n        input.addEventListener('input', () => this.onChange());\n      } else {\n        input.addEventListener('change', () => this.onChange());\n      }\n    });\n  }\n\n  public isValid(): boolean {\n    // Check if any of the inputs are invalid using the native validation API\n    const hasInvalidInput = this.inputs.some((input) => !input.checkValidity());\n    if (hasInvalidInput) return false;\n    const value = this.getValue();\n\n    // Additional type-specific validation\n    if (this.type === 'radio') return typeof value === 'string' && value !== '';\n    if (this.type === 'checkbox') {\n      if (typeof value === 'boolean') return true; // Single checkbox is always valid if it exists\n      return Array.isArray(value) && value.length > 0; // Multiple checkboxes need at least one selected\n    }\n    if (this.type === 'text') return typeof value === 'string' && value.trim() !== '';\n    if (this.type === 'number') return typeof value === 'number' && !isNaN(value);\n    if (this.type === 'select-one') return typeof value === 'string' && value !== '';\n\n    return false;\n  }\n\n  protected detectType(): InputType {\n    const input = queryElement('input, select', this.el) as Input;\n    if (!input) throw new Error('No \"input\" element found in question item');\n\n    if (input.type === 'radio') return 'radio';\n    if (input.type === 'checkbox') return 'checkbox';\n    if (input.type === 'text') return 'text';\n    if (input.type === 'number') return 'number';\n    if (input.type === 'select-one') return 'select-one';\n    throw new Error(`Unsupported input type: ${input.type}`);\n  }\n\n  protected getRadioValue(): RadioValue | null {\n    const checked = this.inputs.find((input) => (input instanceof HTMLInputElement ? input.checked : false));\n    return checked?.value || null;\n  }\n\n  protected setRadioValue(value: RadioValue): void {\n    const input = this.inputs.find((i) => i.value === value);\n    if (!input || !(input instanceof HTMLInputElement)) throw new Error(`No radio input found with value: ${value}`);\n    input.checked = true;\n  }\n\n  protected resetRadioInput(): void {\n    this.inputs.forEach((input) => (input instanceof HTMLInputElement ? (input.checked = false) : null));\n  }\n\n  protected getCheckboxValues(): CheckboxValues {\n    // If there's only one checkbox, return true/false\n    if (this.inputs.length === 1) {\n      const input = this.inputs[0];\n      return input instanceof HTMLInputElement ? input.checked : false;\n    }\n\n    // For multiple checkboxes, return array of checked values\n    const checked = this.inputs.filter((input) => (input instanceof HTMLInputElement ? input.checked : false));\n    return checked.map((input) => input.value);\n  }\n\n  protected setCheckboxValues(values: CheckboxValues): void {\n    // If there's only one checkbox and value is boolean\n    if (this.inputs.length === 1 && typeof values === 'boolean') {\n      const input = this.inputs[0];\n      if (input instanceof HTMLInputElement) input.checked = values;\n      return;\n    }\n\n    // For multiple checkboxes, value should be an array\n    if (Array.isArray(values)) {\n      this.inputs.forEach((input) =>\n        input instanceof HTMLInputElement ? (input.checked = values.includes(input.value)) : null\n      );\n    }\n  }\n\n  protected resetCheckboxeInputs(): void {\n    this.inputs.forEach((input) => (input instanceof HTMLInputElement ? (input.checked = false) : null));\n  }\n\n  protected getTextValue(): TextValue | null {\n    const input = this.inputs[0];\n    return input ? input.value : null;\n  }\n\n  protected setTextValue(value: TextValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No text input found for text question');\n    input.value = value;\n  }\n\n  protected resetTextInputs(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No text input found for text question');\n    input.value = '';\n  }\n\n  protected getNumberValue(): NumberValue | null {\n    const input = this.inputs[0];\n    if (!input) return null;\n\n    const value = input.value.trim();\n    if (!value) return null;\n\n    const number = parseFloat(value);\n    return isNaN(number) ? null : number;\n  }\n\n  protected setNumberValue(value: NumberValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No number input found for number question');\n    input.value = value.toString();\n  }\n\n  protected resetNumberInput(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No number input found for number question');\n    input.value = '';\n  }\n\n  protected getSelectValue(): SelectValue | null {\n    const input = this.inputs[0];\n    if (!input) return null;\n    return input.value;\n  }\n\n  protected setSelectValue(value: SelectValue): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    input.value = value;\n  }\n\n  protected resetSelectInput(): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    input.value = '';\n  }\n\n  protected setSelectOptions(options: SelectOption[]): void {\n    const input = this.inputs[0];\n    if (!input) throw new Error('No select input found for select question');\n    if (!(input instanceof HTMLSelectElement)) throw new Error('No select input found for select question');\n\n    // Remove all existing options\n    input.innerHTML = '';\n\n    // Add new options\n    options.forEach((option) => {\n      const optionEl = document.createElement('option');\n      optionEl.value = option.value;\n      optionEl.text = option.label;\n      input.appendChild(optionEl);\n    });\n  }\n\n  public getValue(): InputValue | null {\n    switch (this.type) {\n      case 'radio':\n        return this.getRadioValue();\n      case 'checkbox':\n        return this.getCheckboxValues();\n      case 'text':\n        return this.getTextValue();\n      case 'number':\n        return this.getNumberValue();\n      case 'select-one':\n        return this.getSelectValue();\n      default:\n        throw new Error(`Unsupported question type: ${this.type}`);\n    }\n  }\n\n  public setValue(value: InputValue): void {\n    switch (this.type) {\n      case 'radio':\n        if (typeof value !== 'string') throw new Error('Value for radio question must be a string');\n        this.setRadioValue(value);\n        break;\n      case 'checkbox':\n        if (!Array.isArray(value)) throw new Error('Value for checkbox question must be an array');\n        this.setCheckboxValues(value);\n        break;\n      case 'text':\n        if (typeof value !== 'string') throw new Error('Value for text question must be a string');\n        this.setTextValue(value);\n        break;\n      case 'number':\n        if (typeof value !== 'number') throw new Error('Value for number question must be a number');\n        this.setNumberValue(value);\n        break;\n      case 'select-one':\n        if (typeof value !== 'string') throw new Error('Value for select question must be a string');\n        this.setSelectValue(value);\n        break;\n      default:\n        throw new Error(`Unsupported question type: ${this.type}`);\n    }\n  }\n\n  public getLabels(): string[] {\n    const checked = this.inputs.filter((input) => {\n      if (input instanceof HTMLInputElement) return input.checked;\n      return false;\n    });\n    const labelEls = checked.map((input) => queryElement(`label[for=\"${input.id}\"]`, this.el) as HTMLLabelElement);\n    const labels = labelEls.map((label) => label.textContent as string);\n    return labels;\n  }\n\n  public reset(): void {\n    switch (this.type) {\n      case 'radio':\n        this.resetRadioInput();\n        break;\n      case 'checkbox':\n        this.resetCheckboxeInputs();\n        break;\n      case 'text':\n        this.resetTextInputs();\n        break;\n      case 'number':\n        this.resetNumberInput();\n        break;\n      case 'select-one':\n        this.resetSelectInput();\n        break;\n      default:\n        throw new Error(`Unsupported question type: ${this.type}`);\n    }\n  }\n}\n", "export * from './EventBus';\nexport * from './globalEventBus';\n", "// Component Tests\nexport { testSimpleComponent } from './test-simple';\nexport { testComponents } from './test-components';\n", "import { BaseComponent, type ComponentOptions } from '$mct/components';\n\n// Simple test component\nclass SimpleTestComponent extends BaseComponent {\n  constructor(options: ComponentOptions) {\n    super(options);\n  }\n\n  protected onInit(): void {\n    this.log('SimpleTestComponent initialized');\n    console.log('\u2705 SimpleTestComponent works!');\n  }\n\n  protected onDestroy(): void {\n    this.log('SimpleTestComponent destroyed');\n  }\n}\n\n// Simple test function\nexport const testSimpleComponent = () => {\n  console.log('\uD83E\uDDEA Testing Simple Component...');\n\n  try {\n    // Create a test element\n    const testElement = document.createElement('div');\n    testElement.innerHTML = '<p>Test component</p>';\n\n    // Create test component\n    const component = new SimpleTestComponent({\n      element: testElement,\n      debug: true,\n    });\n\n    // Initialize after construction\n    component.initialise();\n\n    console.log('\u2705 Simple component test passed!');\n\n    // Cleanup\n    component.destroy();\n\n    return component;\n  } catch (error) {\n    console.error('\u274C Simple component test failed:', error);\n    throw error;\n  }\n};\n\n// Make available globally for testing\nif (typeof window !== 'undefined') {\n  (window as any).testSimpleComponent = testSimpleComponent;\n}\n", "import { StatefulComponent, type StatefulComponentOptions } from '$mct/components';\nimport type { FormEvents } from '$mct/types';\n\n// Test state interface\ninterface TestComponentState {\n  value: string;\n  isValid: boolean;\n  isVisible: boolean;\n}\n\n// Test component that extends StatefulComponent\nclass TestComponent extends StatefulComponent<TestComponentState> {\n  private input: HTMLInputElement | null = null;\n  private button: HTMLButtonElement | null = null;\n\n  constructor(options: StatefulComponentOptions<TestComponentState>) {\n    super(options);\n  }\n\n  protected onInit(): void {\n    this.log('TestComponent initialized');\n\n    // Find elements - add null checks\n    try {\n      this.input = this.queryElement('input');\n      this.button = this.queryElement('button');\n\n      this.log('Found elements:', {\n        input: !!this.input,\n        button: !!this.button,\n      });\n    } catch (error) {\n      this.log('Error finding elements:', error);\n    }\n\n    // Only bind events if elements exist\n    if (this.input || this.button) {\n      this.bindEvents();\n    }\n\n    // Emit initialization event\n    this.emit('form:question:changed', {\n      questionId: 'test-component',\n      value: this.state.value,\n      isValid: this.state.isValid,\n      groupName: 'test-group',\n    });\n  }\n\n  protected bindEvents(): void {\n    try {\n      if (this.input) {\n        this.addEventListener({ element: this.input, event: 'input', handler: this.handleInput.bind(this) });\n        this.log('Added input event listener');\n      }\n\n      if (this.button) {\n        this.addEventListener({ element: this.button, event: 'click', handler: this.handleButtonClick.bind(this) });\n        this.log('Added button event listener');\n      }\n    } catch (error) {\n      this.log('Error binding events:', error);\n    }\n  }\n\n  protected onDestroy(): void {\n    this.log('TestComponent destroyed');\n  }\n\n  protected onStateChange(previousState: TestComponentState, currentState: TestComponentState): void {\n    this.log('State changed', { previous: previousState, current: currentState });\n\n    // Update UI based on state changes\n    if (this.hasStateChanged('isVisible')) {\n      this.toggleClass(this.element, 'hidden', !currentState.isVisible);\n    }\n\n    if (this.hasStateChanged('isValid')) {\n      this.toggleClass(this.element, 'valid', currentState.isValid);\n      this.toggleClass(this.element, 'invalid', !currentState.isValid);\n    }\n  }\n\n  private handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    const isValid = value.length > 0;\n\n    this.setState({\n      value,\n      isValid,\n    });\n  }\n\n  private handleButtonClick(event: Event): void {\n    this.preventDefaultAndStop(event);\n\n    this.setState({\n      isVisible: !this.state.isVisible,\n    });\n  }\n\n  // Public methods for testing\n  public setValue(value: string): void {\n    this.setStateValue('value', value);\n  }\n\n  public setValid(isValid: boolean): void {\n    this.setStateValue('isValid', isValid);\n  }\n\n  public setVisible(isVisible: boolean): void {\n    this.setStateValue('isVisible', isVisible);\n  }\n}\n\n// Test function\nexport const testComponents = () => {\n  console.log('\uD83E\uDDEA Testing Base Components...');\n\n  try {\n    // Create a test element and attach to DOM temporarily\n    const testElement = document.createElement('div');\n    testElement.innerHTML = `\n      <input type=\"text\" placeholder=\"Test input\">\n      <button>Toggle Visibility</button>\n    `;\n\n    // Attach to DOM temporarily for testing\n    document.body.appendChild(testElement);\n\n    // Create test component after DOM is ready\n    const component = new TestComponent({\n      element: testElement,\n      debug: true,\n      initialState: {\n        value: '',\n        isValid: false,\n        isVisible: true,\n      },\n    });\n\n    // Initialize after construction\n    component.initialise();\n\n    // Test state management\n    console.log('Initial state:', component.getState());\n\n    component.setValue('test value');\n    component.setValid(true);\n\n    console.log('Updated state:', component.getState());\n\n    // Test event subscription\n    const unsubscribe = component.subscribeToState((current: TestComponentState, previous: TestComponentState) => {\n      console.log('State subscriber called:', { current, previous });\n    });\n\n    component.setVisible(false);\n\n    // Cleanup\n    unsubscribe();\n    component.destroy();\n\n    // Remove from DOM\n    document.body.removeChild(testElement);\n\n    console.log('\u2705 Base Components test completed!');\n\n    return component;\n  } catch (error) {\n    console.error('\u274C Base Components test failed:', error);\n    throw error;\n  }\n};\n\n// Make available globally for testing\nif (typeof window !== 'undefined') {\n  (window as any).testComponents = testComponents;\n  (window as any).TestComponent = TestComponent;\n}\n", "// Extend the Window interface to include gtag and ga\ndeclare global {\n  interface Window {\n    gtag?: (...args: any[]) => void;\n    ga?: (...args: any[]) => void;\n  }\n}\n\n/**\n * Fires a Google Analytics event (GA4 or Universal Analytics).\n *\n * @param eventName - The name of the event (e.g., 'button_click')\n * @param params - Additional event parameters (object)\n *\n * Usage:\n *   fireGAEvent('my_event', { category: 'form', label: 'submit', value: 1 });\n */\nexport function trackGAEvent(eventName: string, params: Record<string, any> = {}): void {\n  // GA4 (gtag.js)\n  if (typeof window !== 'undefined' && typeof window.gtag === 'function') {\n    window.gtag('event', eventName, params);\n    return;\n  }\n\n  // Universal Analytics (analytics.js)\n  if (typeof window !== 'undefined' && typeof window.ga === 'function') {\n    window.ga('send', 'event', params.category || '', eventName, params.label, params.value);\n    return;\n  }\n\n  // No GA available\n  if (process.env.NODE_ENV === 'development') console.log('[GA] Event:', eventName, params);\n}\n", "import { PROFILES_CONFIG } from '$mct/config';\nimport { MCTManager } from '$mct/manager';\nimport type {\n  InputData,\n  InputKey,\n  InputName,\n  Inputs,\n  InputValue,\n  LogUserEventCustom,\n  LogUserEventRequest,\n  Profile,\n  QuestionsStageOptions,\n} from '$mct/types';\nimport { StageIDENUM } from '$mct/types';\nimport { removeInitialStyles } from 'src/mct/shared/utils/dom/visibility/removeInitialStyles';\n\nimport { MainGroup, OutputGroup } from './Groups';\nimport type { QuestionComponent } from './Questions';\n\nconst PROFILES = PROFILES_CONFIG.profiles;\n\nexport abstract class FormManager {\n  protected component: HTMLElement;\n  public id: StageIDENUM;\n  protected profile: Profile | null = null;\n  protected groups: (MainGroup | OutputGroup)[] = [];\n  protected questions: Set<QuestionComponent> = new Set();\n  protected isInitialised: boolean = false;\n\n  constructor(component: HTMLElement) {\n    this.component = component;\n    this.id = StageIDENUM.Questions;\n  }\n\n  public abstract init(options?: QuestionsStageOptions): void;\n  public abstract show(): void;\n  public abstract hide(): void;\n\n  protected onMount(): void {\n    removeInitialStyles(this.component);\n  }\n\n  protected prefill(answers: Inputs) {\n    /**\n     * @todo:\n     * - Loop through the answers\n     * - Find the input(s) that match the answer key\n     * - Set the value of the input(s)\n     * - Evaluate the visibility of the input(s)\n     */\n    // for (const [name, value] of Object.entries(answers)) {}\n    // this.groups.forEach((group) => group.evaluateVisibility());\n  }\n\n  public saveQuestion(question: QuestionComponent): void {\n    this.questions.add(question);\n  }\n\n  public removeQuestion(question: QuestionComponent): void {\n    this.questions.delete(question);\n  }\n\n  // public getQuestions(): Set<QuestionComponent> {\n  //   return this.questions;\n  // }\n\n  public saveAnswersToMCT(): void {\n    const answerDataArray: InputData[] = [];\n\n    [...this.questions].forEach((question) => {\n      const value = question.getValue();\n      if (!value) return;\n\n      answerDataArray.push({\n        key: question.getStateValue('initialName') as InputKey,\n        name: question.getStateValue('finalName') as InputName,\n        value: value as InputValue,\n        source: 'user',\n      });\n    });\n\n    // console.log('saveAnswersToMCT: ', answerDataArray);\n\n    MCTManager.setAnswers(answerDataArray);\n  }\n\n  public getAnswers(): Inputs {\n    return { ...MCTManager.getAnswers() };\n  }\n\n  public determineProfile(): Profile | null {\n    const answers = this.getAnswers();\n    const profile: Profile | undefined = PROFILES.find((profile) => {\n      return Object.entries(profile.requirements).every(([key, value]) => answers[key] === value);\n    });\n\n    this.profile = profile ? profile : null;\n    return profile ? profile : null;\n  }\n}\n", "import { DOM_CONFIG } from '$mct/config';\nimport { queryElements } from '$utils/dom';\n\nexport const removeInitialStyles = (component: HTMLElement): void => {\n  const elements = queryElements(`[${DOM_CONFIG.attributes.initial}]`, component);\n  console.log('\uD83D\uDD04 Removing initial styles', elements);\n  elements.forEach((element) => {\n    element.removeAttribute(DOM_CONFIG.attributes.initial);\n  });\n};\n", "import { ResultsManager } from './Manager';\n\nexport const initResults = (component: HTMLElement): ResultsManager | null => {\n  const manager = new ResultsManager(component);\n  if (!manager) return null;\n  return manager;\n};\n", "import { DOM_CONFIG, EVENTS_CONFIG, FILTERS_CONFIG } from '$mct/config';\nimport type {\n  InputKey,\n  InputName,\n  InputValue,\n  ICID,\n  InputValue,\n  LCID,\n  LogUserEventCustom,\n  LogUserEventResponse,\n  OEF_PARAMS,\n  Product,\n  ProductsResponse,\n  ResultsStageOptions,\n  SummaryInfo,\n} from '$mct/types';\nimport { OutputTypeENUM, StageIDENUM } from '$mct/types';\nimport { MCTManager } from 'src/mct/shared/MCTManager';\nimport { formatNumber } from '$utils/formatting';\nimport { Result } from './Result';\nimport { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\nimport { generateSummaryLines, generateProductsAPIInput } from '$mct/utils';\nimport { FilterGroup } from './FilterGroup';\nimport { productsAPI } from '$mct/api';\nimport { simulateEvent } from '@finsweet/ts-utils';\n\nconst attr = DOM_CONFIG.attributes.results;\n\n/**\n * @plan\n *\n * When initialised by MCTManager after completing the form:\n * - Render outputs to header\n *    - borrowOverTerm, dealsAndRates\n *    - purchase price\n *    - LTV (calculated)\n *    - borrowing\n *    - deposit\n * - Apply values to the filters\n * - Call products API based on the filters and the answers\n *\n * Misc:\n * - Initialise dialogs\n * - Initialise sidebar form\n * - Bind events:\n *    - on input change\n *    - on select change\n *    - pagination / load more\n *    - reset filters\n */\n\nexport class ResultsManager {\n  private component: HTMLElement;\n  public id: StageIDENUM;\n  private isInitialised: boolean = false;\n\n  private products: Product[] = [];\n  private product: Product | null = null;\n  private summaryInfo: SummaryInfo | null = null;\n  private updateAnswersButton: HTMLButtonElement;\n\n  private header: HTMLDivElement;\n  private outputs: HTMLDivElement[] = [];\n  private filterGroups: FilterGroup[] = [];\n\n  private showIfProceedable: HTMLElement[];\n\n  private appointmentDialogButton: HTMLButtonElement;\n  private appointmentDialog: HTMLDialogElement;\n  private appointmentDialogClose: HTMLButtonElement;\n\n  private getFreeAdvice: HTMLElement;\n  private getFreeAdviceButton: HTMLButtonElement;\n  private getADecision: HTMLElement;\n  private getADecisionButtons: HTMLButtonElement[];\n  private applyDirect: HTMLElement | null;\n  private applyDirectLink: HTMLLinkElement | undefined;\n  private applyDirectDialog: HTMLDialogElement | undefined;\n\n  private results: Result[] = [];\n  private resultsList: HTMLElement;\n  private resultsTemplate: HTMLElement;\n\n  private loader: HTMLElement;\n  private empty: HTMLElement;\n  private pagination: HTMLElement;\n  private paginationButton: HTMLButtonElement;\n  private numberOfResults: number = 0;\n\n  constructor(component: HTMLElement) {\n    this.component = component;\n    this.id = StageIDENUM.Results;\n\n    this.header = queryElement(`[${attr.components}=\"header\"]`, this.component) as HTMLDivElement;\n    this.outputs = queryElements(`[${attr.output}]`, this.header) as HTMLDivElement[];\n    this.updateAnswersButton = queryElement(`[${attr.components}=\"update-answers\"]`, this.header) as HTMLButtonElement;\n\n    this.showIfProceedable = queryElements(`[${attr.showIfProceedable}]`, this.component) as HTMLElement[];\n\n    this.appointmentDialogButton = queryElement(\n      `[${attr.components}=\"book-an-appointment\"]`,\n      this.header\n    ) as HTMLButtonElement;\n    this.appointmentDialog = queryElement(\n      `[${attr.components}=\"appointment-dialog\"]`,\n      this.component\n    ) as HTMLDialogElement;\n    this.appointmentDialogClose = queryElement(\n      `[${attr.components}=\"close-appointment-dialog\"]`,\n      this.appointmentDialog\n    ) as HTMLButtonElement;\n\n    this.getFreeAdvice = queryElement(`[${attr.components}=\"get-free-advice\"]`, this.appointmentDialog) as HTMLElement;\n    this.getFreeAdviceButton = queryElement('button', this.getFreeAdvice) as HTMLButtonElement;\n    this.getADecision = queryElement(`[${attr.components}=\"get-a-decision\"]`, this.appointmentDialog) as HTMLElement;\n    this.getADecisionButtons = [\n      queryElement('button', this.getADecision) as HTMLButtonElement,\n      queryElement(`[${attr.components}=\"get-a-decision-button\"]`, this.header) as HTMLButtonElement,\n    ];\n    this.applyDirect = queryElement(\n      `[${attr.components}=\"apply-direct\"]`,\n      this.appointmentDialog\n    ) as HTMLElement | null;\n    if (this.applyDirect) this.applyDirectLink = queryElement('a', this.applyDirect) as HTMLLinkElement;\n    if (this.applyDirect)\n      this.applyDirectDialog = queryElement(\n        `[${attr.components}=\"apply-direct-redirect\"]`,\n        this.component\n      ) as HTMLDialogElement;\n\n    this.resultsList = queryElement(`[${attr.components}=\"list\"]`, this.component) as HTMLDivElement;\n    this.resultsTemplate = queryElement(`[${attr.components}=\"template\"]`, this.component) as HTMLDivElement;\n    this.resultsTemplate.remove();\n\n    this.loader = queryElement(`[${attr.components}=\"loader\"]`, this.component) as HTMLElement;\n    this.empty = queryElement(`[${attr.components}=\"empty\"]`, this.component) as HTMLElement;\n    this.pagination = queryElement(`[${attr.components}=\"pagination\"]`, this.component) as HTMLElement;\n    this.paginationButton = queryElement('button', this.pagination) as HTMLButtonElement;\n  }\n\n  public init(options?: ResultsStageOptions): void {\n    if (this.isInitialised) return;\n    this.isInitialised = true;\n\n    // if (options?.exampleData) {\n    //   // Answers will be saved from prior stage, just temporary to avoid inputting every time\n    //   Object.entries(EXAMPLE_ANSWERS).forEach(([key, value]) => {\n    //     MCTManager.setAnswer({\n    //       key: key as AnswerKey,\n    //       name: key as AnswerName,\n    //       value: value as AnswerValue,\n    //       source: 'user',\n    //     });\n    //   });\n    // }\n\n    this.handleUpdateAnswers();\n    this.initFilterGroups();\n    this.initAppointmentDialog();\n    this.initListElements();\n    this.renderOutputs();\n    this.renderFilters();\n    this.saveFilterValues();\n    this.handleProductsAPI();\n\n    // // Only auto-load products if explicitly requested or if autoLoad is true\n    // if (options?.autoLoad === true) this.handleProductsAPI();\n\n    this.handleButtons();\n    this.handleShowIfProceedable();\n  }\n\n  public show(scrollTo: boolean = true): void {\n    this.handleShowIfProceedable();\n    this.component.style.removeProperty('display');\n    if (scrollTo) this.component.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  public hide(): void {\n    this.component.style.display = 'none';\n  }\n\n  private handleUpdateAnswers(): void {\n    this.updateAnswersButton.addEventListener('click', () => {\n      MCTManager.goToStage(StageIDENUM.Questions);\n    });\n  }\n\n  private initFilterGroups(): void {\n    const filterGroups = queryElements(`[${attr.components}=\"filter-group\"]`, this.component) as HTMLElement[];\n    this.filterGroups = filterGroups.map((el) => {\n      return new FilterGroup(el, {\n        onChange: () => this.handleChange(),\n        groupName: 'filterGroup',\n      });\n    });\n  }\n\n  private saveFilterValues(): void {\n    // Get all filter group values and merge them into MCTManager answers\n    this.filterGroups.forEach((group) => {\n      const value = group.getValue();\n      const key = group.initialName;\n      const name = group.finalName;\n\n      // Only set the answer if we have a valid key, value and name\n      if (key && value !== null && value !== undefined && name)\n        MCTManager.setAnswer({\n          key: key as InputKey,\n          name: name as InputName,\n          value: value as InputValue,\n          source: 'user',\n        });\n    });\n  }\n\n  public handleChange(): void {\n    this.saveFilterValues();\n    this.handleProductsAPI();\n  }\n\n  private initAppointmentDialog(): void {\n    const calculations = MCTManager.getCalculations();\n    const { isProceedable } = calculations;\n\n    isProceedable ? this.getFreeAdvice.style.removeProperty('display') : (this.getFreeAdvice.style.display = 'none');\n    isProceedable ? (this.getADecision.style.display = 'none') : this.getADecision.style.removeProperty('display');\n    if (this.applyDirect) this.applyDirect.style.display = 'none';\n\n    this.appointmentDialogButton.addEventListener('click', () => MCTManager.goToStage(StageIDENUM.Appointment));\n    this.appointmentDialogClose.addEventListener('click', () => {\n      MCTManager.setMortgageId(null);\n      this.product = null;\n      this.appointmentDialog.close();\n    });\n    this.appointmentDialog.addEventListener('close', () => {\n      if (this.applyDirect) this.applyDirect.style.display = 'none';\n    });\n  }\n\n  private initListElements(): void {\n    this.loader.style.display = 'none';\n    this.empty.style.display = 'none';\n    this.pagination.style.display = 'none';\n  }\n\n  private renderOutputs(): void {\n    if (!this.summaryInfo) return;\n\n    const summaryLines = generateSummaryLines(this.summaryInfo, MCTManager.getAnswers());\n    if (!summaryLines) return;\n\n    this.outputs.forEach((output) => {\n      const key = output.getAttribute(attr.output);\n      const type = output.getAttribute(attr.type) as OutputTypeENUM;\n\n      /**\n       * IF:\n       *\n       * type is 'sentence'\n       * - get the text value from summaryLines based on the key\n       * - set the innerHTML of the output\n       *\n       * type is 'currency'\n       * - get the value from MCT answers based on the key\n       * - set textContent to the formatted value\n       *\n       * edge case: is LTV\n       * - calculate the LTV\n       * - set textContent to formatted value if percentage\n       * - otherwise set style.width to the value\n       */\n\n      if (key === 'LTV') {\n        const propertyValue = MCTManager.getAnswer('PropertyValue') as number;\n        const depositAmount = MCTManager.getAnswer('DepositAmount') as number;\n        const ltv = ((propertyValue - depositAmount) / propertyValue) * 100;\n\n        if (type === 'percentage') {\n          if (ltv) output.textContent = formatNumber(ltv, { type: 'percent', decimals: 0 });\n        } else if (type === 'progress-bar') {\n          if (ltv) output.style.width = `${ltv}%`;\n        }\n\n        return;\n      } else if (key === 'MortgageAmount') {\n        const propertyValue = MCTManager.getAnswer('PropertyValue') as number;\n        const depositAmount = MCTManager.getAnswer('DepositAmount') as number;\n        const mortgageAmount = propertyValue - depositAmount;\n\n        if (type === 'currency') {\n          if (mortgageAmount) output.textContent = formatNumber(mortgageAmount, { type: 'currency' });\n        }\n\n        return;\n      }\n\n      if (type === 'sentence') {\n        const text = summaryLines[key as keyof typeof summaryLines];\n        if (text) output.innerHTML = text;\n      } else if (type === 'currency') {\n        const value = MCTManager.getAnswer(key as InputKey) as number;\n        if (value) output.textContent = formatNumber(value, { type: 'currency' });\n      } else if (type === 'percentage') {\n        const value = MCTManager.getAnswer(key as InputKey) as number;\n        if (value) output.textContent = formatNumber(value, { type: 'percent' });\n      } else if (type === 'progress-bar') {\n        const value = MCTManager.getAnswer(key as InputKey) as number;\n        if (value) output.style.width = `${value}%`;\n      }\n    });\n  }\n\n  private renderFilters(): void {\n    const answers = MCTManager.getAnswers();\n    const filters = FILTERS_CONFIG;\n    this.filterGroups.forEach((filterGroup) => {\n      const answer = (answers as any)[filterGroup.initialName]; //@TODO: look into types here\n      const config = filters[filterGroup.initialName as keyof typeof filters];\n\n      if (answer) filterGroup.setValue(answer as InputValue);\n      else if (config) filterGroup.setValue(config as InputValue);\n    });\n  }\n\n  private initiateResults(): void {\n    this.results.forEach((result) => result.remove());\n    this.numberOfResults = 0;\n    this.showListUI('pagination', false);\n\n    if (this.products.length === 0) {\n      this.showListUI('empty', true);\n      return;\n    }\n\n    this.results = this.products.map((product) => {\n      return new Result(this.resultsList, {\n        template: this.resultsTemplate,\n        product,\n        onClick: (product) => this.handleProductCTA(product),\n      });\n    });\n\n    this.renderResults(10);\n    this.showListUI('empty', false);\n  }\n\n  private handleButtons(): void {\n    this.getFreeAdviceButton.addEventListener('click', () => this.handleGetFreeAdvice());\n    this.getADecisionButtons.forEach((button) => button.addEventListener('click', () => this.handleGetADecision()));\n    if (this.applyDirectLink) this.applyDirectLink.addEventListener('click', () => this.handleApplyDirect());\n    this.paginationButton.addEventListener('click', () => this.renderResults(10));\n  }\n\n  private handleShowIfProceedable(): void {\n    const calculations = MCTManager.getCalculations();\n    const { isProceedable } = calculations;\n\n    this.showIfProceedable.forEach((element) => {\n      const showIfProceedable = element.getAttribute(attr.showIfProceedable) === 'true';\n      if ((isProceedable && showIfProceedable) || (!isProceedable && !showIfProceedable))\n        element.style.removeProperty('display');\n      else element.style.display = 'none';\n    });\n  }\n\n  private renderResults(number: number = 10): void {\n    // Calculate the range of results to render\n    const startFromIndex = this.numberOfResults;\n    const endAtIndex = startFromIndex + number - 1;\n\n    // Render the results within the calculated range\n    let renderedCount = 0;\n    this.results.forEach((result, index) => {\n      if (index < startFromIndex || index > endAtIndex) return;\n      result.render();\n      renderedCount++;\n    });\n\n    this.numberOfResults += number;\n    this.showListUI('pagination', this.numberOfResults < this.products.length);\n  }\n\n  private handleProductCTA(product: Product): void {\n    MCTManager.setMortgageId(product.ProductId);\n    this.product = product;\n    const { ApplyDirectLink } = product;\n\n    if (this.applyDirect)\n      ApplyDirectLink ? this.applyDirect.style.removeProperty('display') : (this.applyDirect.style.display = 'none');\n    simulateEvent(this.appointmentDialogButton, 'click');\n  }\n\n  private async fetchProducts(): Promise<ProductsResponse | null> {\n    const input = generateProductsAPIInput({\n      numberOfResults: 100, // @TODO: Maximum of 100 on the test API?\n      sortColumn: 1,\n    });\n\n    try {\n      const response = await productsAPI.search(input);\n      return response;\n    } catch (error) {\n      console.error('Failed to fetch products:', error);\n      return null;\n    }\n  }\n\n  private async handleProductsAPI() {\n    this.showListUI('loader', true);\n    this.showListUI('pagination', false);\n\n    const response = await this.fetchProducts();\n    if (!response) {\n      this.showListUI('loader', false);\n      return;\n    }\n\n    this.products = response.result.Products;\n    this.summaryInfo = response.result.SummaryInfo;\n\n    this.initiateResults();\n    this.renderOutputs();\n    this.showListUI('loader', false);\n  }\n\n  private showListUI(component: 'loader' | 'empty' | 'pagination', show?: boolean): void {\n    const componentEl =\n      component === 'loader'\n        ? this.loader\n        : component === 'empty'\n          ? this.empty\n          : component === 'pagination'\n            ? this.pagination\n            : null;\n    if (!componentEl) return;\n\n    show ? componentEl.style.removeProperty('display') : (componentEl.style.display = 'none');\n\n    // Hide/Show the results list depending on the component being shown, always show for pagination\n    const showResultsList = component === 'loader' || component === 'empty' ? !show : true;\n    showResultsList ? this.resultsList.style.removeProperty('display') : (this.resultsList.style.display = 'none');\n  }\n\n  private handleGetFreeAdvice(): void {\n    this.appointmentDialog.close();\n    MCTManager.goToStage(StageIDENUM.Appointment);\n  }\n\n  private async handleGetADecision(): Promise<void> {\n    await this.handleLogUserEvents(EVENTS_CONFIG.directToBroker, 'OEF');\n\n    /**\n     * @todo\n     * - populate the redirect URL with parameters\n     */\n    const { origin } = window.location;\n    const baseUrl = `${origin}/online/populate`;\n\n    const icid = MCTManager.getICID();\n    const lcid = MCTManager.getLCID();\n    const answers = MCTManager.getAnswersAsLandC();\n    const calculations = MCTManager.getCalculations();\n\n    const {\n      PurchRemo,\n      ResiBtl,\n      CreditImpaired,\n      PropertyValue,\n      RepaymentValue,\n      RepaymentType,\n      MortgageLength,\n      ReadinessToBuy,\n    } = answers;\n    const { offerAccepted } = calculations;\n    console.log('offerAccepted: ', offerAccepted);\n\n    const params: Record<string, string> = {};\n\n    if (icid) params.Icid = icid;\n    if (lcid) params.LcId = lcid;\n    if (PurchRemo) params.PurchaseOrRemortgage = PurchRemo;\n    if (ResiBtl) params.ResidentialOrBuyToLet = ResiBtl;\n    if (CreditImpaired) params.CreditIssues = CreditImpaired;\n    if (PropertyValue) params.PropertyValue = PropertyValue.toString();\n    if (RepaymentValue) params.LoanAmount = RepaymentValue.toString();\n    if (MortgageLength) params.Term = MortgageLength.toString();\n    if (RepaymentType) params.MortgageRepaymentType = RepaymentType;\n    if (offerAccepted) params.OfferAccepted = offerAccepted.toString();\n    if (ReadinessToBuy) params.StageOfJourney = ReadinessToBuy;\n\n    const oefParams = new URLSearchParams(params);\n    window.location.href = `${baseUrl}?${oefParams.toString()}`;\n  }\n\n  private async handleApplyDirect(): Promise<void> {\n    if (!this.applyDirect) return;\n    try {\n      // Wait for the log user events API call to complete\n      await this.handleLogUserEvents(EVENTS_CONFIG.directToLender, this.product?.LenderName);\n\n      const lender = this.product?.LenderName;\n      const title = queryElement(\n        `[${attr.components}=\"apply-direct-redirect-title\"]`,\n        this.applyDirectDialog\n      ) as HTMLHeadingElement;\n      title.textContent = `We're connecting you to ${lender}`;\n      this.applyDirectDialog?.showModal();\n\n      setTimeout(() => {\n        window.location.href = this.product?.ApplyDirectLink || '';\n      }, 3000);\n    } catch (error) {\n      console.error('Failed to log user events before redirect:', error);\n      // Optionally, you could still redirect even if logging fails\n      // Or handle the error differently based on your requirements\n    }\n  }\n\n  private handleLogUserEvents(EventName: string, lender: string = ''): void {\n    const payload: LogUserEventCustom = {\n      EventName,\n      EventValue: lender,\n    };\n\n    console.log('handleLogUserEvents: ', payload);\n\n    MCTManager.logUserEvent(payload);\n  }\n\n  /**\n   * @plan for buttons\n   *\n   * If proceedable:\n   * [X] show 'Get free advice' button\n   * [X] hide 'Get a decision' button\n   * [X] hide 'Apply direct' link by default\n   *\n   * Dialog open:\n   * [X] save mortgage ID to state\n   *\n   * Dialog close:\n   * [X] clear mortgage ID from state\n   *\n   * 'Get free advice' button:\n   * [] do something with the mortgage ID?\n   * [X] go to appointment stage\n   *\n   * 'Get a decision' button:\n   * [] make sure LCID is saved to state\n   * [X] send user to OEF\n   *\n   * 'Apply direct' link:\n   * [x] send user data to LogUserEvents API\n   * [x] show loading modal (3 seconds?)\n   * [x] redirect to ApplyDirectLink\n   */\n}\n", "import { queryElement } from '$utils/dom/queryElement';\nimport { queryElements } from '$utils/dom/queryelements';\nimport { formatNumber } from '$utils/formatting/formatNumber';\n\nimport { DOM_CONFIG } from '$mct/config';\nimport type { Product } from '$mct/types';\nimport { OutputTypeENUM, SapValueENUM } from '$mct/types';\nimport { dialogs } from 'src/components/dialogs';\n\nconst attr = DOM_CONFIG.attributes.results;\n\ninterface Options {\n  template: HTMLElement;\n  product: Product;\n  onClick: (product: Product) => void;\n}\n\nexport class Result {\n  private wrapper: HTMLElement;\n  private template: HTMLElement;\n  private product: Product;\n  private onClick: (product: Product) => void;\n\n  private outputs: HTMLElement[] = [];\n  private button: HTMLButtonElement | null = null;\n\n  constructor(wrapper: HTMLElement, options: Options) {\n    this.wrapper = wrapper;\n    this.template = options.template.cloneNode(true) as HTMLElement;\n    this.template.removeAttribute(DOM_CONFIG.attributes.initial);\n    this.product = options.product;\n    this.onClick = options.onClick;\n\n    this.outputs = queryElements(`[${attr.output}]`, this.template) as HTMLElement[];\n    this.button = queryElement(`[${attr.element}=\"template-cta\"]`, this.template) as HTMLButtonElement;\n\n    this.init();\n  }\n\n  private init(): void {\n    this.populate();\n    this.bindEvents();\n  }\n\n  private populate(): void {\n    this.outputs.forEach((output) => {\n      const outputName = output.getAttribute(attr.output) as keyof Product;\n      const outputType = output.getAttribute(attr.type);\n      let outputValue = this.product[outputName] ?? 0;\n\n      switch (outputType) {\n        case OutputTypeENUM.Currency:\n          outputValue = formatNumber(outputValue as number, { type: 'currency' });\n          break;\n        case 'boolean':\n          outputValue = outputValue ? true : false;\n          break;\n        default:\n          outputValue = outputValue.toString();\n      }\n\n      if (outputName === 'SAP') {\n        outputValue = Number(outputValue) >= SapValueENUM.Yes ? true : false;\n      } else if (outputName === 'NewBuild') {\n        outputValue = !!outputValue;\n      }\n\n      if (output instanceof HTMLImageElement) {\n        output.src = outputValue.toString();\n      } else if (outputType === 'boolean') {\n        output.style.display = outputValue ? 'block' : 'none';\n      } else {\n        output.textContent = outputValue.toString();\n      }\n    });\n  }\n\n  private initDialogs(): void {\n    dialogs(this.template);\n  }\n\n  private bindEvents(): void {\n    this.button?.addEventListener('click', () => {\n      this.onClick(this.product);\n    });\n  }\n\n  public render(): void {\n    this.initDialogs();\n    this.wrapper.appendChild(this.template);\n  }\n\n  public remove(): void {\n    this.template.remove();\n  }\n}\n", "import { InputGroupBase } from '$mct/components';\nimport type { InputGroupOptions } from '$mct/types';\n\ntype FilterOptions = {} & InputGroupOptions;\n\nexport class FilterGroup extends InputGroupBase {\n  constructor(el: HTMLElement, options: FilterOptions) {\n    super(el, options);\n  }\n\n  protected init(): void {}\n}\n", "import { AppointmentManager } from './Manager';\n\nexport const initAppointment = (component: HTMLElement): AppointmentManager | null => {\n  const manager = new AppointmentManager(component);\n  if (!manager) return null;\n  return manager;\n};\n", "import type { AppointmentStageOptions, AppointmentDay, ICID, LCID, InputValue } from '$mct/types';\nimport {\n  BuyerTypeENUM,\n  CreditImpairedENUM,\n  OfferAcceptedENUM,\n  PurchRemoENUM,\n  ReadinessToBuyENUM,\n  RepaymentTypeENUM,\n  ResiBtlENUM,\n  StageIDENUM,\n} from '$mct/types';\nimport { queryElement, queryElements } from '$utils/dom';\nimport { mortgageAppointmentSlotsAPI, createLeadAndBookingAPI, APIError } from '$mct/api';\nimport { DOM_CONFIG, MCT_CONFIG } from '$mct/config';\nimport { Dates } from './Dates';\nimport { Times } from './Times';\nimport { getOrginalDate } from '$utils/formatting';\nimport { MCTManager } from '$mct/manager';\nimport type { CreateLeadAndBookingRequest, EnquiryLead, Booking } from '$mct/types';\nimport type { StatefulInputGroup } from '$mct/components';\nimport { InputGroup } from './Form';\nimport type { Input } from 'src/types';\nimport { getEnumValue } from 'src/mct/shared/utils/common/getEnumValue';\n\nconst attr = DOM_CONFIG.attributes.appointment;\n\nconst PANEL_ENUM = {\n  CALENDAR: 'calendar',\n  FORM: 'form',\n} as const;\n\n/**\n * @todo\n * - Only show the back button if we're coming from the results stage\n */\n\nexport class AppointmentManager {\n  private component: HTMLElement;\n  public id: StageIDENUM;\n  private isInitialised: boolean = false;\n\n  private loader: HTMLElement;\n  private currentPanel: (typeof PANEL_ENUM)[keyof typeof PANEL_ENUM] = PANEL_ENUM.CALENDAR;\n  private backButtons: HTMLButtonElement[];\n  private bookButton: HTMLButtonElement;\n\n  private today: Date = new Date(new Date().toLocaleString('en-US', { timeZone: 'Europe/London' }));\n  private lastDate: Date = new Date(this.today);\n\n  private calendarPanel: HTMLElement;\n  private datesGroup: HTMLFieldSetElement;\n  private dates!: Dates;\n  private timesGroup: HTMLFieldSetElement;\n  private times!: Times;\n\n  private formPanel: HTMLElement;\n  private tags: HTMLElement[];\n  private form: HTMLFormElement;\n  private formInputGroups: InputGroup[] = [];\n  private formError: HTMLElement;\n  private formSuccess: HTMLElement;\n  private tryAgainDialog: HTMLDialogElement;\n  private tryAgainButton: HTMLButtonElement;\n\n  // Appointment slots data\n  private appointmentDays: AppointmentDay[] = [];\n  private selectedDate: AppointmentDay | null = null;\n  private isLoading: boolean = false;\n  private hasError: boolean = false;\n\n  private dateAndTimeSet: boolean = false;\n\n  constructor(component: HTMLElement) {\n    this.component = component;\n    this.id = StageIDENUM.Appointment;\n\n    this.loader = queryElement(`[${attr.components}=\"loader\"]`, this.component) as HTMLElement;\n    this.backButtons = queryElements(`[${attr.components}=\"back\"]`, this.component) as HTMLButtonElement[];\n    this.bookButton = queryElement(`[${attr.components}=\"book\"]`, this.component) as HTMLButtonElement;\n\n    this.calendarPanel = queryElement(`[${attr.panel}=\"${PANEL_ENUM.CALENDAR}\"]`, this.component) as HTMLElement;\n    this.datesGroup = queryElement(`[${attr.components}=\"dates\"]`, this.calendarPanel) as HTMLFieldSetElement;\n    this.timesGroup = queryElement(`[${attr.components}=\"times\"]`, this.calendarPanel) as HTMLFieldSetElement;\n\n    // Initialize the dates manager\n    this.dates = new Dates(this.datesGroup, {\n      onChange: () => this.handleDateChange(),\n      groupName: 'date-filters',\n      wrapper: queryElement(`[${attr.components}=\"content\"]`, this.calendarPanel) as HTMLElement,\n      onLoadMore: () => this.handleLoadMoreDates(),\n      onEnter: () => this.handleEnter(),\n    });\n\n    this.times = new Times(this.timesGroup, {\n      onChange: () => this.handleTimeChange(),\n      groupName: 'time-filters',\n      onEnter: () => this.handleEnter(),\n    });\n\n    this.formPanel = queryElement(`[${attr.panel}=\"${PANEL_ENUM.FORM}\"]`, this.component) as HTMLElement;\n    this.tags = queryElements(`[${attr.components}=\"tag\"]`, this.formPanel) as HTMLElement[];\n    this.form = queryElement(`form`, this.formPanel) as HTMLFormElement;\n    this.formError = queryElement(`[${attr.form}=\"error\"]`, this.formPanel) as HTMLElement;\n    this.formSuccess = queryElement(`[${attr.form}=\"success\"]`, this.formPanel) as HTMLElement;\n    this.tryAgainDialog = queryElement(`[${attr.components}=\"try-again\"]`, this.formPanel) as HTMLDialogElement;\n    this.tryAgainButton = queryElement(\n      `[${attr.components}=\"back-to-calendar\"]`,\n      this.tryAgainDialog\n    ) as HTMLButtonElement;\n  }\n\n  public init(options?: AppointmentStageOptions): void {\n    if (this.isInitialised) return;\n    this.isInitialised = true;\n    this.setLoadingState(true);\n\n    this.timesGroup.style.display = 'none';\n    this.formPanel.style.display = 'none';\n    this.formSuccess.style.display = 'none';\n\n    this.bindEvents();\n\n    const inputGroups = queryElements(\n      `[${MCT_CONFIG.dom.attributes.component}=\"input-group\"]`,\n      this.formPanel\n    ) as HTMLElement[];\n\n    this.formInputGroups = inputGroups.map((input) => {\n      const inputGroup = new InputGroup({\n        element: input,\n        groupName: 'appointment',\n        onChange: () => {},\n        onEnter: () => {},\n      });\n\n      inputGroup.initialise();\n      return inputGroup;\n    });\n\n    console.log('formInputGroups', this.formInputGroups);\n\n    // Load initial dates\n    const tomorrow = new Date(this.today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    this.handleDays(true, tomorrow);\n  }\n\n  public show(scrollTo: boolean = true): void {\n    this.component.style.removeProperty('display');\n    if (scrollTo) this.component.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  public hide(): void {\n    this.component.style.display = 'none';\n  }\n\n  private bindEvents(): void {\n    this.bookButton.addEventListener('click', () => this.navigate('next'));\n    this.backButtons.forEach((button) => {\n      button.addEventListener('click', () => this.handleBackButtons(button));\n    });\n\n    this.form.addEventListener('submit', (event) => this.onFormSubmit(event));\n  }\n\n  private showLoader(show: boolean): void {\n    if (show) {\n      this.loader.style.display = 'flex';\n      this.loader.style.opacity = '1';\n    } else {\n      this.loader.style.display = 'none';\n      this.loader.style.opacity = '0';\n    }\n  }\n\n  private navigate(direction: 'next' | 'previous'): void {\n    try {\n      if (direction === 'next') {\n        this.navigateNext();\n      } else if (direction === 'previous') {\n        this.navigatePrevious();\n      }\n    } catch (error) {\n      console.error('Navigation error:', error);\n    }\n  }\n\n  private navigateNext(): void {\n    switch (this.currentPanel) {\n      case PANEL_ENUM.CALENDAR:\n        if (this.canProceedToForm()) this.showFormPanel();\n        break;\n      case PANEL_ENUM.FORM:\n        this.handleFormSubmission();\n        break;\n      default:\n        console.warn('Unknown panel state:', this.currentPanel);\n    }\n  }\n\n  private navigatePrevious(): void {\n    switch (this.currentPanel) {\n      case PANEL_ENUM.CALENDAR:\n        this.navigateToResults();\n        break;\n      case PANEL_ENUM.FORM:\n        this.showCalendarPanel();\n        break;\n      default:\n        console.warn('Unknown panel state:', this.currentPanel);\n    }\n  }\n\n  private canProceedToForm(): boolean {\n    const date = this.dates.getValue();\n    const time = this.times.getValue();\n\n    return !!date && !!time;\n  }\n\n  private showFormPanel(): void {\n    this.formError.style.display = 'none';\n    this.formSuccess.style.display = 'none';\n    this.calendarPanel.style.display = 'none';\n    this.formPanel.style.removeProperty('display');\n    this.currentPanel = PANEL_ENUM.FORM;\n    this.formPanel.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  private showCalendarPanel(): void {\n    this.calendarPanel.style.removeProperty('display');\n    this.formPanel.style.display = 'none';\n    this.currentPanel = PANEL_ENUM.CALENDAR;\n    this.calendarPanel.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n    // refresh the dates and slots?\n  }\n\n  private navigateToResults(): void {\n    console.log('Back to results');\n    MCTManager.goToStage(StageIDENUM.Results);\n  }\n\n  private async handleDays(isInit: boolean, startDate?: Date): Promise<void> {\n    const fetchStartDate = this.calculateFetchStartDate(isInit, startDate);\n    if (!fetchStartDate) {\n      this.setLoadingState(false);\n      return;\n    }\n\n    const { startDate: apiStartDate, endDate: apiEndDate } = await this.calculateDateRange(isInit, fetchStartDate);\n\n    if (!this.shouldFetchMoreDays(apiEndDate)) {\n      this.setLoadingState(false);\n      return;\n    }\n\n    try {\n      this.lastDate = apiEndDate;\n      const appointmentDays = await this.fetchAppointmentSlots(apiStartDate, apiEndDate);\n      this.processAppointmentDays(appointmentDays, isInit);\n    } catch (error) {\n      console.error('Error fetching appointment slots:', error);\n      this.hasError = true;\n    } finally {\n      this.setLoadingState(false);\n    }\n  }\n\n  private calculateFetchStartDate(isInit: boolean, startDate?: Date): Date | null {\n    if (isInit) {\n      // On initial load, use the provided startDate (tomorrow)\n      //   console.log('Initial load - starting from:', startDate);\n      return startDate!;\n    } else {\n      // On slider move, get the last date from the dates manager\n      const lastDate = this.dates.getLastDate();\n      if (!lastDate) {\n        // console.log('No dates available, cannot determine start date');\n        this.setLoadingState(false);\n        return null;\n      }\n      const fetchStartDate = new Date(lastDate);\n      fetchStartDate.setDate(fetchStartDate.getDate() + 1);\n      //   console.log('Slider move - starting from:', fetchStartDate);\n      return fetchStartDate;\n    }\n  }\n\n  private async calculateDateRange(isInit: boolean, fetchStartDate: Date): Promise<{ startDate: Date; endDate: Date }> {\n    // Use ConfigManager to get the correct number of days\n    const { ConfigManager } = await import('./Config');\n    const configManager = ConfigManager.getInstance();\n    const numberOfDaysToFetch = isInit ? configManager.getDaysPerView() * 2 - 1 : configManager.getDaysPerMove() - 1;\n\n    const endDate = new Date(fetchStartDate);\n    endDate.setDate(endDate.getDate() + numberOfDaysToFetch);\n\n    return { startDate: fetchStartDate, endDate };\n  }\n\n  private shouldFetchMoreDays(endDate: Date): boolean {\n    if (endDate <= this.lastDate) {\n      //   console.log('No more days to fetch');\n      return false;\n    }\n    return true;\n  }\n\n  private async fetchAppointmentSlots(startDate: Date, endDate: Date): Promise<AppointmentDay[]> {\n    const dateFrom = this.formatDateForAPI(startDate);\n    const dateTo = this.formatDateForAPI(endDate);\n\n    // console.log('Fetching days from:', dateFrom, 'to:', dateTo);\n\n    const response = await mortgageAppointmentSlotsAPI.getSlots(dateFrom, dateTo);\n    return response.result;\n  }\n\n  /**\n   * Standalone function to fetch appointment slots for given date range\n   * Can be called independently without affecting the manager's state\n   */\n  public async fetchSlotsForDateRange(startDate: Date, endDate: Date): Promise<AppointmentDay[]> {\n    return await this.fetchAppointmentSlots(startDate, endDate);\n  }\n\n  private processAppointmentDays(appointmentDays: AppointmentDay[], isInit: boolean): void {\n    this.appointmentDays = appointmentDays;\n    this.dates.addDays(this.appointmentDays);\n\n    if (!isInit || appointmentDays.length === 0) return;\n\n    // console.log('appointmentDays', appointmentDays);\n\n    const firstActiveDay = appointmentDays.find((day) => day.slots.some((slot) => slot.enabled));\n    // firstActiveDay ? this.times.renderTimeSlots(firstActiveDay.slots) : (this.timesGroup.style.display = 'none');\n    firstActiveDay ? this.dates.selectFirstActiveDay(firstActiveDay.date) : (this.timesGroup.style.display = 'none');\n  }\n\n  private setLoadingState(loading: boolean): void {\n    this.isLoading = loading;\n    this.showLoader(loading);\n  }\n\n  private formatDateForAPI(date: Date): string {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n  private async handleDateChange(): Promise<void> {\n    this.selectedDate = this.dates.getSelectedDate();\n    // console.log('selectedDate', this.selectedDate);\n\n    // console.log('selectedDate', this.selectedDate);\n    const date = new Date(this.selectedDate!.date);\n    const slots = await this.fetchSlotsForDateRange(date, date);\n\n    this.selectedDate ? this.times.renderTimeSlots(slots[0].slots) : (this.timesGroup.style.display = 'none');\n  }\n\n  private async handleTimeChange(): Promise<void> {\n    // console.log('handleTimeChange');\n\n    const date = this.dates.getValue();\n    const time = this.times.getValue();\n\n    this.dateAndTimeSet = !!date && !!time;\n    this.bookButton.disabled = !this.dateAndTimeSet;\n\n    this.tags.forEach((tag) => {\n      tag.textContent = this.getFormattedDateTime();\n    });\n  }\n\n  private handleEnter(): void {\n    // console.log('Enter key pressed');\n    if (this.canProceedToForm()) this.navigate('next');\n  }\n\n  private async handleLoadMoreDates(): Promise<void> {\n    // Get the last date from the dates manager\n    const lastDate = this.dates.getLastDate();\n    if (!lastDate) {\n      //   console.log('No dates available, cannot load more');\n      return;\n    }\n\n    // Calculate next start date\n    const nextStartDate = new Date(lastDate);\n    nextStartDate.setDate(nextStartDate.getDate() + 1);\n\n    // Load more dates\n    await this.handleDays(false, nextStartDate);\n  }\n\n  /**\n   * Handle form submission by collecting form data and state data, then calling the API\n   * @param event - The event object\n   */\n  private onFormSubmit(event: Event): void {\n    event.preventDefault();\n    this.handleFormSubmission();\n  }\n\n  /**\n   * Handle form submission by collecting form data and state data, then calling the API\n   */\n  private async handleFormSubmission(): Promise<void> {\n    // Show loading state\n    this.setLoadingState(true);\n\n    // Get form data\n    const formData = this.getFormData();\n    console.log('formData from function', formData);\n    if (!formData) {\n      console.error('Failed to get form data');\n      this.setLoadingState(false);\n      return;\n    }\n\n    // Get state data\n    const stateData = this.getStateData();\n    const calculations = MCTManager.getCalculations();\n    //   console.log('stateData', stateData);\n    if (!stateData) {\n      console.error('Failed to get state data');\n      this.setLoadingState(false);\n      return;\n    }\n\n    // Get appointment data\n    const appointmentData = this.getAppointmentData();\n    //   console.log('appointmentData', appointmentData);\n    if (!appointmentData) {\n      console.error('Failed to get appointment data');\n      this.setLoadingState(false);\n      return;\n    }\n\n    // Create the API request with default values for required fields\n    const request: CreateLeadAndBookingRequest = {\n      enquiry: {\n        //   EnquiryId: 0, // Default value - should be provided by the system\n        //   PartnerId: 1, // Default value - should be configurable\n        icid: stateData.icid as ICID,\n        lcid: stateData.lcid as LCID,\n        FirstName: formData.FirstName as string,\n        Surname: formData.Surname as string,\n        Email: formData.Email as string,\n        Mobile: formData.Mobile as string,\n        PurchasePrice: stateData.PropertyValue as number,\n        RepaymentType: stateData.RepaymentType as RepaymentTypeENUM,\n        OfferAccepted: calculations.offerAccepted as OfferAcceptedENUM,\n        MortgageLength: stateData.MortgageLength as number,\n        MaximumBudget: stateData.MaximumBudget,\n        BuyerType: stateData.BuyerType,\n        ResiBtl: stateData.ResiBtl as ResiBtlENUM,\n        Lender: stateData.Lender,\n        ReadinessToBuy: stateData.ReadinessToBuy,\n        PurchRemo: stateData.PurchRemo,\n        PropertyValue: stateData.PropertyValue as number,\n        DepositAmount: stateData.DepositAmount as number,\n        LTV: calculations.LTV as number,\n        Source: stateData.Source,\n        SourceId: stateData.SourceId,\n        CreditImpaired: stateData.CreditImpaired,\n        IsEmailMarketingPermitted: formData.IsEmailMarketingPermitted as boolean,\n        IsPhoneMarketingPermitted: formData.IsPhoneMarketingPermitted as boolean,\n        IsSMSMarketingPermitted: formData.IsSMSMarketingPermitted as boolean,\n        IsPostMarketingPermitted: formData.IsPostMarketingPermitted as boolean,\n        IsSocialMessageMarketingPermitted: formData.IsSocialMessageMarketingPermitted as boolean,\n      },\n      booking: appointmentData,\n    };\n\n    console.log('Submitting booking request:', request);\n    try {\n      // Call the API\n      const response = await createLeadAndBookingAPI.createLeadAndBooking(request);\n      console.log('Booking response:', response);\n\n      // Handle successful booking\n      this.form.style.display = 'none';\n      this.formSuccess.style.removeProperty('display');\n    } catch (error: unknown) {\n      console.error('Error submitting booking:', error);\n\n      // Handle specific API errors\n      if (error instanceof APIError) {\n        console.log('API Error Status:', error.status);\n        console.log('API Error Message:', error.message);\n\n        if (error.status === 409) {\n          console.log('Booking error: 409 - Slot already taken');\n          this.tryAgainDialog.showModal();\n          this.tryAgainButton.addEventListener('click', () => {\n            this.tryAgainDialog.close();\n            this.showCalendarPanel();\n          });\n        } else if (error.status === 400) {\n          console.log('Booking error: 400 - Bad request, try again');\n          // You can add specific handling for 400 errors here\n          // For example, show a different dialog or message\n          // alert('Unable to book this appointment. Please try again.');\n          this.formError.style.display = 'block';\n        } else {\n          console.error('Booking failed with status:', error.status);\n          alert('An error occurred while booking your appointment. Please try again.');\n          this.formError.style.display = 'block';\n        }\n      } else {\n        // Handle other types of errors\n        console.error('Unexpected error:', error);\n        alert('An unexpected error occurred. Please try again.');\n      }\n    } finally {\n      this.setLoadingState(false);\n    }\n  }\n\n  /**\n   * Get form data from the appointment form\n   */\n  private getFormData(): Partial<EnquiryLead> | null {\n    try {\n      const formData: Record<string, any> = {};\n      this.formInputGroups.forEach((group) => {\n        formData[group.getStateValue('initialName')] = group.getValue() as InputValue;\n      });\n\n      console.log('formData', formData);\n\n      // Map form fields to API fields\n      const mappedData: Partial<EnquiryLead> = {\n        FirstName: formData.FirstName,\n        Surname: formData.Surname,\n        Email: formData.Email,\n        Mobile: formData.Mobile,\n        IsEmailMarketingPermitted: formData.IsEmailMarketingPermitted,\n        IsPhoneMarketingPermitted: formData.IsPhoneMarketingPermitted,\n        IsSMSMarketingPermitted: formData.IsSMSMarketingPermitted,\n        IsPostMarketingPermitted: formData.IsPostMarketingPermitted,\n        IsSocialMessageMarketingPermitted: formData.IsSocialMessageMarketingPermitted,\n      };\n\n      console.log('mappedData', mappedData);\n\n      return mappedData;\n    } catch (error) {\n      console.error('Error getting form data:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get state data from the MCT manager\n   */\n  private getStateData(): Partial<EnquiryLead> | null {\n    try {\n      const state = MCTManager.getState();\n      const answers = MCTManager.getAnswers();\n\n      // Map state and answers to API fields\n      const stateData: Partial<EnquiryLead> = {\n        icid: state.icid || '',\n        lcid: state.lcid || '',\n        PurchasePrice: this.getNumericAnswer(answers, 'PropertyValue'),\n        RepaymentType: getEnumValue(RepaymentTypeENUM, this.getStringAnswer(answers, 'RepaymentType')),\n        // RepaymentType:\n        //   RepaymentTypeENUM[this.getStringAnswer(answers, 'RepaymentType') as keyof typeof RepaymentTypeENUM],\n        OfferAccepted: getEnumValue(OfferAcceptedENUM, this.getStringAnswer(answers, 'OfferAccepted')),\n        // OfferAccepted:\n        //   OfferAcceptedENUM[this.getStringAnswer(answers, 'OfferAccepted') as keyof typeof OfferAcceptedENUM],\n        MortgageLength: this.getNumericAnswer(answers, 'MortgageLength'),\n        MaximumBudget: this.getNumericAnswer(answers, 'MaximumBudget'), // unsure\n        BuyerType: getEnumValue(BuyerTypeENUM, this.getStringAnswer(answers, 'BuyerType')), // unsure\n        // BuyerType: BuyerTypeENUM[this.getStringAnswer(answers, 'BuyerType') as keyof typeof BuyerTypeENUM], // unsure\n        ResiBtl: getEnumValue(ResiBtlENUM, this.getStringAnswer(answers, 'ResiBtl')),\n        // ResiBtl: ResiBtlENUM[this.getStringAnswer(answers, 'ResiBtl') as keyof typeof ResiBtlENUM],\n        Lender: this.getStringAnswer(answers, 'Lender'),\n        ReadinessToBuy: getEnumValue(ReadinessToBuyENUM, this.getStringAnswer(answers, 'ReadinessToBuy')),\n        // ReadinessToBuy:\n        //   ReadinessToBuyENUM[this.getStringAnswer(answers, 'ReadinessToBuy') as keyof typeof ReadinessToBuyENUM],\n        PurchRemo: getEnumValue(PurchRemoENUM, this.getStringAnswer(answers, 'PurchRemo')),\n        // PurchRemo: PurchRemoENUM[this.getStringAnswer(answers, 'PurchRemo') as keyof typeof PurchRemoENUM],\n        PropertyValue: this.getNumericAnswer(answers, 'PropertyValue'),\n        DepositAmount: this.getNumericAnswer(answers, 'DepositAmount'),\n        LTV: this.getNumericAnswer(answers, 'LTV'), // get from calculations\n        Source: this.getStringAnswer(answers, 'Source'), // unsure\n        SourceId: this.getNumericAnswer(answers, 'SourceId'), // unsure\n        CreditImpaired: getEnumValue(CreditImpairedENUM, this.getStringAnswer(answers, 'CreditImpaired')),\n      };\n\n      console.log('stateData', stateData);\n\n      return stateData;\n    } catch (error) {\n      console.error('Error getting state data:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get appointment data including date and time\n   */\n  private getAppointmentData(): Booking | null {\n    try {\n      const date = this.dates.getValue();\n      const time = this.times.getValue();\n\n      if (!date || !time || typeof date !== 'string' || typeof time !== 'string') {\n        return null;\n      }\n\n      // Parse the time (format is \"HH:MM:SS-HH:MM:SS\" or \"HH:MM-HH:MM\")\n      const timeParts = time.split('-');\n      // Ensure bookingStart and bookingEnd are in \"HH:MM\" format\n      const formatToHHMM = (t: string) => {\n        // Accepts \"HH:MM:SS\" or \"HH:MM\"\n        const parts = t.split(':');\n        return parts.length >= 2 ? `${parts[0]}:${parts[1]}` : t;\n      };\n      const startTime = formatToHHMM(timeParts[0]); // e.g., \"09:00\"\n      const endTime = formatToHHMM(timeParts[1]); // e.g., \"10:00\"\n\n      const booking: Booking = {\n        source: 'SYSTEM', // unsure\n        bookingDate: new Date(date).toISOString(),\n        bookingStart: startTime,\n        bookingEnd: endTime,\n        bookingProfile: 'DEFAULT', // unsure\n        bookingProfileId: 1, // unsure\n      };\n\n      return booking;\n    } catch (error) {\n      console.error('Error getting appointment data:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Helper method to get string answer from answers object\n   */\n  private getStringAnswer(answers: Record<string, any>, key: string): string {\n    return answers[key] || '';\n  }\n\n  /**\n   * Helper method to get numeric answer from answers object\n   */\n  private getNumericAnswer(answers: Record<string, any>, key: string): number {\n    const value = answers[key];\n    if (typeof value === 'number') return value;\n    if (typeof value === 'string') {\n      const num = parseFloat(value);\n      return isNaN(num) ? 0 : num;\n    }\n    return 0;\n  }\n\n  /**\n   * Helper method to get boolean answer from answers object\n   */\n  private getBooleanAnswer(answers: Record<string, any>, key: string): boolean {\n    const value = answers[key];\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n      return value.toLowerCase() === 'true' || value.toLowerCase() === 'yes' || value.toLowerCase() === 'y';\n    }\n    return false;\n  }\n\n  private handleBackButtons(button: HTMLButtonElement): void {\n    console.log('handleBackButtons', button);\n    this.navigate('previous');\n  }\n\n  /**\n   * Formats the selected date and time into a human-readable string\n   * @returns Formatted string like \"Wednesday 28th February at 9:00 AM\" or null if no date/time selected\n   */\n  private getFormattedDateTime(): string | null {\n    const date = this.dates.getValue();\n    const time = this.times.getValue();\n\n    // Type checking for date and time values\n    if (!date || !time || typeof date !== 'string' || typeof time !== 'string') return null;\n\n    // Parse the date\n    const dateObj = new Date(date);\n\n    // Parse the time (format is \"HH:MM-HH:MM\")\n    const timeParts = time.split('-');\n    const startTime = timeParts[0]; // e.g., \"09:00\"\n\n    // Convert 24-hour format to 12-hour format\n    const [hours, minutes] = startTime.split(':').map(Number);\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const displayHours = hours === 0 ? 12 : hours > 12 ? hours - 12 : hours;\n    const formattedTime = `${displayHours}:${minutes.toString().padStart(2, '0')} ${period}`;\n\n    // Format the date\n    const dayName = dateObj.toLocaleDateString('en-GB', { weekday: 'long' });\n    const dayNumber = getOrginalDate(dateObj);\n    const monthName = dateObj.toLocaleDateString('en-GB', { month: 'long' });\n\n    return `${dayName} ${dayNumber} ${monthName} at ${formattedTime}`;\n  }\n}\n", "import { InputGroupBase } from '$mct/components';\nimport type { AppointmentDay, Input, InputGroupOptions } from '$mct/types';\nimport { queryElement } from '$utils/dom';\nimport { DOM_CONFIG } from '$mct/config';\nimport { getOrginalDate } from '$utils/formatting';\nimport { Slider } from './Slider';\n\nconst attr = DOM_CONFIG.attributes.appointment;\n\ntype DateOptions = {\n  wrapper: HTMLElement;\n  onChange: () => void;\n  onLoadMore: () => void;\n  onEnter: () => void;\n} & InputGroupOptions;\n\nexport class Dates extends InputGroupBase {\n  private wrapper: HTMLElement;\n  private onLoadMore: () => void;\n  private onEnter: () => void;\n  private slider: Slider;\n  private slideTemplate: HTMLElement;\n  private appointmentDays: AppointmentDay[] = [];\n  private selectedDate: AppointmentDay | null = null;\n\n  constructor(el: HTMLElement, options: DateOptions) {\n    super(el, options);\n    this.wrapper = options.wrapper;\n    this.onLoadMore = options.onLoadMore;\n    this.onEnter = options.onEnter;\n\n    const slider = queryElement(`[${attr.slider}=\"component\"]`, this.wrapper) as HTMLElement;\n    this.slider = new Slider(slider, {\n      wrapper: options.wrapper,\n      onThresholdReached: () => this.onThresholdReached(),\n    });\n\n    this.slideTemplate = this.createSlideTemplate();\n  }\n\n  protected init(): void {\n    // Any additional initialization if needed\n  }\n\n  public addDays(days: AppointmentDay[]): void {\n    this.appointmentDays = [...this.appointmentDays, ...days];\n\n    const slides = days.map((day, index) => this.createDateSlide(day, index));\n    this.slider.addSlides(slides);\n  }\n\n  public getSelectedDate(): AppointmentDay | null {\n    return this.selectedDate;\n  }\n\n  public getLastDate(): Date | null {\n    if (this.appointmentDays.length === 0) return null;\n    const lastDay = this.appointmentDays[this.appointmentDays.length - 1];\n    return new Date(lastDay.date);\n  }\n\n  private createSlideTemplate(): HTMLElement {\n    const slide = queryElement(`[${attr.slider}=\"slide-template\"]`, this.el) as HTMLElement;\n    if (!slide) throw new Error(`Slide template element with attribute [${attr.slider}=\"slide-template\"] not found`);\n\n    const template = slide.cloneNode(true) as HTMLElement;\n    const slideParent = slide.parentElement;\n    if (slideParent) [...slideParent.children].forEach((child) => child.remove());\n\n    return template;\n  }\n\n  private createDateSlide(day: AppointmentDay, index: number): HTMLElement {\n    const slide = this.slideTemplate.cloneNode(true) as HTMLElement;\n    slide.setAttribute(attr.date, day.date);\n\n    const monthLabel = queryElement(`[${attr.inputLabel}=\"month\"]`, slide) as HTMLSpanElement;\n    const dayLabel = queryElement(`[${attr.inputLabel}=\"day\"]`, slide) as HTMLSpanElement;\n\n    const date = new Date(day.date);\n    const month = date.toLocaleDateString('en-GB', { month: 'short' });\n    const ordinalDate = getOrginalDate(date);\n\n    monthLabel.textContent = month;\n    dayLabel.textContent = ordinalDate;\n\n    const enabled = day.slots.some((slot) => slot.enabled);\n    const input = queryElement('input', slide) as Input;\n\n    input.id = `preferred-date-${day.date}`;\n    input.disabled = !enabled;\n    input.value = day.date;\n\n    const label = queryElement('label', slide) as HTMLLabelElement;\n    label.setAttribute('for', input.id);\n    label.textContent = `${month}, ${ordinalDate}`;\n\n    this.inputs.push(input);\n\n    // Add change listener for date selection\n    input.addEventListener('change', () => {\n      if (input instanceof HTMLInputElement && input.checked) {\n        this.selectedDate = day;\n        this.onChange();\n      }\n    });\n\n    // Add keyboard event listener for Enter key\n    input.addEventListener('keydown', (event: Event) => {\n      const ke = event as KeyboardEvent;\n      if (ke.key !== 'Enter') return;\n\n      this.onEnter();\n    });\n\n    return slide;\n  }\n\n  private onThresholdReached(): void {\n    // console.log('Threshold reached, requesting more dates...');\n    this.onLoadMore();\n  }\n\n  public selectFirstActiveDay(date: string): void {\n    this.setValue(date);\n    this.selectedDate = this.appointmentDays.find((day) => day.date === date)!;\n    this.onChange();\n  }\n}\n", "import Splide, { type SlideComponent } from '@splidejs/splide';\nimport { ConfigManager } from './Config';\n\ntype SliderOptions = {\n  wrapper: HTMLElement;\n  onThresholdReached: () => void;\n};\n\nexport class Slider {\n  private component: HTMLElement;\n  private isInitialised: boolean = false;\n  private wrapper: HTMLElement;\n  private onThresholdReached: () => void;\n  private configManager: ConfigManager;\n\n  public splide!: Splide;\n\n  constructor(component: HTMLElement, options: SliderOptions) {\n    this.component = component;\n    console.log('component', component);\n    this.wrapper = options.wrapper;\n    this.onThresholdReached = options.onThresholdReached;\n    this.configManager = ConfigManager.getInstance();\n\n    this.init();\n  }\n\n  public init(): void {\n    if (this.isInitialised) return;\n    this.isInitialised = true;\n\n    this.splide = this.initSlider();\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    window.addEventListener('resize', () => {\n      this.configManager.updateBreakpoint();\n      this.updateSliderOptions();\n    });\n\n    // Add event listener for slider movement\n    this.splide.on('moved', (newIndex: number, prevIndex: number) => {\n      console.log('Slider moved from index', prevIndex, 'to', newIndex);\n\n      // Check if we're moving towards the end and need to load more days\n      const totalSlides = this.splide.length;\n      const slidesPerView = this.configManager.getDaysPerView();\n      const threshold = totalSlides - slidesPerView * 2; // Load more when we're within one view of the end\n\n      if (newIndex + 1 >= threshold) {\n        console.log('Approaching end of slider, loading more days...');\n        this.onThresholdReached();\n      }\n    });\n  }\n\n  private calculateWidth(): number | string {\n    if (!this.wrapper) return '100%';\n    const style = window.getComputedStyle(this.wrapper);\n    const paddingLeft = parseFloat(style.paddingLeft) || 0;\n    const paddingRight = parseFloat(style.paddingRight) || 0;\n    const width = this.wrapper.clientWidth - paddingLeft - paddingRight;\n    return width;\n  }\n\n  private initSlider(): Splide {\n    const slider = new Splide(this.component, {\n      type: 'slide',\n      start: 1,\n      perPage: this.configManager.getDaysPerView('desktop'),\n      perMove: this.configManager.getDaysPerMove('desktop'),\n      gap: 'calc(1.25rem - 8px)',\n      pagination: false,\n      width: this.calculateWidth(),\n      breakpoints: {\n        991: {\n          perPage: this.configManager.getDaysPerView('tablet'),\n          perMove: this.configManager.getDaysPerMove('tablet'),\n        },\n        767: {\n          perPage: this.configManager.getDaysPerView('landscape'),\n          perMove: this.configManager.getDaysPerMove('landscape'),\n        },\n        478: {\n          perPage: this.configManager.getDaysPerView('portrait'),\n          perMove: this.configManager.getDaysPerMove('portrait'),\n        },\n      },\n    });\n\n    slider.mount();\n    return slider;\n  }\n\n  private updateSliderOptions(): void {\n    this.splide.options.perPage = this.configManager.getDaysPerView();\n    this.splide.options.perMove = this.configManager.getDaysPerMove();\n    this.splide.options.width = this.calculateWidth();\n    this.splide.refresh();\n  }\n\n  public addSlides(slides: HTMLElement[]): void {\n    slides.forEach((slide) => {\n      this.splide.add(slide);\n    });\n  }\n\n  public getLastSlide(): SlideComponent | null {\n    if (this.splide.length === 0) return null;\n\n    const slides = this.splide.Components.Slides.get();\n    return slides[slides.length - 1];\n  }\n}\n", "function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n/*!\n * Splide.js\n * Version  : 4.1.4\n * License  : MIT\n * Copyright: 2022 Naotoshi Fujita\n */\nvar MEDIA_PREFERS_REDUCED_MOTION = \"(prefers-reduced-motion: reduce)\";\nvar CREATED = 1;\nvar MOUNTED = 2;\nvar IDLE = 3;\nvar MOVING = 4;\nvar SCROLLING = 5;\nvar DRAGGING = 6;\nvar DESTROYED = 7;\nvar STATES = {\n  CREATED: CREATED,\n  MOUNTED: MOUNTED,\n  IDLE: IDLE,\n  MOVING: MOVING,\n  SCROLLING: SCROLLING,\n  DRAGGING: DRAGGING,\n  DESTROYED: DESTROYED\n};\n\nfunction empty(array) {\n  array.length = 0;\n}\n\nfunction slice(arrayLike, start, end) {\n  return Array.prototype.slice.call(arrayLike, start, end);\n}\n\nfunction apply(func) {\n  return func.bind.apply(func, [null].concat(slice(arguments, 1)));\n}\n\nvar nextTick = setTimeout;\n\nvar noop = function noop() {};\n\nfunction raf(func) {\n  return requestAnimationFrame(func);\n}\n\nfunction typeOf(type, subject) {\n  return typeof subject === type;\n}\n\nfunction isObject(subject) {\n  return !isNull(subject) && typeOf(\"object\", subject);\n}\n\nvar isArray = Array.isArray;\nvar isFunction = apply(typeOf, \"function\");\nvar isString = apply(typeOf, \"string\");\nvar isUndefined = apply(typeOf, \"undefined\");\n\nfunction isNull(subject) {\n  return subject === null;\n}\n\nfunction isHTMLElement(subject) {\n  try {\n    return subject instanceof (subject.ownerDocument.defaultView || window).HTMLElement;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction toArray(value) {\n  return isArray(value) ? value : [value];\n}\n\nfunction forEach(values, iteratee) {\n  toArray(values).forEach(iteratee);\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) > -1;\n}\n\nfunction push(array, items) {\n  array.push.apply(array, toArray(items));\n  return array;\n}\n\nfunction toggleClass(elm, classes, add) {\n  if (elm) {\n    forEach(classes, function (name) {\n      if (name) {\n        elm.classList[add ? \"add\" : \"remove\"](name);\n      }\n    });\n  }\n}\n\nfunction addClass(elm, classes) {\n  toggleClass(elm, isString(classes) ? classes.split(\" \") : classes, true);\n}\n\nfunction append(parent, children) {\n  forEach(children, parent.appendChild.bind(parent));\n}\n\nfunction before(nodes, ref) {\n  forEach(nodes, function (node) {\n    var parent = (ref || node).parentNode;\n\n    if (parent) {\n      parent.insertBefore(node, ref);\n    }\n  });\n}\n\nfunction matches(elm, selector) {\n  return isHTMLElement(elm) && (elm[\"msMatchesSelector\"] || elm.matches).call(elm, selector);\n}\n\nfunction children(parent, selector) {\n  var children2 = parent ? slice(parent.children) : [];\n  return selector ? children2.filter(function (child) {\n    return matches(child, selector);\n  }) : children2;\n}\n\nfunction child(parent, selector) {\n  return selector ? children(parent, selector)[0] : parent.firstElementChild;\n}\n\nvar ownKeys = Object.keys;\n\nfunction forOwn(object, iteratee, right) {\n  if (object) {\n    (right ? ownKeys(object).reverse() : ownKeys(object)).forEach(function (key) {\n      key !== \"__proto__\" && iteratee(object[key], key);\n    });\n  }\n\n  return object;\n}\n\nfunction assign(object) {\n  slice(arguments, 1).forEach(function (source) {\n    forOwn(source, function (value, key) {\n      object[key] = source[key];\n    });\n  });\n  return object;\n}\n\nfunction merge(object) {\n  slice(arguments, 1).forEach(function (source) {\n    forOwn(source, function (value, key) {\n      if (isArray(value)) {\n        object[key] = value.slice();\n      } else if (isObject(value)) {\n        object[key] = merge({}, isObject(object[key]) ? object[key] : {}, value);\n      } else {\n        object[key] = value;\n      }\n    });\n  });\n  return object;\n}\n\nfunction omit(object, keys) {\n  forEach(keys || ownKeys(object), function (key) {\n    delete object[key];\n  });\n}\n\nfunction removeAttribute(elms, attrs) {\n  forEach(elms, function (elm) {\n    forEach(attrs, function (attr) {\n      elm && elm.removeAttribute(attr);\n    });\n  });\n}\n\nfunction setAttribute(elms, attrs, value) {\n  if (isObject(attrs)) {\n    forOwn(attrs, function (value2, name) {\n      setAttribute(elms, name, value2);\n    });\n  } else {\n    forEach(elms, function (elm) {\n      isNull(value) || value === \"\" ? removeAttribute(elm, attrs) : elm.setAttribute(attrs, String(value));\n    });\n  }\n}\n\nfunction create(tag, attrs, parent) {\n  var elm = document.createElement(tag);\n\n  if (attrs) {\n    isString(attrs) ? addClass(elm, attrs) : setAttribute(elm, attrs);\n  }\n\n  parent && append(parent, elm);\n  return elm;\n}\n\nfunction style(elm, prop, value) {\n  if (isUndefined(value)) {\n    return getComputedStyle(elm)[prop];\n  }\n\n  if (!isNull(value)) {\n    elm.style[prop] = \"\" + value;\n  }\n}\n\nfunction display(elm, display2) {\n  style(elm, \"display\", display2);\n}\n\nfunction focus(elm) {\n  elm[\"setActive\"] && elm[\"setActive\"]() || elm.focus({\n    preventScroll: true\n  });\n}\n\nfunction getAttribute(elm, attr) {\n  return elm.getAttribute(attr);\n}\n\nfunction hasClass(elm, className) {\n  return elm && elm.classList.contains(className);\n}\n\nfunction rect(target) {\n  return target.getBoundingClientRect();\n}\n\nfunction remove(nodes) {\n  forEach(nodes, function (node) {\n    if (node && node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  });\n}\n\nfunction parseHtml(html) {\n  return child(new DOMParser().parseFromString(html, \"text/html\").body);\n}\n\nfunction prevent(e, stopPropagation) {\n  e.preventDefault();\n\n  if (stopPropagation) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n  }\n}\n\nfunction query(parent, selector) {\n  return parent && parent.querySelector(selector);\n}\n\nfunction queryAll(parent, selector) {\n  return selector ? slice(parent.querySelectorAll(selector)) : [];\n}\n\nfunction removeClass(elm, classes) {\n  toggleClass(elm, classes, false);\n}\n\nfunction timeOf(e) {\n  return e.timeStamp;\n}\n\nfunction unit(value) {\n  return isString(value) ? value : value ? value + \"px\" : \"\";\n}\n\nvar PROJECT_CODE = \"splide\";\nvar DATA_ATTRIBUTE = \"data-\" + PROJECT_CODE;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[\" + PROJECT_CODE + \"] \" + (message || \"\"));\n  }\n}\n\nvar min = Math.min,\n    max = Math.max,\n    floor = Math.floor,\n    ceil = Math.ceil,\n    abs = Math.abs;\n\nfunction approximatelyEqual(x, y, epsilon) {\n  return abs(x - y) < epsilon;\n}\n\nfunction between(number, x, y, exclusive) {\n  var minimum = min(x, y);\n  var maximum = max(x, y);\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\n}\n\nfunction clamp(number, x, y) {\n  var minimum = min(x, y);\n  var maximum = max(x, y);\n  return min(max(minimum, number), maximum);\n}\n\nfunction sign(x) {\n  return +(x > 0) - +(x < 0);\n}\n\nfunction camelToKebab(string) {\n  return string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\n\nfunction format(string, replacements) {\n  forEach(replacements, function (replacement) {\n    string = string.replace(\"%s\", \"\" + replacement);\n  });\n  return string;\n}\n\nfunction pad(number) {\n  return number < 10 ? \"0\" + number : \"\" + number;\n}\n\nvar ids = {};\n\nfunction uniqueId(prefix) {\n  return \"\" + prefix + pad(ids[prefix] = (ids[prefix] || 0) + 1);\n}\n\nfunction EventBinder() {\n  var listeners = [];\n\n  function bind(targets, events, callback, options) {\n    forEachEvent(targets, events, function (target, event, namespace) {\n      var isEventTarget = (\"addEventListener\" in target);\n      var remover = isEventTarget ? target.removeEventListener.bind(target, event, callback, options) : target[\"removeListener\"].bind(target, callback);\n      isEventTarget ? target.addEventListener(event, callback, options) : target[\"addListener\"](callback);\n      listeners.push([target, event, namespace, callback, remover]);\n    });\n  }\n\n  function unbind(targets, events, callback) {\n    forEachEvent(targets, events, function (target, event, namespace) {\n      listeners = listeners.filter(function (listener) {\n        if (listener[0] === target && listener[1] === event && listener[2] === namespace && (!callback || listener[3] === callback)) {\n          listener[4]();\n          return false;\n        }\n\n        return true;\n      });\n    });\n  }\n\n  function dispatch(target, type, detail) {\n    var e;\n    var bubbles = true;\n\n    if (typeof CustomEvent === \"function\") {\n      e = new CustomEvent(type, {\n        bubbles: bubbles,\n        detail: detail\n      });\n    } else {\n      e = document.createEvent(\"CustomEvent\");\n      e.initCustomEvent(type, bubbles, false, detail);\n    }\n\n    target.dispatchEvent(e);\n    return e;\n  }\n\n  function forEachEvent(targets, events, iteratee) {\n    forEach(targets, function (target) {\n      target && forEach(events, function (events2) {\n        events2.split(\" \").forEach(function (eventNS) {\n          var fragment = eventNS.split(\".\");\n          iteratee(target, fragment[0], fragment[1]);\n        });\n      });\n    });\n  }\n\n  function destroy() {\n    listeners.forEach(function (data) {\n      data[4]();\n    });\n    empty(listeners);\n  }\n\n  return {\n    bind: bind,\n    unbind: unbind,\n    dispatch: dispatch,\n    destroy: destroy\n  };\n}\n\nvar EVENT_MOUNTED = \"mounted\";\nvar EVENT_READY = \"ready\";\nvar EVENT_MOVE = \"move\";\nvar EVENT_MOVED = \"moved\";\nvar EVENT_CLICK = \"click\";\nvar EVENT_ACTIVE = \"active\";\nvar EVENT_INACTIVE = \"inactive\";\nvar EVENT_VISIBLE = \"visible\";\nvar EVENT_HIDDEN = \"hidden\";\nvar EVENT_REFRESH = \"refresh\";\nvar EVENT_UPDATED = \"updated\";\nvar EVENT_RESIZE = \"resize\";\nvar EVENT_RESIZED = \"resized\";\nvar EVENT_DRAG = \"drag\";\nvar EVENT_DRAGGING = \"dragging\";\nvar EVENT_DRAGGED = \"dragged\";\nvar EVENT_SCROLL = \"scroll\";\nvar EVENT_SCROLLED = \"scrolled\";\nvar EVENT_OVERFLOW = \"overflow\";\nvar EVENT_DESTROY = \"destroy\";\nvar EVENT_ARROWS_MOUNTED = \"arrows:mounted\";\nvar EVENT_ARROWS_UPDATED = \"arrows:updated\";\nvar EVENT_PAGINATION_MOUNTED = \"pagination:mounted\";\nvar EVENT_PAGINATION_UPDATED = \"pagination:updated\";\nvar EVENT_NAVIGATION_MOUNTED = \"navigation:mounted\";\nvar EVENT_AUTOPLAY_PLAY = \"autoplay:play\";\nvar EVENT_AUTOPLAY_PLAYING = \"autoplay:playing\";\nvar EVENT_AUTOPLAY_PAUSE = \"autoplay:pause\";\nvar EVENT_LAZYLOAD_LOADED = \"lazyload:loaded\";\nvar EVENT_SLIDE_KEYDOWN = \"sk\";\nvar EVENT_SHIFTED = \"sh\";\nvar EVENT_END_INDEX_CHANGED = \"ei\";\n\nfunction EventInterface(Splide2) {\n  var bus = Splide2 ? Splide2.event.bus : document.createDocumentFragment();\n  var binder = EventBinder();\n\n  function on(events, callback) {\n    binder.bind(bus, toArray(events).join(\" \"), function (e) {\n      callback.apply(callback, isArray(e.detail) ? e.detail : []);\n    });\n  }\n\n  function emit(event) {\n    binder.dispatch(bus, event, slice(arguments, 1));\n  }\n\n  if (Splide2) {\n    Splide2.event.on(EVENT_DESTROY, binder.destroy);\n  }\n\n  return assign(binder, {\n    bus: bus,\n    on: on,\n    off: apply(binder.unbind, bus),\n    emit: emit\n  });\n}\n\nfunction RequestInterval(interval, onInterval, onUpdate, limit) {\n  var now = Date.now;\n  var startTime;\n  var rate = 0;\n  var id;\n  var paused = true;\n  var count = 0;\n\n  function update() {\n    if (!paused) {\n      rate = interval ? min((now() - startTime) / interval, 1) : 1;\n      onUpdate && onUpdate(rate);\n\n      if (rate >= 1) {\n        onInterval();\n        startTime = now();\n\n        if (limit && ++count >= limit) {\n          return pause();\n        }\n      }\n\n      id = raf(update);\n    }\n  }\n\n  function start(resume) {\n    resume || cancel();\n    startTime = now() - (resume ? rate * interval : 0);\n    paused = false;\n    id = raf(update);\n  }\n\n  function pause() {\n    paused = true;\n  }\n\n  function rewind() {\n    startTime = now();\n    rate = 0;\n\n    if (onUpdate) {\n      onUpdate(rate);\n    }\n  }\n\n  function cancel() {\n    id && cancelAnimationFrame(id);\n    rate = 0;\n    id = 0;\n    paused = true;\n  }\n\n  function set(time) {\n    interval = time;\n  }\n\n  function isPaused() {\n    return paused;\n  }\n\n  return {\n    start: start,\n    rewind: rewind,\n    pause: pause,\n    cancel: cancel,\n    set: set,\n    isPaused: isPaused\n  };\n}\n\nfunction State(initialState) {\n  var state = initialState;\n\n  function set(value) {\n    state = value;\n  }\n\n  function is(states) {\n    return includes(toArray(states), state);\n  }\n\n  return {\n    set: set,\n    is: is\n  };\n}\n\nfunction Throttle(func, duration) {\n  var interval = RequestInterval(duration || 0, func, null, 1);\n  return function () {\n    interval.isPaused() && interval.start();\n  };\n}\n\nfunction Media(Splide2, Components2, options) {\n  var state = Splide2.state;\n  var breakpoints = options.breakpoints || {};\n  var reducedMotion = options.reducedMotion || {};\n  var binder = EventBinder();\n  var queries = [];\n\n  function setup() {\n    var isMin = options.mediaQuery === \"min\";\n    ownKeys(breakpoints).sort(function (n, m) {\n      return isMin ? +n - +m : +m - +n;\n    }).forEach(function (key) {\n      register(breakpoints[key], \"(\" + (isMin ? \"min\" : \"max\") + \"-width:\" + key + \"px)\");\n    });\n    register(reducedMotion, MEDIA_PREFERS_REDUCED_MOTION);\n    update();\n  }\n\n  function destroy(completely) {\n    if (completely) {\n      binder.destroy();\n    }\n  }\n\n  function register(options2, query) {\n    var queryList = matchMedia(query);\n    binder.bind(queryList, \"change\", update);\n    queries.push([options2, queryList]);\n  }\n\n  function update() {\n    var destroyed = state.is(DESTROYED);\n    var direction = options.direction;\n    var merged = queries.reduce(function (merged2, entry) {\n      return merge(merged2, entry[1].matches ? entry[0] : {});\n    }, {});\n    omit(options);\n    set(merged);\n\n    if (options.destroy) {\n      Splide2.destroy(options.destroy === \"completely\");\n    } else if (destroyed) {\n      destroy(true);\n      Splide2.mount();\n    } else {\n      direction !== options.direction && Splide2.refresh();\n    }\n  }\n\n  function reduce(enable) {\n    if (matchMedia(MEDIA_PREFERS_REDUCED_MOTION).matches) {\n      enable ? merge(options, reducedMotion) : omit(options, ownKeys(reducedMotion));\n    }\n  }\n\n  function set(opts, base, notify) {\n    merge(options, opts);\n    base && merge(Object.getPrototypeOf(options), opts);\n\n    if (notify || !state.is(CREATED)) {\n      Splide2.emit(EVENT_UPDATED, options);\n    }\n  }\n\n  return {\n    setup: setup,\n    destroy: destroy,\n    reduce: reduce,\n    set: set\n  };\n}\n\nvar ARROW = \"Arrow\";\nvar ARROW_LEFT = ARROW + \"Left\";\nvar ARROW_RIGHT = ARROW + \"Right\";\nvar ARROW_UP = ARROW + \"Up\";\nvar ARROW_DOWN = ARROW + \"Down\";\nvar LTR = \"ltr\";\nvar RTL = \"rtl\";\nvar TTB = \"ttb\";\nvar ORIENTATION_MAP = {\n  width: [\"height\"],\n  left: [\"top\", \"right\"],\n  right: [\"bottom\", \"left\"],\n  x: [\"y\"],\n  X: [\"Y\"],\n  Y: [\"X\"],\n  ArrowLeft: [ARROW_UP, ARROW_RIGHT],\n  ArrowRight: [ARROW_DOWN, ARROW_LEFT]\n};\n\nfunction Direction(Splide2, Components2, options) {\n  function resolve(prop, axisOnly, direction) {\n    direction = direction || options.direction;\n    var index = direction === RTL && !axisOnly ? 1 : direction === TTB ? 0 : -1;\n    return ORIENTATION_MAP[prop] && ORIENTATION_MAP[prop][index] || prop.replace(/width|left|right/i, function (match, offset) {\n      var replacement = ORIENTATION_MAP[match.toLowerCase()][index] || match;\n      return offset > 0 ? replacement.charAt(0).toUpperCase() + replacement.slice(1) : replacement;\n    });\n  }\n\n  function orient(value) {\n    return value * (options.direction === RTL ? 1 : -1);\n  }\n\n  return {\n    resolve: resolve,\n    orient: orient\n  };\n}\n\nvar ROLE = \"role\";\nvar TAB_INDEX = \"tabindex\";\nvar DISABLED = \"disabled\";\nvar ARIA_PREFIX = \"aria-\";\nvar ARIA_CONTROLS = ARIA_PREFIX + \"controls\";\nvar ARIA_CURRENT = ARIA_PREFIX + \"current\";\nvar ARIA_SELECTED = ARIA_PREFIX + \"selected\";\nvar ARIA_LABEL = ARIA_PREFIX + \"label\";\nvar ARIA_LABELLEDBY = ARIA_PREFIX + \"labelledby\";\nvar ARIA_HIDDEN = ARIA_PREFIX + \"hidden\";\nvar ARIA_ORIENTATION = ARIA_PREFIX + \"orientation\";\nvar ARIA_ROLEDESCRIPTION = ARIA_PREFIX + \"roledescription\";\nvar ARIA_LIVE = ARIA_PREFIX + \"live\";\nvar ARIA_BUSY = ARIA_PREFIX + \"busy\";\nvar ARIA_ATOMIC = ARIA_PREFIX + \"atomic\";\nvar ALL_ATTRIBUTES = [ROLE, TAB_INDEX, DISABLED, ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_HIDDEN, ARIA_ORIENTATION, ARIA_ROLEDESCRIPTION];\nvar CLASS_PREFIX = PROJECT_CODE + \"__\";\nvar STATUS_CLASS_PREFIX = \"is-\";\nvar CLASS_ROOT = PROJECT_CODE;\nvar CLASS_TRACK = CLASS_PREFIX + \"track\";\nvar CLASS_LIST = CLASS_PREFIX + \"list\";\nvar CLASS_SLIDE = CLASS_PREFIX + \"slide\";\nvar CLASS_CLONE = CLASS_SLIDE + \"--clone\";\nvar CLASS_CONTAINER = CLASS_SLIDE + \"__container\";\nvar CLASS_ARROWS = CLASS_PREFIX + \"arrows\";\nvar CLASS_ARROW = CLASS_PREFIX + \"arrow\";\nvar CLASS_ARROW_PREV = CLASS_ARROW + \"--prev\";\nvar CLASS_ARROW_NEXT = CLASS_ARROW + \"--next\";\nvar CLASS_PAGINATION = CLASS_PREFIX + \"pagination\";\nvar CLASS_PAGINATION_PAGE = CLASS_PAGINATION + \"__page\";\nvar CLASS_PROGRESS = CLASS_PREFIX + \"progress\";\nvar CLASS_PROGRESS_BAR = CLASS_PROGRESS + \"__bar\";\nvar CLASS_TOGGLE = CLASS_PREFIX + \"toggle\";\nvar CLASS_TOGGLE_PLAY = CLASS_TOGGLE + \"__play\";\nvar CLASS_TOGGLE_PAUSE = CLASS_TOGGLE + \"__pause\";\nvar CLASS_SPINNER = CLASS_PREFIX + \"spinner\";\nvar CLASS_SR = CLASS_PREFIX + \"sr\";\nvar CLASS_INITIALIZED = STATUS_CLASS_PREFIX + \"initialized\";\nvar CLASS_ACTIVE = STATUS_CLASS_PREFIX + \"active\";\nvar CLASS_PREV = STATUS_CLASS_PREFIX + \"prev\";\nvar CLASS_NEXT = STATUS_CLASS_PREFIX + \"next\";\nvar CLASS_VISIBLE = STATUS_CLASS_PREFIX + \"visible\";\nvar CLASS_LOADING = STATUS_CLASS_PREFIX + \"loading\";\nvar CLASS_FOCUS_IN = STATUS_CLASS_PREFIX + \"focus-in\";\nvar CLASS_OVERFLOW = STATUS_CLASS_PREFIX + \"overflow\";\nvar STATUS_CLASSES = [CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING, CLASS_FOCUS_IN, CLASS_OVERFLOW];\nvar CLASSES = {\n  slide: CLASS_SLIDE,\n  clone: CLASS_CLONE,\n  arrows: CLASS_ARROWS,\n  arrow: CLASS_ARROW,\n  prev: CLASS_ARROW_PREV,\n  next: CLASS_ARROW_NEXT,\n  pagination: CLASS_PAGINATION,\n  page: CLASS_PAGINATION_PAGE,\n  spinner: CLASS_SPINNER\n};\n\nfunction closest(from, selector) {\n  if (isFunction(from.closest)) {\n    return from.closest(selector);\n  }\n\n  var elm = from;\n\n  while (elm && elm.nodeType === 1) {\n    if (matches(elm, selector)) {\n      break;\n    }\n\n    elm = elm.parentElement;\n  }\n\n  return elm;\n}\n\nvar FRICTION = 5;\nvar LOG_INTERVAL = 200;\nvar POINTER_DOWN_EVENTS = \"touchstart mousedown\";\nvar POINTER_MOVE_EVENTS = \"touchmove mousemove\";\nvar POINTER_UP_EVENTS = \"touchend touchcancel mouseup click\";\n\nfunction Elements(Splide2, Components2, options) {\n  var _EventInterface = EventInterface(Splide2),\n      on = _EventInterface.on,\n      bind = _EventInterface.bind;\n\n  var root = Splide2.root;\n  var i18n = options.i18n;\n  var elements = {};\n  var slides = [];\n  var rootClasses = [];\n  var trackClasses = [];\n  var track;\n  var list;\n  var isUsingKey;\n\n  function setup() {\n    collect();\n    init();\n    update();\n  }\n\n  function mount() {\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, setup);\n    on(EVENT_UPDATED, update);\n    bind(document, POINTER_DOWN_EVENTS + \" keydown\", function (e) {\n      isUsingKey = e.type === \"keydown\";\n    }, {\n      capture: true\n    });\n    bind(root, \"focusin\", function () {\n      toggleClass(root, CLASS_FOCUS_IN, !!isUsingKey);\n    });\n  }\n\n  function destroy(completely) {\n    var attrs = ALL_ATTRIBUTES.concat(\"style\");\n    empty(slides);\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    removeAttribute([track, list], attrs);\n    removeAttribute(root, completely ? attrs : [\"style\", ARIA_ROLEDESCRIPTION]);\n  }\n\n  function update() {\n    removeClass(root, rootClasses);\n    removeClass(track, trackClasses);\n    rootClasses = getClasses(CLASS_ROOT);\n    trackClasses = getClasses(CLASS_TRACK);\n    addClass(root, rootClasses);\n    addClass(track, trackClasses);\n    setAttribute(root, ARIA_LABEL, options.label);\n    setAttribute(root, ARIA_LABELLEDBY, options.labelledby);\n  }\n\n  function collect() {\n    track = find(\".\" + CLASS_TRACK);\n    list = child(track, \".\" + CLASS_LIST);\n    assert(track && list, \"A track/list element is missing.\");\n    push(slides, children(list, \".\" + CLASS_SLIDE + \":not(.\" + CLASS_CLONE + \")\"));\n    forOwn({\n      arrows: CLASS_ARROWS,\n      pagination: CLASS_PAGINATION,\n      prev: CLASS_ARROW_PREV,\n      next: CLASS_ARROW_NEXT,\n      bar: CLASS_PROGRESS_BAR,\n      toggle: CLASS_TOGGLE\n    }, function (className, key) {\n      elements[key] = find(\".\" + className);\n    });\n    assign(elements, {\n      root: root,\n      track: track,\n      list: list,\n      slides: slides\n    });\n  }\n\n  function init() {\n    var id = root.id || uniqueId(PROJECT_CODE);\n    var role = options.role;\n    root.id = id;\n    track.id = track.id || id + \"-track\";\n    list.id = list.id || id + \"-list\";\n\n    if (!getAttribute(root, ROLE) && root.tagName !== \"SECTION\" && role) {\n      setAttribute(root, ROLE, role);\n    }\n\n    setAttribute(root, ARIA_ROLEDESCRIPTION, i18n.carousel);\n    setAttribute(list, ROLE, \"presentation\");\n  }\n\n  function find(selector) {\n    var elm = query(root, selector);\n    return elm && closest(elm, \".\" + CLASS_ROOT) === root ? elm : void 0;\n  }\n\n  function getClasses(base) {\n    return [base + \"--\" + options.type, base + \"--\" + options.direction, options.drag && base + \"--draggable\", options.isNavigation && base + \"--nav\", base === CLASS_ROOT && CLASS_ACTIVE];\n  }\n\n  return assign(elements, {\n    setup: setup,\n    mount: mount,\n    destroy: destroy\n  });\n}\n\nvar SLIDE = \"slide\";\nvar LOOP = \"loop\";\nvar FADE = \"fade\";\n\nfunction Slide$1(Splide2, index, slideIndex, slide) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      emit = event.emit,\n      bind = event.bind;\n  var Components = Splide2.Components,\n      root = Splide2.root,\n      options = Splide2.options;\n  var isNavigation = options.isNavigation,\n      updateOnMove = options.updateOnMove,\n      i18n = options.i18n,\n      pagination = options.pagination,\n      slideFocus = options.slideFocus;\n  var resolve = Components.Direction.resolve;\n  var styles = getAttribute(slide, \"style\");\n  var label = getAttribute(slide, ARIA_LABEL);\n  var isClone = slideIndex > -1;\n  var container = child(slide, \".\" + CLASS_CONTAINER);\n  var destroyed;\n\n  function mount() {\n    if (!isClone) {\n      slide.id = root.id + \"-slide\" + pad(index + 1);\n      setAttribute(slide, ROLE, pagination ? \"tabpanel\" : \"group\");\n      setAttribute(slide, ARIA_ROLEDESCRIPTION, i18n.slide);\n      setAttribute(slide, ARIA_LABEL, label || format(i18n.slideLabel, [index + 1, Splide2.length]));\n    }\n\n    listen();\n  }\n\n  function listen() {\n    bind(slide, \"click\", apply(emit, EVENT_CLICK, self));\n    bind(slide, \"keydown\", apply(emit, EVENT_SLIDE_KEYDOWN, self));\n    on([EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED], update);\n    on(EVENT_NAVIGATION_MOUNTED, initNavigation);\n\n    if (updateOnMove) {\n      on(EVENT_MOVE, onMove);\n    }\n  }\n\n  function destroy() {\n    destroyed = true;\n    event.destroy();\n    removeClass(slide, STATUS_CLASSES);\n    removeAttribute(slide, ALL_ATTRIBUTES);\n    setAttribute(slide, \"style\", styles);\n    setAttribute(slide, ARIA_LABEL, label || \"\");\n  }\n\n  function initNavigation() {\n    var controls = Splide2.splides.map(function (target) {\n      var Slide2 = target.splide.Components.Slides.getAt(index);\n      return Slide2 ? Slide2.slide.id : \"\";\n    }).join(\" \");\n    setAttribute(slide, ARIA_LABEL, format(i18n.slideX, (isClone ? slideIndex : index) + 1));\n    setAttribute(slide, ARIA_CONTROLS, controls);\n    setAttribute(slide, ROLE, slideFocus ? \"button\" : \"\");\n    slideFocus && removeAttribute(slide, ARIA_ROLEDESCRIPTION);\n  }\n\n  function onMove() {\n    if (!destroyed) {\n      update();\n    }\n  }\n\n  function update() {\n    if (!destroyed) {\n      var curr = Splide2.index;\n      updateActivity();\n      updateVisibility();\n      toggleClass(slide, CLASS_PREV, index === curr - 1);\n      toggleClass(slide, CLASS_NEXT, index === curr + 1);\n    }\n  }\n\n  function updateActivity() {\n    var active = isActive();\n\n    if (active !== hasClass(slide, CLASS_ACTIVE)) {\n      toggleClass(slide, CLASS_ACTIVE, active);\n      setAttribute(slide, ARIA_CURRENT, isNavigation && active || \"\");\n      emit(active ? EVENT_ACTIVE : EVENT_INACTIVE, self);\n    }\n  }\n\n  function updateVisibility() {\n    var visible = isVisible();\n    var hidden = !visible && (!isActive() || isClone);\n\n    if (!Splide2.state.is([MOVING, SCROLLING])) {\n      setAttribute(slide, ARIA_HIDDEN, hidden || \"\");\n    }\n\n    setAttribute(queryAll(slide, options.focusableNodes || \"\"), TAB_INDEX, hidden ? -1 : \"\");\n\n    if (slideFocus) {\n      setAttribute(slide, TAB_INDEX, hidden ? -1 : 0);\n    }\n\n    if (visible !== hasClass(slide, CLASS_VISIBLE)) {\n      toggleClass(slide, CLASS_VISIBLE, visible);\n      emit(visible ? EVENT_VISIBLE : EVENT_HIDDEN, self);\n    }\n\n    if (!visible && document.activeElement === slide) {\n      var Slide2 = Components.Slides.getAt(Splide2.index);\n      Slide2 && focus(Slide2.slide);\n    }\n  }\n\n  function style$1(prop, value, useContainer) {\n    style(useContainer && container || slide, prop, value);\n  }\n\n  function isActive() {\n    var curr = Splide2.index;\n    return curr === index || options.cloneStatus && curr === slideIndex;\n  }\n\n  function isVisible() {\n    if (Splide2.is(FADE)) {\n      return isActive();\n    }\n\n    var trackRect = rect(Components.Elements.track);\n    var slideRect = rect(slide);\n    var left = resolve(\"left\", true);\n    var right = resolve(\"right\", true);\n    return floor(trackRect[left]) <= ceil(slideRect[left]) && floor(slideRect[right]) <= ceil(trackRect[right]);\n  }\n\n  function isWithin(from, distance) {\n    var diff = abs(from - index);\n\n    if (!isClone && (options.rewind || Splide2.is(LOOP))) {\n      diff = min(diff, Splide2.length - diff);\n    }\n\n    return diff <= distance;\n  }\n\n  var self = {\n    index: index,\n    slideIndex: slideIndex,\n    slide: slide,\n    container: container,\n    isClone: isClone,\n    mount: mount,\n    destroy: destroy,\n    update: update,\n    style: style$1,\n    isWithin: isWithin\n  };\n  return self;\n}\n\nfunction Slides(Splide2, Components2, options) {\n  var _EventInterface2 = EventInterface(Splide2),\n      on = _EventInterface2.on,\n      emit = _EventInterface2.emit,\n      bind = _EventInterface2.bind;\n\n  var _Components2$Elements = Components2.Elements,\n      slides = _Components2$Elements.slides,\n      list = _Components2$Elements.list;\n  var Slides2 = [];\n\n  function mount() {\n    init();\n    on(EVENT_REFRESH, destroy);\n    on(EVENT_REFRESH, init);\n  }\n\n  function init() {\n    slides.forEach(function (slide, index) {\n      register(slide, index, -1);\n    });\n  }\n\n  function destroy() {\n    forEach$1(function (Slide2) {\n      Slide2.destroy();\n    });\n    empty(Slides2);\n  }\n\n  function update() {\n    forEach$1(function (Slide2) {\n      Slide2.update();\n    });\n  }\n\n  function register(slide, index, slideIndex) {\n    var object = Slide$1(Splide2, index, slideIndex, slide);\n    object.mount();\n    Slides2.push(object);\n    Slides2.sort(function (Slide1, Slide2) {\n      return Slide1.index - Slide2.index;\n    });\n  }\n\n  function get(excludeClones) {\n    return excludeClones ? filter(function (Slide2) {\n      return !Slide2.isClone;\n    }) : Slides2;\n  }\n\n  function getIn(page) {\n    var Controller = Components2.Controller;\n    var index = Controller.toIndex(page);\n    var max = Controller.hasFocus() ? 1 : options.perPage;\n    return filter(function (Slide2) {\n      return between(Slide2.index, index, index + max - 1);\n    });\n  }\n\n  function getAt(index) {\n    return filter(index)[0];\n  }\n\n  function add(items, index) {\n    forEach(items, function (slide) {\n      if (isString(slide)) {\n        slide = parseHtml(slide);\n      }\n\n      if (isHTMLElement(slide)) {\n        var ref = slides[index];\n        ref ? before(slide, ref) : append(list, slide);\n        addClass(slide, options.classes.slide);\n        observeImages(slide, apply(emit, EVENT_RESIZE));\n      }\n    });\n    emit(EVENT_REFRESH);\n  }\n\n  function remove$1(matcher) {\n    remove(filter(matcher).map(function (Slide2) {\n      return Slide2.slide;\n    }));\n    emit(EVENT_REFRESH);\n  }\n\n  function forEach$1(iteratee, excludeClones) {\n    get(excludeClones).forEach(iteratee);\n  }\n\n  function filter(matcher) {\n    return Slides2.filter(isFunction(matcher) ? matcher : function (Slide2) {\n      return isString(matcher) ? matches(Slide2.slide, matcher) : includes(toArray(matcher), Slide2.index);\n    });\n  }\n\n  function style(prop, value, useContainer) {\n    forEach$1(function (Slide2) {\n      Slide2.style(prop, value, useContainer);\n    });\n  }\n\n  function observeImages(elm, callback) {\n    var images = queryAll(elm, \"img\");\n    var length = images.length;\n\n    if (length) {\n      images.forEach(function (img) {\n        bind(img, \"load error\", function () {\n          if (! --length) {\n            callback();\n          }\n        });\n      });\n    } else {\n      callback();\n    }\n  }\n\n  function getLength(excludeClones) {\n    return excludeClones ? slides.length : Slides2.length;\n  }\n\n  function isEnough() {\n    return Slides2.length > options.perPage;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    update: update,\n    register: register,\n    get: get,\n    getIn: getIn,\n    getAt: getAt,\n    add: add,\n    remove: remove$1,\n    forEach: forEach$1,\n    filter: filter,\n    style: style,\n    getLength: getLength,\n    isEnough: isEnough\n  };\n}\n\nfunction Layout(Splide2, Components2, options) {\n  var _EventInterface3 = EventInterface(Splide2),\n      on = _EventInterface3.on,\n      bind = _EventInterface3.bind,\n      emit = _EventInterface3.emit;\n\n  var Slides = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var _Components2$Elements2 = Components2.Elements,\n      root = _Components2$Elements2.root,\n      track = _Components2$Elements2.track,\n      list = _Components2$Elements2.list;\n  var getAt = Slides.getAt,\n      styleSlides = Slides.style;\n  var vertical;\n  var rootRect;\n  var overflow;\n\n  function mount() {\n    init();\n    bind(window, \"resize load\", Throttle(apply(emit, EVENT_RESIZE)));\n    on([EVENT_UPDATED, EVENT_REFRESH], init);\n    on(EVENT_RESIZE, resize);\n  }\n\n  function init() {\n    vertical = options.direction === TTB;\n    style(root, \"maxWidth\", unit(options.width));\n    style(track, resolve(\"paddingLeft\"), cssPadding(false));\n    style(track, resolve(\"paddingRight\"), cssPadding(true));\n    resize(true);\n  }\n\n  function resize(force) {\n    var newRect = rect(root);\n\n    if (force || rootRect.width !== newRect.width || rootRect.height !== newRect.height) {\n      style(track, \"height\", cssTrackHeight());\n      styleSlides(resolve(\"marginRight\"), unit(options.gap));\n      styleSlides(\"width\", cssSlideWidth());\n      styleSlides(\"height\", cssSlideHeight(), true);\n      rootRect = newRect;\n      emit(EVENT_RESIZED);\n\n      if (overflow !== (overflow = isOverflow())) {\n        toggleClass(root, CLASS_OVERFLOW, overflow);\n        emit(EVENT_OVERFLOW, overflow);\n      }\n    }\n  }\n\n  function cssPadding(right) {\n    var padding = options.padding;\n    var prop = resolve(right ? \"right\" : \"left\");\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  }\n\n  function cssTrackHeight() {\n    var height = \"\";\n\n    if (vertical) {\n      height = cssHeight();\n      assert(height, \"height or heightRatio is missing.\");\n      height = \"calc(\" + height + \" - \" + cssPadding(false) + \" - \" + cssPadding(true) + \")\";\n    }\n\n    return height;\n  }\n\n  function cssHeight() {\n    return unit(options.height || rect(list).width * options.heightRatio);\n  }\n\n  function cssSlideWidth() {\n    return options.autoWidth ? null : unit(options.fixedWidth) || (vertical ? \"\" : cssSlideSize());\n  }\n\n  function cssSlideHeight() {\n    return unit(options.fixedHeight) || (vertical ? options.autoHeight ? null : cssSlideSize() : cssHeight());\n  }\n\n  function cssSlideSize() {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  }\n\n  function listSize() {\n    return rect(list)[resolve(\"width\")];\n  }\n\n  function slideSize(index, withoutGap) {\n    var Slide = getAt(index || 0);\n    return Slide ? rect(Slide.slide)[resolve(\"width\")] + (withoutGap ? 0 : getGap()) : 0;\n  }\n\n  function totalSize(index, withoutGap) {\n    var Slide = getAt(index);\n\n    if (Slide) {\n      var right = rect(Slide.slide)[resolve(\"right\")];\n      var left = rect(list)[resolve(\"left\")];\n      return abs(right - left) + (withoutGap ? 0 : getGap());\n    }\n\n    return 0;\n  }\n\n  function sliderSize(withoutGap) {\n    return totalSize(Splide2.length - 1) - totalSize(0) + slideSize(0, withoutGap);\n  }\n\n  function getGap() {\n    var Slide = getAt(0);\n    return Slide && parseFloat(style(Slide.slide, resolve(\"marginRight\"))) || 0;\n  }\n\n  function getPadding(right) {\n    return parseFloat(style(track, resolve(\"padding\" + (right ? \"Right\" : \"Left\")))) || 0;\n  }\n\n  function isOverflow() {\n    return Splide2.is(FADE) || sliderSize(true) > listSize();\n  }\n\n  return {\n    mount: mount,\n    resize: resize,\n    listSize: listSize,\n    slideSize: slideSize,\n    sliderSize: sliderSize,\n    totalSize: totalSize,\n    getPadding: getPadding,\n    isOverflow: isOverflow\n  };\n}\n\nvar MULTIPLIER = 2;\n\nfunction Clones(Splide2, Components2, options) {\n  var event = EventInterface(Splide2);\n  var on = event.on;\n  var Elements = Components2.Elements,\n      Slides = Components2.Slides;\n  var resolve = Components2.Direction.resolve;\n  var clones = [];\n  var cloneCount;\n\n  function mount() {\n    on(EVENT_REFRESH, remount);\n    on([EVENT_UPDATED, EVENT_RESIZE], observe);\n\n    if (cloneCount = computeCloneCount()) {\n      generate(cloneCount);\n      Components2.Layout.resize(true);\n    }\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function destroy() {\n    remove(clones);\n    empty(clones);\n    event.destroy();\n  }\n\n  function observe() {\n    var count = computeCloneCount();\n\n    if (cloneCount !== count) {\n      if (cloneCount < count || !count) {\n        event.emit(EVENT_REFRESH);\n      }\n    }\n  }\n\n  function generate(count) {\n    var slides = Slides.get().slice();\n    var length = slides.length;\n\n    if (length) {\n      while (slides.length < count) {\n        push(slides, slides);\n      }\n\n      push(slides.slice(-count), slides.slice(0, count)).forEach(function (Slide, index) {\n        var isHead = index < count;\n        var clone = cloneDeep(Slide.slide, index);\n        isHead ? before(clone, slides[0].slide) : append(Elements.list, clone);\n        push(clones, clone);\n        Slides.register(clone, index - count + (isHead ? 0 : length), Slide.index);\n      });\n    }\n  }\n\n  function cloneDeep(elm, index) {\n    var clone = elm.cloneNode(true);\n    addClass(clone, options.classes.clone);\n    clone.id = Splide2.root.id + \"-clone\" + pad(index + 1);\n    return clone;\n  }\n\n  function computeCloneCount() {\n    var clones2 = options.clones;\n\n    if (!Splide2.is(LOOP)) {\n      clones2 = 0;\n    } else if (isUndefined(clones2)) {\n      var fixedSize = options[resolve(\"fixedWidth\")] && Components2.Layout.slideSize(0);\n      var fixedCount = fixedSize && ceil(rect(Elements.track)[resolve(\"width\")] / fixedSize);\n      clones2 = fixedCount || options[resolve(\"autoWidth\")] && Splide2.length || options.perPage * MULTIPLIER;\n    }\n\n    return clones2;\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy\n  };\n}\n\nfunction Move(Splide2, Components2, options) {\n  var _EventInterface4 = EventInterface(Splide2),\n      on = _EventInterface4.on,\n      emit = _EventInterface4.emit;\n\n  var set = Splide2.state.set;\n  var _Components2$Layout = Components2.Layout,\n      slideSize = _Components2$Layout.slideSize,\n      getPadding = _Components2$Layout.getPadding,\n      totalSize = _Components2$Layout.totalSize,\n      listSize = _Components2$Layout.listSize,\n      sliderSize = _Components2$Layout.sliderSize;\n  var _Components2$Directio = Components2.Direction,\n      resolve = _Components2$Directio.resolve,\n      orient = _Components2$Directio.orient;\n  var _Components2$Elements3 = Components2.Elements,\n      list = _Components2$Elements3.list,\n      track = _Components2$Elements3.track;\n  var Transition;\n\n  function mount() {\n    Transition = Components2.Transition;\n    on([EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH], reposition);\n  }\n\n  function reposition() {\n    if (!Components2.Controller.isBusy()) {\n      Components2.Scroll.cancel();\n      jump(Splide2.index);\n      Components2.Slides.update();\n    }\n  }\n\n  function move(dest, index, prev, callback) {\n    if (dest !== index && canShift(dest > prev)) {\n      cancel();\n      translate(shift(getPosition(), dest > prev), true);\n    }\n\n    set(MOVING);\n    emit(EVENT_MOVE, index, prev, dest);\n    Transition.start(index, function () {\n      set(IDLE);\n      emit(EVENT_MOVED, index, prev, dest);\n      callback && callback();\n    });\n  }\n\n  function jump(index) {\n    translate(toPosition(index, true));\n  }\n\n  function translate(position, preventLoop) {\n    if (!Splide2.is(FADE)) {\n      var destination = preventLoop ? position : loop(position);\n      style(list, \"transform\", \"translate\" + resolve(\"X\") + \"(\" + destination + \"px)\");\n      position !== destination && emit(EVENT_SHIFTED);\n    }\n  }\n\n  function loop(position) {\n    if (Splide2.is(LOOP)) {\n      var index = toIndex(position);\n      var exceededMax = index > Components2.Controller.getEnd();\n      var exceededMin = index < 0;\n\n      if (exceededMin || exceededMax) {\n        position = shift(position, exceededMax);\n      }\n    }\n\n    return position;\n  }\n\n  function shift(position, backwards) {\n    var excess = position - getLimit(backwards);\n    var size = sliderSize();\n    position -= orient(size * (ceil(abs(excess) / size) || 1)) * (backwards ? 1 : -1);\n    return position;\n  }\n\n  function cancel() {\n    translate(getPosition(), true);\n    Transition.cancel();\n  }\n\n  function toIndex(position) {\n    var Slides = Components2.Slides.get();\n    var index = 0;\n    var minDistance = Infinity;\n\n    for (var i = 0; i < Slides.length; i++) {\n      var slideIndex = Slides[i].index;\n      var distance = abs(toPosition(slideIndex, true) - position);\n\n      if (distance <= minDistance) {\n        minDistance = distance;\n        index = slideIndex;\n      } else {\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  function toPosition(index, trimming) {\n    var position = orient(totalSize(index - 1) - offset(index));\n    return trimming ? trim(position) : position;\n  }\n\n  function getPosition() {\n    var left = resolve(\"left\");\n    return rect(list)[left] - rect(track)[left] + orient(getPadding(false));\n  }\n\n  function trim(position) {\n    if (options.trimSpace && Splide2.is(SLIDE)) {\n      position = clamp(position, 0, orient(sliderSize(true) - listSize()));\n    }\n\n    return position;\n  }\n\n  function offset(index) {\n    var focus = options.focus;\n    return focus === \"center\" ? (listSize() - slideSize(index, true)) / 2 : +focus * slideSize(index) || 0;\n  }\n\n  function getLimit(max) {\n    return toPosition(max ? Components2.Controller.getEnd() : 0, !!options.trimSpace);\n  }\n\n  function canShift(backwards) {\n    var shifted = orient(shift(getPosition(), backwards));\n    return backwards ? shifted >= 0 : shifted <= list[resolve(\"scrollWidth\")] - rect(track)[resolve(\"width\")];\n  }\n\n  function exceededLimit(max, position) {\n    position = isUndefined(position) ? getPosition() : position;\n    var exceededMin = max !== true && orient(position) < orient(getLimit(false));\n    var exceededMax = max !== false && orient(position) > orient(getLimit(true));\n    return exceededMin || exceededMax;\n  }\n\n  return {\n    mount: mount,\n    move: move,\n    jump: jump,\n    translate: translate,\n    shift: shift,\n    cancel: cancel,\n    toIndex: toIndex,\n    toPosition: toPosition,\n    getPosition: getPosition,\n    getLimit: getLimit,\n    exceededLimit: exceededLimit,\n    reposition: reposition\n  };\n}\n\nfunction Controller(Splide2, Components2, options) {\n  var _EventInterface5 = EventInterface(Splide2),\n      on = _EventInterface5.on,\n      emit = _EventInterface5.emit;\n\n  var Move = Components2.Move;\n  var getPosition = Move.getPosition,\n      getLimit = Move.getLimit,\n      toPosition = Move.toPosition;\n  var _Components2$Slides = Components2.Slides,\n      isEnough = _Components2$Slides.isEnough,\n      getLength = _Components2$Slides.getLength;\n  var omitEnd = options.omitEnd;\n  var isLoop = Splide2.is(LOOP);\n  var isSlide = Splide2.is(SLIDE);\n  var getNext = apply(getAdjacent, false);\n  var getPrev = apply(getAdjacent, true);\n  var currIndex = options.start || 0;\n  var endIndex;\n  var prevIndex = currIndex;\n  var slideCount;\n  var perMove;\n  var perPage;\n\n  function mount() {\n    init();\n    on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], init);\n    on(EVENT_RESIZED, onResized);\n  }\n\n  function init() {\n    slideCount = getLength(true);\n    perMove = options.perMove;\n    perPage = options.perPage;\n    endIndex = getEnd();\n    var index = clamp(currIndex, 0, omitEnd ? endIndex : slideCount - 1);\n\n    if (index !== currIndex) {\n      currIndex = index;\n      Move.reposition();\n    }\n  }\n\n  function onResized() {\n    if (endIndex !== getEnd()) {\n      emit(EVENT_END_INDEX_CHANGED);\n    }\n  }\n\n  function go(control, allowSameIndex, callback) {\n    if (!isBusy()) {\n      var dest = parse(control);\n      var index = loop(dest);\n\n      if (index > -1 && (allowSameIndex || index !== currIndex)) {\n        setIndex(index);\n        Move.move(dest, index, prevIndex, callback);\n      }\n    }\n  }\n\n  function scroll(destination, duration, snap, callback) {\n    Components2.Scroll.scroll(destination, duration, snap, function () {\n      var index = loop(Move.toIndex(getPosition()));\n      setIndex(omitEnd ? min(index, endIndex) : index);\n      callback && callback();\n    });\n  }\n\n  function parse(control) {\n    var index = currIndex;\n\n    if (isString(control)) {\n      var _ref = control.match(/([+\\-<>])(\\d+)?/) || [],\n          indicator = _ref[1],\n          number = _ref[2];\n\n      if (indicator === \"+\" || indicator === \"-\") {\n        index = computeDestIndex(currIndex + +(\"\" + indicator + (+number || 1)), currIndex);\n      } else if (indicator === \">\") {\n        index = number ? toIndex(+number) : getNext(true);\n      } else if (indicator === \"<\") {\n        index = getPrev(true);\n      }\n    } else {\n      index = isLoop ? control : clamp(control, 0, endIndex);\n    }\n\n    return index;\n  }\n\n  function getAdjacent(prev, destination) {\n    var number = perMove || (hasFocus() ? 1 : perPage);\n    var dest = computeDestIndex(currIndex + number * (prev ? -1 : 1), currIndex, !(perMove || hasFocus()));\n\n    if (dest === -1 && isSlide) {\n      if (!approximatelyEqual(getPosition(), getLimit(!prev), 1)) {\n        return prev ? 0 : endIndex;\n      }\n    }\n\n    return destination ? dest : loop(dest);\n  }\n\n  function computeDestIndex(dest, from, snapPage) {\n    if (isEnough() || hasFocus()) {\n      var index = computeMovableDestIndex(dest);\n\n      if (index !== dest) {\n        from = dest;\n        dest = index;\n        snapPage = false;\n      }\n\n      if (dest < 0 || dest > endIndex) {\n        if (!perMove && (between(0, dest, from, true) || between(endIndex, from, dest, true))) {\n          dest = toIndex(toPage(dest));\n        } else {\n          if (isLoop) {\n            dest = snapPage ? dest < 0 ? -(slideCount % perPage || perPage) : slideCount : dest;\n          } else if (options.rewind) {\n            dest = dest < 0 ? endIndex : 0;\n          } else {\n            dest = -1;\n          }\n        }\n      } else {\n        if (snapPage && dest !== from) {\n          dest = toIndex(toPage(from) + (dest < from ? -1 : 1));\n        }\n      }\n    } else {\n      dest = -1;\n    }\n\n    return dest;\n  }\n\n  function computeMovableDestIndex(dest) {\n    if (isSlide && options.trimSpace === \"move\" && dest !== currIndex) {\n      var position = getPosition();\n\n      while (position === toPosition(dest, true) && between(dest, 0, Splide2.length - 1, !options.rewind)) {\n        dest < currIndex ? --dest : ++dest;\n      }\n    }\n\n    return dest;\n  }\n\n  function loop(index) {\n    return isLoop ? (index + slideCount) % slideCount || 0 : index;\n  }\n\n  function getEnd() {\n    var end = slideCount - (hasFocus() || isLoop && perMove ? 1 : perPage);\n\n    while (omitEnd && end-- > 0) {\n      if (toPosition(slideCount - 1, true) !== toPosition(end, true)) {\n        end++;\n        break;\n      }\n    }\n\n    return clamp(end, 0, slideCount - 1);\n  }\n\n  function toIndex(page) {\n    return clamp(hasFocus() ? page : perPage * page, 0, endIndex);\n  }\n\n  function toPage(index) {\n    return hasFocus() ? min(index, endIndex) : floor((index >= endIndex ? slideCount - 1 : index) / perPage);\n  }\n\n  function toDest(destination) {\n    var closest = Move.toIndex(destination);\n    return isSlide ? clamp(closest, 0, endIndex) : closest;\n  }\n\n  function setIndex(index) {\n    if (index !== currIndex) {\n      prevIndex = currIndex;\n      currIndex = index;\n    }\n  }\n\n  function getIndex(prev) {\n    return prev ? prevIndex : currIndex;\n  }\n\n  function hasFocus() {\n    return !isUndefined(options.focus) || options.isNavigation;\n  }\n\n  function isBusy() {\n    return Splide2.state.is([MOVING, SCROLLING]) && !!options.waitForTransition;\n  }\n\n  return {\n    mount: mount,\n    go: go,\n    scroll: scroll,\n    getNext: getNext,\n    getPrev: getPrev,\n    getAdjacent: getAdjacent,\n    getEnd: getEnd,\n    setIndex: setIndex,\n    getIndex: getIndex,\n    toIndex: toIndex,\n    toPage: toPage,\n    toDest: toDest,\n    hasFocus: hasFocus,\n    isBusy: isBusy\n  };\n}\n\nvar XML_NAME_SPACE = \"http://www.w3.org/2000/svg\";\nvar PATH = \"m15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z\";\nvar SIZE = 40;\n\nfunction Arrows(Splide2, Components2, options) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      bind = event.bind,\n      emit = event.emit;\n  var classes = options.classes,\n      i18n = options.i18n;\n  var Elements = Components2.Elements,\n      Controller = Components2.Controller;\n  var placeholder = Elements.arrows,\n      track = Elements.track;\n  var wrapper = placeholder;\n  var prev = Elements.prev;\n  var next = Elements.next;\n  var created;\n  var wrapperClasses;\n  var arrows = {};\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, remount);\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function init() {\n    var enabled = options.arrows;\n\n    if (enabled && !(prev && next)) {\n      createArrows();\n    }\n\n    if (prev && next) {\n      assign(arrows, {\n        prev: prev,\n        next: next\n      });\n      display(wrapper, enabled ? \"\" : \"none\");\n      addClass(wrapper, wrapperClasses = CLASS_ARROWS + \"--\" + options.direction);\n\n      if (enabled) {\n        listen();\n        update();\n        setAttribute([prev, next], ARIA_CONTROLS, track.id);\n        emit(EVENT_ARROWS_MOUNTED, prev, next);\n      }\n    }\n  }\n\n  function destroy() {\n    event.destroy();\n    removeClass(wrapper, wrapperClasses);\n\n    if (created) {\n      remove(placeholder ? [prev, next] : wrapper);\n      prev = next = null;\n    } else {\n      removeAttribute([prev, next], ALL_ATTRIBUTES);\n    }\n  }\n\n  function listen() {\n    on([EVENT_MOUNTED, EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED, EVENT_END_INDEX_CHANGED], update);\n    bind(next, \"click\", apply(go, \">\"));\n    bind(prev, \"click\", apply(go, \"<\"));\n  }\n\n  function go(control) {\n    Controller.go(control, true);\n  }\n\n  function createArrows() {\n    wrapper = placeholder || create(\"div\", classes.arrows);\n    prev = createArrow(true);\n    next = createArrow(false);\n    created = true;\n    append(wrapper, [prev, next]);\n    !placeholder && before(wrapper, track);\n  }\n\n  function createArrow(prev2) {\n    var arrow = \"<button class=\\\"\" + classes.arrow + \" \" + (prev2 ? classes.prev : classes.next) + \"\\\" type=\\\"button\\\"><svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\" focusable=\\\"false\\\"><path d=\\\"\" + (options.arrowPath || PATH) + \"\\\" />\";\n    return parseHtml(arrow);\n  }\n\n  function update() {\n    if (prev && next) {\n      var index = Splide2.index;\n      var prevIndex = Controller.getPrev();\n      var nextIndex = Controller.getNext();\n      var prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\n      var nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\n      prev.disabled = prevIndex < 0;\n      next.disabled = nextIndex < 0;\n      setAttribute(prev, ARIA_LABEL, prevLabel);\n      setAttribute(next, ARIA_LABEL, nextLabel);\n      emit(EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex);\n    }\n  }\n\n  return {\n    arrows: arrows,\n    mount: mount,\n    destroy: destroy,\n    update: update\n  };\n}\n\nvar INTERVAL_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-interval\";\n\nfunction Autoplay(Splide2, Components2, options) {\n  var _EventInterface6 = EventInterface(Splide2),\n      on = _EventInterface6.on,\n      bind = _EventInterface6.bind,\n      emit = _EventInterface6.emit;\n\n  var interval = RequestInterval(options.interval, Splide2.go.bind(Splide2, \">\"), onAnimationFrame);\n  var isPaused = interval.isPaused;\n  var Elements = Components2.Elements,\n      _Components2$Elements4 = Components2.Elements,\n      root = _Components2$Elements4.root,\n      toggle = _Components2$Elements4.toggle;\n  var autoplay = options.autoplay;\n  var hovered;\n  var focused;\n  var stopped = autoplay === \"pause\";\n\n  function mount() {\n    if (autoplay) {\n      listen();\n      toggle && setAttribute(toggle, ARIA_CONTROLS, Elements.track.id);\n      stopped || play();\n      update();\n    }\n  }\n\n  function listen() {\n    if (options.pauseOnHover) {\n      bind(root, \"mouseenter mouseleave\", function (e) {\n        hovered = e.type === \"mouseenter\";\n        autoToggle();\n      });\n    }\n\n    if (options.pauseOnFocus) {\n      bind(root, \"focusin focusout\", function (e) {\n        focused = e.type === \"focusin\";\n        autoToggle();\n      });\n    }\n\n    if (toggle) {\n      bind(toggle, \"click\", function () {\n        stopped ? play() : pause(true);\n      });\n    }\n\n    on([EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH], interval.rewind);\n    on(EVENT_MOVE, onMove);\n  }\n\n  function play() {\n    if (isPaused() && Components2.Slides.isEnough()) {\n      interval.start(!options.resetProgress);\n      focused = hovered = stopped = false;\n      update();\n      emit(EVENT_AUTOPLAY_PLAY);\n    }\n  }\n\n  function pause(stop) {\n    if (stop === void 0) {\n      stop = true;\n    }\n\n    stopped = !!stop;\n    update();\n\n    if (!isPaused()) {\n      interval.pause();\n      emit(EVENT_AUTOPLAY_PAUSE);\n    }\n  }\n\n  function autoToggle() {\n    if (!stopped) {\n      hovered || focused ? pause(false) : play();\n    }\n  }\n\n  function update() {\n    if (toggle) {\n      toggleClass(toggle, CLASS_ACTIVE, !stopped);\n      setAttribute(toggle, ARIA_LABEL, options.i18n[stopped ? \"play\" : \"pause\"]);\n    }\n  }\n\n  function onAnimationFrame(rate) {\n    var bar = Elements.bar;\n    bar && style(bar, \"width\", rate * 100 + \"%\");\n    emit(EVENT_AUTOPLAY_PLAYING, rate);\n  }\n\n  function onMove(index) {\n    var Slide = Components2.Slides.getAt(index);\n    interval.set(Slide && +getAttribute(Slide.slide, INTERVAL_DATA_ATTRIBUTE) || options.interval);\n  }\n\n  return {\n    mount: mount,\n    destroy: interval.cancel,\n    play: play,\n    pause: pause,\n    isPaused: isPaused\n  };\n}\n\nfunction Cover(Splide2, Components2, options) {\n  var _EventInterface7 = EventInterface(Splide2),\n      on = _EventInterface7.on;\n\n  function mount() {\n    if (options.cover) {\n      on(EVENT_LAZYLOAD_LOADED, apply(toggle, true));\n      on([EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH], apply(cover, true));\n    }\n  }\n\n  function cover(cover2) {\n    Components2.Slides.forEach(function (Slide) {\n      var img = child(Slide.container || Slide.slide, \"img\");\n\n      if (img && img.src) {\n        toggle(cover2, img, Slide);\n      }\n    });\n  }\n\n  function toggle(cover2, img, Slide) {\n    Slide.style(\"background\", cover2 ? \"center/cover no-repeat url(\\\"\" + img.src + \"\\\")\" : \"\", true);\n    display(img, cover2 ? \"none\" : \"\");\n  }\n\n  return {\n    mount: mount,\n    destroy: apply(cover, false)\n  };\n}\n\nvar BOUNCE_DIFF_THRESHOLD = 10;\nvar BOUNCE_DURATION = 600;\nvar FRICTION_FACTOR = 0.6;\nvar BASE_VELOCITY = 1.5;\nvar MIN_DURATION = 800;\n\nfunction Scroll(Splide2, Components2, options) {\n  var _EventInterface8 = EventInterface(Splide2),\n      on = _EventInterface8.on,\n      emit = _EventInterface8.emit;\n\n  var set = Splide2.state.set;\n  var Move = Components2.Move;\n  var getPosition = Move.getPosition,\n      getLimit = Move.getLimit,\n      exceededLimit = Move.exceededLimit,\n      translate = Move.translate;\n  var isSlide = Splide2.is(SLIDE);\n  var interval;\n  var callback;\n  var friction = 1;\n\n  function mount() {\n    on(EVENT_MOVE, clear);\n    on([EVENT_UPDATED, EVENT_REFRESH], cancel);\n  }\n\n  function scroll(destination, duration, snap, onScrolled, noConstrain) {\n    var from = getPosition();\n    clear();\n\n    if (snap && (!isSlide || !exceededLimit())) {\n      var size = Components2.Layout.sliderSize();\n      var offset = sign(destination) * size * floor(abs(destination) / size) || 0;\n      destination = Move.toPosition(Components2.Controller.toDest(destination % size)) + offset;\n    }\n\n    var noDistance = approximatelyEqual(from, destination, 1);\n    friction = 1;\n    duration = noDistance ? 0 : duration || max(abs(destination - from) / BASE_VELOCITY, MIN_DURATION);\n    callback = onScrolled;\n    interval = RequestInterval(duration, onEnd, apply(update, from, destination, noConstrain), 1);\n    set(SCROLLING);\n    emit(EVENT_SCROLL);\n    interval.start();\n  }\n\n  function onEnd() {\n    set(IDLE);\n    callback && callback();\n    emit(EVENT_SCROLLED);\n  }\n\n  function update(from, to, noConstrain, rate) {\n    var position = getPosition();\n    var target = from + (to - from) * easing(rate);\n    var diff = (target - position) * friction;\n    translate(position + diff);\n\n    if (isSlide && !noConstrain && exceededLimit()) {\n      friction *= FRICTION_FACTOR;\n\n      if (abs(diff) < BOUNCE_DIFF_THRESHOLD) {\n        scroll(getLimit(exceededLimit(true)), BOUNCE_DURATION, false, callback, true);\n      }\n    }\n  }\n\n  function clear() {\n    if (interval) {\n      interval.cancel();\n    }\n  }\n\n  function cancel() {\n    if (interval && !interval.isPaused()) {\n      clear();\n      onEnd();\n    }\n  }\n\n  function easing(t) {\n    var easingFunc = options.easingFunc;\n    return easingFunc ? easingFunc(t) : 1 - Math.pow(1 - t, 4);\n  }\n\n  return {\n    mount: mount,\n    destroy: clear,\n    scroll: scroll,\n    cancel: cancel\n  };\n}\n\nvar SCROLL_LISTENER_OPTIONS = {\n  passive: false,\n  capture: true\n};\n\nfunction Drag(Splide2, Components2, options) {\n  var _EventInterface9 = EventInterface(Splide2),\n      on = _EventInterface9.on,\n      emit = _EventInterface9.emit,\n      bind = _EventInterface9.bind,\n      unbind = _EventInterface9.unbind;\n\n  var state = Splide2.state;\n  var Move = Components2.Move,\n      Scroll = Components2.Scroll,\n      Controller = Components2.Controller,\n      track = Components2.Elements.track,\n      reduce = Components2.Media.reduce;\n  var _Components2$Directio2 = Components2.Direction,\n      resolve = _Components2$Directio2.resolve,\n      orient = _Components2$Directio2.orient;\n  var getPosition = Move.getPosition,\n      exceededLimit = Move.exceededLimit;\n  var basePosition;\n  var baseEvent;\n  var prevBaseEvent;\n  var isFree;\n  var dragging;\n  var exceeded = false;\n  var clickPrevented;\n  var disabled;\n  var target;\n\n  function mount() {\n    bind(track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS);\n    bind(track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS);\n    bind(track, \"click\", onClick, {\n      capture: true\n    });\n    bind(track, \"dragstart\", prevent);\n    on([EVENT_MOUNTED, EVENT_UPDATED], init);\n  }\n\n  function init() {\n    var drag = options.drag;\n    disable(!drag);\n    isFree = drag === \"free\";\n  }\n\n  function onPointerDown(e) {\n    clickPrevented = false;\n\n    if (!disabled) {\n      var isTouch = isTouchEvent(e);\n\n      if (isDraggable(e.target) && (isTouch || !e.button)) {\n        if (!Controller.isBusy()) {\n          target = isTouch ? track : window;\n          dragging = state.is([MOVING, SCROLLING]);\n          prevBaseEvent = null;\n          bind(target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS);\n          bind(target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS);\n          Move.cancel();\n          Scroll.cancel();\n          save(e);\n        } else {\n          prevent(e, true);\n        }\n      }\n    }\n  }\n\n  function onPointerMove(e) {\n    if (!state.is(DRAGGING)) {\n      state.set(DRAGGING);\n      emit(EVENT_DRAG);\n    }\n\n    if (e.cancelable) {\n      if (dragging) {\n        Move.translate(basePosition + constrain(diffCoord(e)));\n        var expired = diffTime(e) > LOG_INTERVAL;\n        var hasExceeded = exceeded !== (exceeded = exceededLimit());\n\n        if (expired || hasExceeded) {\n          save(e);\n        }\n\n        clickPrevented = true;\n        emit(EVENT_DRAGGING);\n        prevent(e);\n      } else if (isSliderDirection(e)) {\n        dragging = shouldStart(e);\n        prevent(e);\n      }\n    }\n  }\n\n  function onPointerUp(e) {\n    if (state.is(DRAGGING)) {\n      state.set(IDLE);\n      emit(EVENT_DRAGGED);\n    }\n\n    if (dragging) {\n      move(e);\n      prevent(e);\n    }\n\n    unbind(target, POINTER_MOVE_EVENTS, onPointerMove);\n    unbind(target, POINTER_UP_EVENTS, onPointerUp);\n    dragging = false;\n  }\n\n  function onClick(e) {\n    if (!disabled && clickPrevented) {\n      prevent(e, true);\n    }\n  }\n\n  function save(e) {\n    prevBaseEvent = baseEvent;\n    baseEvent = e;\n    basePosition = getPosition();\n  }\n\n  function move(e) {\n    var velocity = computeVelocity(e);\n    var destination = computeDestination(velocity);\n    var rewind = options.rewind && options.rewindByDrag;\n    reduce(false);\n\n    if (isFree) {\n      Controller.scroll(destination, 0, options.snap);\n    } else if (Splide2.is(FADE)) {\n      Controller.go(orient(sign(velocity)) < 0 ? rewind ? \"<\" : \"-\" : rewind ? \">\" : \"+\");\n    } else if (Splide2.is(SLIDE) && exceeded && rewind) {\n      Controller.go(exceededLimit(true) ? \">\" : \"<\");\n    } else {\n      Controller.go(Controller.toDest(destination), true);\n    }\n\n    reduce(true);\n  }\n\n  function shouldStart(e) {\n    var thresholds = options.dragMinThreshold;\n    var isObj = isObject(thresholds);\n    var mouse = isObj && thresholds.mouse || 0;\n    var touch = (isObj ? thresholds.touch : +thresholds) || 10;\n    return abs(diffCoord(e)) > (isTouchEvent(e) ? touch : mouse);\n  }\n\n  function isSliderDirection(e) {\n    return abs(diffCoord(e)) > abs(diffCoord(e, true));\n  }\n\n  function computeVelocity(e) {\n    if (Splide2.is(LOOP) || !exceeded) {\n      var time = diffTime(e);\n\n      if (time && time < LOG_INTERVAL) {\n        return diffCoord(e) / time;\n      }\n    }\n\n    return 0;\n  }\n\n  function computeDestination(velocity) {\n    return getPosition() + sign(velocity) * min(abs(velocity) * (options.flickPower || 600), isFree ? Infinity : Components2.Layout.listSize() * (options.flickMaxPages || 1));\n  }\n\n  function diffCoord(e, orthogonal) {\n    return coordOf(e, orthogonal) - coordOf(getBaseEvent(e), orthogonal);\n  }\n\n  function diffTime(e) {\n    return timeOf(e) - timeOf(getBaseEvent(e));\n  }\n\n  function getBaseEvent(e) {\n    return baseEvent === e && prevBaseEvent || baseEvent;\n  }\n\n  function coordOf(e, orthogonal) {\n    return (isTouchEvent(e) ? e.changedTouches[0] : e)[\"page\" + resolve(orthogonal ? \"Y\" : \"X\")];\n  }\n\n  function constrain(diff) {\n    return diff / (exceeded && Splide2.is(SLIDE) ? FRICTION : 1);\n  }\n\n  function isDraggable(target2) {\n    var noDrag = options.noDrag;\n    return !matches(target2, \".\" + CLASS_PAGINATION_PAGE + \", .\" + CLASS_ARROW) && (!noDrag || !matches(target2, noDrag));\n  }\n\n  function isTouchEvent(e) {\n    return typeof TouchEvent !== \"undefined\" && e instanceof TouchEvent;\n  }\n\n  function isDragging() {\n    return dragging;\n  }\n\n  function disable(value) {\n    disabled = value;\n  }\n\n  return {\n    mount: mount,\n    disable: disable,\n    isDragging: isDragging\n  };\n}\n\nvar NORMALIZATION_MAP = {\n  Spacebar: \" \",\n  Right: ARROW_RIGHT,\n  Left: ARROW_LEFT,\n  Up: ARROW_UP,\n  Down: ARROW_DOWN\n};\n\nfunction normalizeKey(key) {\n  key = isString(key) ? key : key.key;\n  return NORMALIZATION_MAP[key] || key;\n}\n\nvar KEYBOARD_EVENT = \"keydown\";\n\nfunction Keyboard(Splide2, Components2, options) {\n  var _EventInterface10 = EventInterface(Splide2),\n      on = _EventInterface10.on,\n      bind = _EventInterface10.bind,\n      unbind = _EventInterface10.unbind;\n\n  var root = Splide2.root;\n  var resolve = Components2.Direction.resolve;\n  var target;\n  var disabled;\n\n  function mount() {\n    init();\n    on(EVENT_UPDATED, destroy);\n    on(EVENT_UPDATED, init);\n    on(EVENT_MOVE, onMove);\n  }\n\n  function init() {\n    var keyboard = options.keyboard;\n\n    if (keyboard) {\n      target = keyboard === \"global\" ? window : root;\n      bind(target, KEYBOARD_EVENT, onKeydown);\n    }\n  }\n\n  function destroy() {\n    unbind(target, KEYBOARD_EVENT);\n  }\n\n  function disable(value) {\n    disabled = value;\n  }\n\n  function onMove() {\n    var _disabled = disabled;\n    disabled = true;\n    nextTick(function () {\n      disabled = _disabled;\n    });\n  }\n\n  function onKeydown(e) {\n    if (!disabled) {\n      var key = normalizeKey(e);\n\n      if (key === resolve(ARROW_LEFT)) {\n        Splide2.go(\"<\");\n      } else if (key === resolve(ARROW_RIGHT)) {\n        Splide2.go(\">\");\n      }\n    }\n  }\n\n  return {\n    mount: mount,\n    destroy: destroy,\n    disable: disable\n  };\n}\n\nvar SRC_DATA_ATTRIBUTE = DATA_ATTRIBUTE + \"-lazy\";\nvar SRCSET_DATA_ATTRIBUTE = SRC_DATA_ATTRIBUTE + \"-srcset\";\nvar IMAGE_SELECTOR = \"[\" + SRC_DATA_ATTRIBUTE + \"], [\" + SRCSET_DATA_ATTRIBUTE + \"]\";\n\nfunction LazyLoad(Splide2, Components2, options) {\n  var _EventInterface11 = EventInterface(Splide2),\n      on = _EventInterface11.on,\n      off = _EventInterface11.off,\n      bind = _EventInterface11.bind,\n      emit = _EventInterface11.emit;\n\n  var isSequential = options.lazyLoad === \"sequential\";\n  var events = [EVENT_MOVED, EVENT_SCROLLED];\n  var entries = [];\n\n  function mount() {\n    if (options.lazyLoad) {\n      init();\n      on(EVENT_REFRESH, init);\n    }\n  }\n\n  function init() {\n    empty(entries);\n    register();\n\n    if (isSequential) {\n      loadNext();\n    } else {\n      off(events);\n      on(events, check);\n      check();\n    }\n  }\n\n  function register() {\n    Components2.Slides.forEach(function (Slide) {\n      queryAll(Slide.slide, IMAGE_SELECTOR).forEach(function (img) {\n        var src = getAttribute(img, SRC_DATA_ATTRIBUTE);\n        var srcset = getAttribute(img, SRCSET_DATA_ATTRIBUTE);\n\n        if (src !== img.src || srcset !== img.srcset) {\n          var className = options.classes.spinner;\n          var parent = img.parentElement;\n          var spinner = child(parent, \".\" + className) || create(\"span\", className, parent);\n          entries.push([img, Slide, spinner]);\n          img.src || display(img, \"none\");\n        }\n      });\n    });\n  }\n\n  function check() {\n    entries = entries.filter(function (data) {\n      var distance = options.perPage * ((options.preloadPages || 1) + 1) - 1;\n      return data[1].isWithin(Splide2.index, distance) ? load(data) : true;\n    });\n    entries.length || off(events);\n  }\n\n  function load(data) {\n    var img = data[0];\n    addClass(data[1].slide, CLASS_LOADING);\n    bind(img, \"load error\", apply(onLoad, data));\n    setAttribute(img, \"src\", getAttribute(img, SRC_DATA_ATTRIBUTE));\n    setAttribute(img, \"srcset\", getAttribute(img, SRCSET_DATA_ATTRIBUTE));\n    removeAttribute(img, SRC_DATA_ATTRIBUTE);\n    removeAttribute(img, SRCSET_DATA_ATTRIBUTE);\n  }\n\n  function onLoad(data, e) {\n    var img = data[0],\n        Slide = data[1];\n    removeClass(Slide.slide, CLASS_LOADING);\n\n    if (e.type !== \"error\") {\n      remove(data[2]);\n      display(img, \"\");\n      emit(EVENT_LAZYLOAD_LOADED, img, Slide);\n      emit(EVENT_RESIZE);\n    }\n\n    isSequential && loadNext();\n  }\n\n  function loadNext() {\n    entries.length && load(entries.shift());\n  }\n\n  return {\n    mount: mount,\n    destroy: apply(empty, entries),\n    check: check\n  };\n}\n\nfunction Pagination(Splide2, Components2, options) {\n  var event = EventInterface(Splide2);\n  var on = event.on,\n      emit = event.emit,\n      bind = event.bind;\n  var Slides = Components2.Slides,\n      Elements = Components2.Elements,\n      Controller = Components2.Controller;\n  var hasFocus = Controller.hasFocus,\n      getIndex = Controller.getIndex,\n      go = Controller.go;\n  var resolve = Components2.Direction.resolve;\n  var placeholder = Elements.pagination;\n  var items = [];\n  var list;\n  var paginationClasses;\n\n  function mount() {\n    destroy();\n    on([EVENT_UPDATED, EVENT_REFRESH, EVENT_END_INDEX_CHANGED], mount);\n    var enabled = options.pagination;\n    placeholder && display(placeholder, enabled ? \"\" : \"none\");\n\n    if (enabled) {\n      on([EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED], update);\n      createPagination();\n      update();\n      emit(EVENT_PAGINATION_MOUNTED, {\n        list: list,\n        items: items\n      }, getAt(Splide2.index));\n    }\n  }\n\n  function destroy() {\n    if (list) {\n      remove(placeholder ? slice(list.children) : list);\n      removeClass(list, paginationClasses);\n      empty(items);\n      list = null;\n    }\n\n    event.destroy();\n  }\n\n  function createPagination() {\n    var length = Splide2.length;\n    var classes = options.classes,\n        i18n = options.i18n,\n        perPage = options.perPage;\n    var max = hasFocus() ? Controller.getEnd() + 1 : ceil(length / perPage);\n    list = placeholder || create(\"ul\", classes.pagination, Elements.track.parentElement);\n    addClass(list, paginationClasses = CLASS_PAGINATION + \"--\" + getDirection());\n    setAttribute(list, ROLE, \"tablist\");\n    setAttribute(list, ARIA_LABEL, i18n.select);\n    setAttribute(list, ARIA_ORIENTATION, getDirection() === TTB ? \"vertical\" : \"\");\n\n    for (var i = 0; i < max; i++) {\n      var li = create(\"li\", null, list);\n      var button = create(\"button\", {\n        class: classes.page,\n        type: \"button\"\n      }, li);\n      var controls = Slides.getIn(i).map(function (Slide) {\n        return Slide.slide.id;\n      });\n      var text = !hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n      bind(button, \"click\", apply(onClick, i));\n\n      if (options.paginationKeyboard) {\n        bind(button, \"keydown\", apply(onKeydown, i));\n      }\n\n      setAttribute(li, ROLE, \"presentation\");\n      setAttribute(button, ROLE, \"tab\");\n      setAttribute(button, ARIA_CONTROLS, controls.join(\" \"));\n      setAttribute(button, ARIA_LABEL, format(text, i + 1));\n      setAttribute(button, TAB_INDEX, -1);\n      items.push({\n        li: li,\n        button: button,\n        page: i\n      });\n    }\n  }\n\n  function onClick(page) {\n    go(\">\" + page, true);\n  }\n\n  function onKeydown(page, e) {\n    var length = items.length;\n    var key = normalizeKey(e);\n    var dir = getDirection();\n    var nextPage = -1;\n\n    if (key === resolve(ARROW_RIGHT, false, dir)) {\n      nextPage = ++page % length;\n    } else if (key === resolve(ARROW_LEFT, false, dir)) {\n      nextPage = (--page + length) % length;\n    } else if (key === \"Home\") {\n      nextPage = 0;\n    } else if (key === \"End\") {\n      nextPage = length - 1;\n    }\n\n    var item = items[nextPage];\n\n    if (item) {\n      focus(item.button);\n      go(\">\" + nextPage);\n      prevent(e, true);\n    }\n  }\n\n  function getDirection() {\n    return options.paginationDirection || options.direction;\n  }\n\n  function getAt(index) {\n    return items[Controller.toPage(index)];\n  }\n\n  function update() {\n    var prev = getAt(getIndex(true));\n    var curr = getAt(getIndex());\n\n    if (prev) {\n      var button = prev.button;\n      removeClass(button, CLASS_ACTIVE);\n      removeAttribute(button, ARIA_SELECTED);\n      setAttribute(button, TAB_INDEX, -1);\n    }\n\n    if (curr) {\n      var _button = curr.button;\n      addClass(_button, CLASS_ACTIVE);\n      setAttribute(_button, ARIA_SELECTED, true);\n      setAttribute(_button, TAB_INDEX, \"\");\n    }\n\n    emit(EVENT_PAGINATION_UPDATED, {\n      list: list,\n      items: items\n    }, prev, curr);\n  }\n\n  return {\n    items: items,\n    mount: mount,\n    destroy: destroy,\n    getAt: getAt,\n    update: update\n  };\n}\n\nvar TRIGGER_KEYS = [\" \", \"Enter\"];\n\nfunction Sync(Splide2, Components2, options) {\n  var isNavigation = options.isNavigation,\n      slideFocus = options.slideFocus;\n  var events = [];\n\n  function mount() {\n    Splide2.splides.forEach(function (target) {\n      if (!target.isParent) {\n        sync(Splide2, target.splide);\n        sync(target.splide, Splide2);\n      }\n    });\n\n    if (isNavigation) {\n      navigate();\n    }\n  }\n\n  function destroy() {\n    events.forEach(function (event) {\n      event.destroy();\n    });\n    empty(events);\n  }\n\n  function remount() {\n    destroy();\n    mount();\n  }\n\n  function sync(splide, target) {\n    var event = EventInterface(splide);\n    event.on(EVENT_MOVE, function (index, prev, dest) {\n      target.go(target.is(LOOP) ? dest : index);\n    });\n    events.push(event);\n  }\n\n  function navigate() {\n    var event = EventInterface(Splide2);\n    var on = event.on;\n    on(EVENT_CLICK, onClick);\n    on(EVENT_SLIDE_KEYDOWN, onKeydown);\n    on([EVENT_MOUNTED, EVENT_UPDATED], update);\n    events.push(event);\n    event.emit(EVENT_NAVIGATION_MOUNTED, Splide2.splides);\n  }\n\n  function update() {\n    setAttribute(Components2.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? \"vertical\" : \"\");\n  }\n\n  function onClick(Slide) {\n    Splide2.go(Slide.index);\n  }\n\n  function onKeydown(Slide, e) {\n    if (includes(TRIGGER_KEYS, normalizeKey(e))) {\n      onClick(Slide);\n      prevent(e);\n    }\n  }\n\n  return {\n    setup: apply(Components2.Media.set, {\n      slideFocus: isUndefined(slideFocus) ? isNavigation : slideFocus\n    }, true),\n    mount: mount,\n    destroy: destroy,\n    remount: remount\n  };\n}\n\nfunction Wheel(Splide2, Components2, options) {\n  var _EventInterface12 = EventInterface(Splide2),\n      bind = _EventInterface12.bind;\n\n  var lastTime = 0;\n\n  function mount() {\n    if (options.wheel) {\n      bind(Components2.Elements.track, \"wheel\", onWheel, SCROLL_LISTENER_OPTIONS);\n    }\n  }\n\n  function onWheel(e) {\n    if (e.cancelable) {\n      var deltaY = e.deltaY;\n      var backwards = deltaY < 0;\n      var timeStamp = timeOf(e);\n\n      var _min = options.wheelMinThreshold || 0;\n\n      var sleep = options.wheelSleep || 0;\n\n      if (abs(deltaY) > _min && timeStamp - lastTime > sleep) {\n        Splide2.go(backwards ? \"<\" : \">\");\n        lastTime = timeStamp;\n      }\n\n      shouldPrevent(backwards) && prevent(e);\n    }\n  }\n\n  function shouldPrevent(backwards) {\n    return !options.releaseWheel || Splide2.state.is(MOVING) || Components2.Controller.getAdjacent(backwards) !== -1;\n  }\n\n  return {\n    mount: mount\n  };\n}\n\nvar SR_REMOVAL_DELAY = 90;\n\nfunction Live(Splide2, Components2, options) {\n  var _EventInterface13 = EventInterface(Splide2),\n      on = _EventInterface13.on;\n\n  var track = Components2.Elements.track;\n  var enabled = options.live && !options.isNavigation;\n  var sr = create(\"span\", CLASS_SR);\n  var interval = RequestInterval(SR_REMOVAL_DELAY, apply(toggle, false));\n\n  function mount() {\n    if (enabled) {\n      disable(!Components2.Autoplay.isPaused());\n      setAttribute(track, ARIA_ATOMIC, true);\n      sr.textContent = \"\\u2026\";\n      on(EVENT_AUTOPLAY_PLAY, apply(disable, true));\n      on(EVENT_AUTOPLAY_PAUSE, apply(disable, false));\n      on([EVENT_MOVED, EVENT_SCROLLED], apply(toggle, true));\n    }\n  }\n\n  function toggle(active) {\n    setAttribute(track, ARIA_BUSY, active);\n\n    if (active) {\n      append(track, sr);\n      interval.start();\n    } else {\n      remove(sr);\n      interval.cancel();\n    }\n  }\n\n  function destroy() {\n    removeAttribute(track, [ARIA_LIVE, ARIA_ATOMIC, ARIA_BUSY]);\n    remove(sr);\n  }\n\n  function disable(disabled) {\n    if (enabled) {\n      setAttribute(track, ARIA_LIVE, disabled ? \"off\" : \"polite\");\n    }\n  }\n\n  return {\n    mount: mount,\n    disable: disable,\n    destroy: destroy\n  };\n}\n\nvar ComponentConstructors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Media: Media,\n  Direction: Direction,\n  Elements: Elements,\n  Slides: Slides,\n  Layout: Layout,\n  Clones: Clones,\n  Move: Move,\n  Controller: Controller,\n  Arrows: Arrows,\n  Autoplay: Autoplay,\n  Cover: Cover,\n  Scroll: Scroll,\n  Drag: Drag,\n  Keyboard: Keyboard,\n  LazyLoad: LazyLoad,\n  Pagination: Pagination,\n  Sync: Sync,\n  Wheel: Wheel,\n  Live: Live\n});\nvar I18N = {\n  prev: \"Previous slide\",\n  next: \"Next slide\",\n  first: \"Go to first slide\",\n  last: \"Go to last slide\",\n  slideX: \"Go to slide %s\",\n  pageX: \"Go to page %s\",\n  play: \"Start autoplay\",\n  pause: \"Pause autoplay\",\n  carousel: \"carousel\",\n  slide: \"slide\",\n  select: \"Select a slide to show\",\n  slideLabel: \"%s of %s\"\n};\nvar DEFAULTS = {\n  type: \"slide\",\n  role: \"region\",\n  speed: 400,\n  perPage: 1,\n  cloneStatus: true,\n  arrows: true,\n  pagination: true,\n  paginationKeyboard: true,\n  interval: 5e3,\n  pauseOnHover: true,\n  pauseOnFocus: true,\n  resetProgress: true,\n  easing: \"cubic-bezier(0.25, 1, 0.5, 1)\",\n  drag: true,\n  direction: \"ltr\",\n  trimSpace: true,\n  focusableNodes: \"a, button, textarea, input, select, iframe\",\n  live: true,\n  classes: CLASSES,\n  i18n: I18N,\n  reducedMotion: {\n    speed: 0,\n    rewindSpeed: 0,\n    autoplay: \"pause\"\n  }\n};\n\nfunction Fade(Splide2, Components2, options) {\n  var Slides = Components2.Slides;\n\n  function mount() {\n    EventInterface(Splide2).on([EVENT_MOUNTED, EVENT_REFRESH], init);\n  }\n\n  function init() {\n    Slides.forEach(function (Slide) {\n      Slide.style(\"transform\", \"translateX(-\" + 100 * Slide.index + \"%)\");\n    });\n  }\n\n  function start(index, done) {\n    Slides.style(\"transition\", \"opacity \" + options.speed + \"ms \" + options.easing);\n    nextTick(done);\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: noop\n  };\n}\n\nfunction Slide(Splide2, Components2, options) {\n  var Move = Components2.Move,\n      Controller = Components2.Controller,\n      Scroll = Components2.Scroll;\n  var list = Components2.Elements.list;\n  var transition = apply(style, list, \"transition\");\n  var endCallback;\n\n  function mount() {\n    EventInterface(Splide2).bind(list, \"transitionend\", function (e) {\n      if (e.target === list && endCallback) {\n        cancel();\n        endCallback();\n      }\n    });\n  }\n\n  function start(index, done) {\n    var destination = Move.toPosition(index, true);\n    var position = Move.getPosition();\n    var speed = getSpeed(index);\n\n    if (abs(destination - position) >= 1 && speed >= 1) {\n      if (options.useScroll) {\n        Scroll.scroll(destination, speed, false, done);\n      } else {\n        transition(\"transform \" + speed + \"ms \" + options.easing);\n        Move.translate(destination, true);\n        endCallback = done;\n      }\n    } else {\n      Move.jump(index);\n      done();\n    }\n  }\n\n  function cancel() {\n    transition(\"\");\n    Scroll.cancel();\n  }\n\n  function getSpeed(index) {\n    var rewindSpeed = options.rewindSpeed;\n\n    if (Splide2.is(SLIDE) && rewindSpeed) {\n      var prev = Controller.getIndex(true);\n      var end = Controller.getEnd();\n\n      if (prev === 0 && index >= end || prev >= end && index === 0) {\n        return rewindSpeed;\n      }\n    }\n\n    return options.speed;\n  }\n\n  return {\n    mount: mount,\n    start: start,\n    cancel: cancel\n  };\n}\n\nvar _Splide = /*#__PURE__*/function () {\n  function _Splide(target, options) {\n    this.event = EventInterface();\n    this.Components = {};\n    this.state = State(CREATED);\n    this.splides = [];\n    this._o = {};\n    this._E = {};\n    var root = isString(target) ? query(document, target) : target;\n    assert(root, root + \" is invalid.\");\n    this.root = root;\n    options = merge({\n      label: getAttribute(root, ARIA_LABEL) || \"\",\n      labelledby: getAttribute(root, ARIA_LABELLEDBY) || \"\"\n    }, DEFAULTS, _Splide.defaults, options || {});\n\n    try {\n      merge(options, JSON.parse(getAttribute(root, DATA_ATTRIBUTE)));\n    } catch (e) {\n      assert(false, \"Invalid JSON\");\n    }\n\n    this._o = Object.create(merge({}, options));\n  }\n\n  var _proto = _Splide.prototype;\n\n  _proto.mount = function mount(Extensions, Transition) {\n    var _this = this;\n\n    var state = this.state,\n        Components2 = this.Components;\n    assert(state.is([CREATED, DESTROYED]), \"Already mounted!\");\n    state.set(CREATED);\n    this._C = Components2;\n    this._T = Transition || this._T || (this.is(FADE) ? Fade : Slide);\n    this._E = Extensions || this._E;\n    var Constructors = assign({}, ComponentConstructors, this._E, {\n      Transition: this._T\n    });\n    forOwn(Constructors, function (Component, key) {\n      var component = Component(_this, Components2, _this._o);\n      Components2[key] = component;\n      component.setup && component.setup();\n    });\n    forOwn(Components2, function (component) {\n      component.mount && component.mount();\n    });\n    this.emit(EVENT_MOUNTED);\n    addClass(this.root, CLASS_INITIALIZED);\n    state.set(IDLE);\n    this.emit(EVENT_READY);\n    return this;\n  };\n\n  _proto.sync = function sync(splide) {\n    this.splides.push({\n      splide: splide\n    });\n    splide.splides.push({\n      splide: this,\n      isParent: true\n    });\n\n    if (this.state.is(IDLE)) {\n      this._C.Sync.remount();\n\n      splide.Components.Sync.remount();\n    }\n\n    return this;\n  };\n\n  _proto.go = function go(control) {\n    this._C.Controller.go(control);\n\n    return this;\n  };\n\n  _proto.on = function on(events, callback) {\n    this.event.on(events, callback);\n    return this;\n  };\n\n  _proto.off = function off(events) {\n    this.event.off(events);\n    return this;\n  };\n\n  _proto.emit = function emit(event) {\n    var _this$event;\n\n    (_this$event = this.event).emit.apply(_this$event, [event].concat(slice(arguments, 1)));\n\n    return this;\n  };\n\n  _proto.add = function add(slides, index) {\n    this._C.Slides.add(slides, index);\n\n    return this;\n  };\n\n  _proto.remove = function remove(matcher) {\n    this._C.Slides.remove(matcher);\n\n    return this;\n  };\n\n  _proto.is = function is(type) {\n    return this._o.type === type;\n  };\n\n  _proto.refresh = function refresh() {\n    this.emit(EVENT_REFRESH);\n    return this;\n  };\n\n  _proto.destroy = function destroy(completely) {\n    if (completely === void 0) {\n      completely = true;\n    }\n\n    var event = this.event,\n        state = this.state;\n\n    if (state.is(CREATED)) {\n      EventInterface(this).on(EVENT_READY, this.destroy.bind(this, completely));\n    } else {\n      forOwn(this._C, function (component) {\n        component.destroy && component.destroy(completely);\n      }, true);\n      event.emit(EVENT_DESTROY);\n      event.destroy();\n      completely && empty(this.splides);\n      state.set(DESTROYED);\n    }\n\n    return this;\n  };\n\n  _createClass(_Splide, [{\n    key: \"options\",\n    get: function get() {\n      return this._o;\n    },\n    set: function set(options) {\n      this._C.Media.set(options, true, true);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._C.Slides.getLength(true);\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._C.Controller.getIndex();\n    }\n  }]);\n\n  return _Splide;\n}();\n\nvar Splide = _Splide;\nSplide.defaults = {};\nSplide.STATES = STATES;\nvar CLASS_RENDERED = \"is-rendered\";\nvar RENDERER_DEFAULT_CONFIG = {\n  listTag: \"ul\",\n  slideTag: \"li\"\n};\n\nvar Style = /*#__PURE__*/function () {\n  function Style(id, options) {\n    this.styles = {};\n    this.id = id;\n    this.options = options;\n  }\n\n  var _proto2 = Style.prototype;\n\n  _proto2.rule = function rule(selector, prop, value, breakpoint) {\n    breakpoint = breakpoint || \"default\";\n    var selectors = this.styles[breakpoint] = this.styles[breakpoint] || {};\n    var styles = selectors[selector] = selectors[selector] || {};\n    styles[prop] = value;\n  };\n\n  _proto2.build = function build() {\n    var _this2 = this;\n\n    var css = \"\";\n\n    if (this.styles.default) {\n      css += this.buildSelectors(this.styles.default);\n    }\n\n    Object.keys(this.styles).sort(function (n, m) {\n      return _this2.options.mediaQuery === \"min\" ? +n - +m : +m - +n;\n    }).forEach(function (breakpoint) {\n      if (breakpoint !== \"default\") {\n        css += \"@media screen and (max-width: \" + breakpoint + \"px) {\";\n        css += _this2.buildSelectors(_this2.styles[breakpoint]);\n        css += \"}\";\n      }\n    });\n    return css;\n  };\n\n  _proto2.buildSelectors = function buildSelectors(selectors) {\n    var _this3 = this;\n\n    var css = \"\";\n    forOwn(selectors, function (styles, selector) {\n      selector = (\"#\" + _this3.id + \" \" + selector).trim();\n      css += selector + \" {\";\n      forOwn(styles, function (value, prop) {\n        if (value || value === 0) {\n          css += prop + \": \" + value + \";\";\n        }\n      });\n      css += \"}\";\n    });\n    return css;\n  };\n\n  return Style;\n}();\n\nvar SplideRenderer = /*#__PURE__*/function () {\n  function SplideRenderer(contents, options, config, defaults) {\n    this.slides = [];\n    this.options = {};\n    this.breakpoints = [];\n    merge(DEFAULTS, defaults || {});\n    merge(merge(this.options, DEFAULTS), options || {});\n    this.contents = contents;\n    this.config = assign({}, RENDERER_DEFAULT_CONFIG, config || {});\n    this.id = this.config.id || uniqueId(\"splide\");\n    this.Style = new Style(this.id, this.options);\n    this.Direction = Direction(null, null, this.options);\n    assert(this.contents.length, \"Provide at least 1 content.\");\n    this.init();\n  }\n\n  SplideRenderer.clean = function clean(splide) {\n    var _EventInterface14 = EventInterface(splide),\n        on = _EventInterface14.on;\n\n    var root = splide.root;\n    var clones = queryAll(root, \".\" + CLASS_CLONE);\n    on(EVENT_MOUNTED, function () {\n      remove(child(root, \"style\"));\n    });\n    remove(clones);\n  };\n\n  var _proto3 = SplideRenderer.prototype;\n\n  _proto3.init = function init() {\n    this.parseBreakpoints();\n    this.initSlides();\n    this.registerRootStyles();\n    this.registerTrackStyles();\n    this.registerSlideStyles();\n    this.registerListStyles();\n  };\n\n  _proto3.initSlides = function initSlides() {\n    var _this4 = this;\n\n    push(this.slides, this.contents.map(function (content, index) {\n      content = isString(content) ? {\n        html: content\n      } : content;\n      content.styles = content.styles || {};\n      content.attrs = content.attrs || {};\n\n      _this4.cover(content);\n\n      var classes = _this4.options.classes.slide + \" \" + (index === 0 ? CLASS_ACTIVE : \"\");\n      assign(content.attrs, {\n        class: (classes + \" \" + (content.attrs.class || \"\")).trim(),\n        style: _this4.buildStyles(content.styles)\n      });\n      return content;\n    }));\n\n    if (this.isLoop()) {\n      this.generateClones(this.slides);\n    }\n  };\n\n  _proto3.registerRootStyles = function registerRootStyles() {\n    var _this5 = this;\n\n    this.breakpoints.forEach(function (_ref2) {\n      var width = _ref2[0],\n          options = _ref2[1];\n\n      _this5.Style.rule(\" \", \"max-width\", unit(options.width), width);\n    });\n  };\n\n  _proto3.registerTrackStyles = function registerTrackStyles() {\n    var _this6 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_TRACK;\n    this.breakpoints.forEach(function (_ref3) {\n      var width = _ref3[0],\n          options = _ref3[1];\n      Style2.rule(selector, _this6.resolve(\"paddingLeft\"), _this6.cssPadding(options, false), width);\n      Style2.rule(selector, _this6.resolve(\"paddingRight\"), _this6.cssPadding(options, true), width);\n      Style2.rule(selector, \"height\", _this6.cssTrackHeight(options), width);\n    });\n  };\n\n  _proto3.registerListStyles = function registerListStyles() {\n    var _this7 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_LIST;\n    this.breakpoints.forEach(function (_ref4) {\n      var width = _ref4[0],\n          options = _ref4[1];\n      Style2.rule(selector, \"transform\", _this7.buildTranslate(options), width);\n\n      if (!_this7.cssSlideHeight(options)) {\n        Style2.rule(selector, \"aspect-ratio\", _this7.cssAspectRatio(options), width);\n      }\n    });\n  };\n\n  _proto3.registerSlideStyles = function registerSlideStyles() {\n    var _this8 = this;\n\n    var Style2 = this.Style;\n    var selector = \".\" + CLASS_SLIDE;\n    this.breakpoints.forEach(function (_ref5) {\n      var width = _ref5[0],\n          options = _ref5[1];\n      Style2.rule(selector, \"width\", _this8.cssSlideWidth(options), width);\n      Style2.rule(selector, \"height\", _this8.cssSlideHeight(options) || \"100%\", width);\n      Style2.rule(selector, _this8.resolve(\"marginRight\"), unit(options.gap) || \"0px\", width);\n      Style2.rule(selector + \" > img\", \"display\", options.cover ? \"none\" : \"inline\", width);\n    });\n  };\n\n  _proto3.buildTranslate = function buildTranslate(options) {\n    var _this$Direction = this.Direction,\n        resolve = _this$Direction.resolve,\n        orient = _this$Direction.orient;\n    var values = [];\n    values.push(this.cssOffsetClones(options));\n    values.push(this.cssOffsetGaps(options));\n\n    if (this.isCenter(options)) {\n      values.push(this.buildCssValue(orient(-50), \"%\"));\n      values.push.apply(values, this.cssOffsetCenter(options));\n    }\n\n    return values.filter(Boolean).map(function (value) {\n      return \"translate\" + resolve(\"X\") + \"(\" + value + \")\";\n    }).join(\" \");\n  };\n\n  _proto3.cssOffsetClones = function cssOffsetClones(options) {\n    var _this$Direction2 = this.Direction,\n        resolve = _this$Direction2.resolve,\n        orient = _this$Direction2.orient;\n    var cloneCount = this.getCloneCount();\n\n    if (this.isFixedWidth(options)) {\n      var _this$parseCssValue = this.parseCssValue(options[resolve(\"fixedWidth\")]),\n          value = _this$parseCssValue.value,\n          unit2 = _this$parseCssValue.unit;\n\n      return this.buildCssValue(orient(value) * cloneCount, unit2);\n    }\n\n    var percent = 100 * cloneCount / options.perPage;\n    return orient(percent) + \"%\";\n  };\n\n  _proto3.cssOffsetCenter = function cssOffsetCenter(options) {\n    var _this$Direction3 = this.Direction,\n        resolve = _this$Direction3.resolve,\n        orient = _this$Direction3.orient;\n\n    if (this.isFixedWidth(options)) {\n      var _this$parseCssValue2 = this.parseCssValue(options[resolve(\"fixedWidth\")]),\n          value = _this$parseCssValue2.value,\n          unit2 = _this$parseCssValue2.unit;\n\n      return [this.buildCssValue(orient(value / 2), unit2)];\n    }\n\n    var values = [];\n    var perPage = options.perPage,\n        gap = options.gap;\n    values.push(orient(50 / perPage) + \"%\");\n\n    if (gap) {\n      var _this$parseCssValue3 = this.parseCssValue(gap),\n          _value = _this$parseCssValue3.value,\n          _unit = _this$parseCssValue3.unit;\n\n      var gapOffset = (_value / perPage - _value) / 2;\n      values.push(this.buildCssValue(orient(gapOffset), _unit));\n    }\n\n    return values;\n  };\n\n  _proto3.cssOffsetGaps = function cssOffsetGaps(options) {\n    var cloneCount = this.getCloneCount();\n\n    if (cloneCount && options.gap) {\n      var orient = this.Direction.orient;\n\n      var _this$parseCssValue4 = this.parseCssValue(options.gap),\n          value = _this$parseCssValue4.value,\n          unit2 = _this$parseCssValue4.unit;\n\n      if (this.isFixedWidth(options)) {\n        return this.buildCssValue(orient(value * cloneCount), unit2);\n      }\n\n      var perPage = options.perPage;\n      var gaps = cloneCount / perPage;\n      return this.buildCssValue(orient(gaps * value), unit2);\n    }\n\n    return \"\";\n  };\n\n  _proto3.resolve = function resolve(prop) {\n    return camelToKebab(this.Direction.resolve(prop));\n  };\n\n  _proto3.cssPadding = function cssPadding(options, right) {\n    var padding = options.padding;\n    var prop = this.Direction.resolve(right ? \"right\" : \"left\", true);\n    return padding && unit(padding[prop] || (isObject(padding) ? 0 : padding)) || \"0px\";\n  };\n\n  _proto3.cssTrackHeight = function cssTrackHeight(options) {\n    var height = \"\";\n\n    if (this.isVertical()) {\n      height = this.cssHeight(options);\n      assert(height, '\"height\" is missing.');\n      height = \"calc(\" + height + \" - \" + this.cssPadding(options, false) + \" - \" + this.cssPadding(options, true) + \")\";\n    }\n\n    return height;\n  };\n\n  _proto3.cssHeight = function cssHeight(options) {\n    return unit(options.height);\n  };\n\n  _proto3.cssSlideWidth = function cssSlideWidth(options) {\n    return options.autoWidth ? \"\" : unit(options.fixedWidth) || (this.isVertical() ? \"\" : this.cssSlideSize(options));\n  };\n\n  _proto3.cssSlideHeight = function cssSlideHeight(options) {\n    return unit(options.fixedHeight) || (this.isVertical() ? options.autoHeight ? \"\" : this.cssSlideSize(options) : this.cssHeight(options));\n  };\n\n  _proto3.cssSlideSize = function cssSlideSize(options) {\n    var gap = unit(options.gap);\n    return \"calc((100%\" + (gap && \" + \" + gap) + \")/\" + (options.perPage || 1) + (gap && \" - \" + gap) + \")\";\n  };\n\n  _proto3.cssAspectRatio = function cssAspectRatio(options) {\n    var heightRatio = options.heightRatio;\n    return heightRatio ? \"\" + 1 / heightRatio : \"\";\n  };\n\n  _proto3.buildCssValue = function buildCssValue(value, unit2) {\n    return \"\" + value + unit2;\n  };\n\n  _proto3.parseCssValue = function parseCssValue(value) {\n    if (isString(value)) {\n      var number = parseFloat(value) || 0;\n      var unit2 = value.replace(/\\d*(\\.\\d*)?/, \"\") || \"px\";\n      return {\n        value: number,\n        unit: unit2\n      };\n    }\n\n    return {\n      value: value,\n      unit: \"px\"\n    };\n  };\n\n  _proto3.parseBreakpoints = function parseBreakpoints() {\n    var _this9 = this;\n\n    var breakpoints = this.options.breakpoints;\n    this.breakpoints.push([\"default\", this.options]);\n\n    if (breakpoints) {\n      forOwn(breakpoints, function (options, width) {\n        _this9.breakpoints.push([width, merge(merge({}, _this9.options), options)]);\n      });\n    }\n  };\n\n  _proto3.isFixedWidth = function isFixedWidth(options) {\n    return !!options[this.Direction.resolve(\"fixedWidth\")];\n  };\n\n  _proto3.isLoop = function isLoop() {\n    return this.options.type === LOOP;\n  };\n\n  _proto3.isCenter = function isCenter(options) {\n    if (options.focus === \"center\") {\n      if (this.isLoop()) {\n        return true;\n      }\n\n      if (this.options.type === SLIDE) {\n        return !this.options.trimSpace;\n      }\n    }\n\n    return false;\n  };\n\n  _proto3.isVertical = function isVertical() {\n    return this.options.direction === TTB;\n  };\n\n  _proto3.buildClasses = function buildClasses() {\n    var options = this.options;\n    return [CLASS_ROOT, CLASS_ROOT + \"--\" + options.type, CLASS_ROOT + \"--\" + options.direction, options.drag && CLASS_ROOT + \"--draggable\", options.isNavigation && CLASS_ROOT + \"--nav\", CLASS_ACTIVE, !this.config.hidden && CLASS_RENDERED].filter(Boolean).join(\" \");\n  };\n\n  _proto3.buildAttrs = function buildAttrs(attrs) {\n    var attr = \"\";\n    forOwn(attrs, function (value, key) {\n      attr += value ? \" \" + camelToKebab(key) + \"=\\\"\" + value + \"\\\"\" : \"\";\n    });\n    return attr.trim();\n  };\n\n  _proto3.buildStyles = function buildStyles(styles) {\n    var style = \"\";\n    forOwn(styles, function (value, key) {\n      style += \" \" + camelToKebab(key) + \":\" + value + \";\";\n    });\n    return style.trim();\n  };\n\n  _proto3.renderSlides = function renderSlides() {\n    var _this10 = this;\n\n    var tag = this.config.slideTag;\n    return this.slides.map(function (content) {\n      return \"<\" + tag + \" \" + _this10.buildAttrs(content.attrs) + \">\" + (content.html || \"\") + \"</\" + tag + \">\";\n    }).join(\"\");\n  };\n\n  _proto3.cover = function cover(content) {\n    var styles = content.styles,\n        _content$html = content.html,\n        html = _content$html === void 0 ? \"\" : _content$html;\n\n    if (this.options.cover && !this.options.lazyLoad) {\n      var src = html.match(/<img.*?src\\s*=\\s*(['\"])(.+?)\\1.*?>/);\n\n      if (src && src[2]) {\n        styles.background = \"center/cover no-repeat url('\" + src[2] + \"')\";\n      }\n    }\n  };\n\n  _proto3.generateClones = function generateClones(contents) {\n    var classes = this.options.classes;\n    var count = this.getCloneCount();\n    var slides = contents.slice();\n\n    while (slides.length < count) {\n      push(slides, slides);\n    }\n\n    push(slides.slice(-count).reverse(), slides.slice(0, count)).forEach(function (content, index) {\n      var attrs = assign({}, content.attrs, {\n        class: content.attrs.class + \" \" + classes.clone\n      });\n      var clone = assign({}, content, {\n        attrs: attrs\n      });\n      index < count ? contents.unshift(clone) : contents.push(clone);\n    });\n  };\n\n  _proto3.getCloneCount = function getCloneCount() {\n    if (this.isLoop()) {\n      var options = this.options;\n\n      if (options.clones) {\n        return options.clones;\n      }\n\n      var perPage = max.apply(void 0, this.breakpoints.map(function (_ref6) {\n        var options2 = _ref6[1];\n        return options2.perPage;\n      }));\n      return perPage * ((options.flickMaxPages || 1) + 1);\n    }\n\n    return 0;\n  };\n\n  _proto3.renderArrows = function renderArrows() {\n    var html = \"\";\n    html += \"<div class=\\\"\" + this.options.classes.arrows + \"\\\">\";\n    html += this.renderArrow(true);\n    html += this.renderArrow(false);\n    html += \"</div>\";\n    return html;\n  };\n\n  _proto3.renderArrow = function renderArrow(prev) {\n    var _this$options = this.options,\n        classes = _this$options.classes,\n        i18n = _this$options.i18n;\n    var attrs = {\n      class: classes.arrow + \" \" + (prev ? classes.prev : classes.next),\n      type: \"button\",\n      ariaLabel: prev ? i18n.prev : i18n.next\n    };\n    return \"<button \" + this.buildAttrs(attrs) + \"><svg xmlns=\\\"\" + XML_NAME_SPACE + \"\\\" viewBox=\\\"0 0 \" + SIZE + \" \" + SIZE + \"\\\" width=\\\"\" + SIZE + \"\\\" height=\\\"\" + SIZE + \"\\\"><path d=\\\"\" + (this.options.arrowPath || PATH) + \"\\\" /></svg></button>\";\n  };\n\n  _proto3.html = function html() {\n    var _this$config = this.config,\n        rootClass = _this$config.rootClass,\n        listTag = _this$config.listTag,\n        arrows = _this$config.arrows,\n        beforeTrack = _this$config.beforeTrack,\n        afterTrack = _this$config.afterTrack,\n        slider = _this$config.slider,\n        beforeSlider = _this$config.beforeSlider,\n        afterSlider = _this$config.afterSlider;\n    var html = \"\";\n    html += \"<div id=\\\"\" + this.id + \"\\\" class=\\\"\" + this.buildClasses() + \" \" + (rootClass || \"\") + \"\\\">\";\n    html += \"<style>\" + this.Style.build() + \"</style>\";\n\n    if (slider) {\n      html += beforeSlider || \"\";\n      html += \"<div class=\\\"splide__slider\\\">\";\n    }\n\n    html += beforeTrack || \"\";\n\n    if (arrows) {\n      html += this.renderArrows();\n    }\n\n    html += \"<div class=\\\"splide__track\\\">\";\n    html += \"<\" + listTag + \" class=\\\"splide__list\\\">\";\n    html += this.renderSlides();\n    html += \"</\" + listTag + \">\";\n    html += \"</div>\";\n    html += afterTrack || \"\";\n\n    if (slider) {\n      html += \"</div>\";\n      html += afterSlider || \"\";\n    }\n\n    html += \"</div>\";\n    return html;\n  };\n\n  return SplideRenderer;\n}();\n\nexport { CLASSES, CLASS_ACTIVE, CLASS_ARROW, CLASS_ARROWS, CLASS_ARROW_NEXT, CLASS_ARROW_PREV, CLASS_CLONE, CLASS_CONTAINER, CLASS_FOCUS_IN, CLASS_INITIALIZED, CLASS_LIST, CLASS_LOADING, CLASS_NEXT, CLASS_OVERFLOW, CLASS_PAGINATION, CLASS_PAGINATION_PAGE, CLASS_PREV, CLASS_PROGRESS, CLASS_PROGRESS_BAR, CLASS_ROOT, CLASS_SLIDE, CLASS_SPINNER, CLASS_SR, CLASS_TOGGLE, CLASS_TOGGLE_PAUSE, CLASS_TOGGLE_PLAY, CLASS_TRACK, CLASS_VISIBLE, DEFAULTS, EVENT_ACTIVE, EVENT_ARROWS_MOUNTED, EVENT_ARROWS_UPDATED, EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_AUTOPLAY_PLAYING, EVENT_CLICK, EVENT_DESTROY, EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_END_INDEX_CHANGED, EVENT_HIDDEN, EVENT_INACTIVE, EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_MOVE, EVENT_MOVED, EVENT_NAVIGATION_MOUNTED, EVENT_OVERFLOW, EVENT_PAGINATION_MOUNTED, EVENT_PAGINATION_UPDATED, EVENT_READY, EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_SCROLL, EVENT_SCROLLED, EVENT_SHIFTED, EVENT_SLIDE_KEYDOWN, EVENT_UPDATED, EVENT_VISIBLE, EventBinder, EventInterface, FADE, LOOP, LTR, RTL, RequestInterval, SLIDE, STATUS_CLASSES, Splide, SplideRenderer, State, TTB, Throttle, Splide as default };\n", "import { InputGroupBase } from '$mct/components';\nimport type { AppointmentSlot, Input, InputGroupOptions } from '$mct/types';\nimport { queryElement } from '$utils/dom';\nimport { DOM_CONFIG } from '$mct/config';\n\nconst mctAttr = DOM_CONFIG.attributes.component;\nconst attr = DOM_CONFIG.attributes.appointment;\n\ntype TimeOptions = {\n  onEnter: () => void;\n} & InputGroupOptions;\n\nexport class Times extends InputGroupBase {\n  private list: HTMLElement;\n  private template: HTMLElement;\n  private onEnter: () => void;\n\n  constructor(el: HTMLElement, options: TimeOptions) {\n    super(el, options);\n    this.onEnter = options.onEnter;\n\n    this.list = queryElement(`[${attr.components}=\"times-list\"]`, this.el) as HTMLElement;\n    const slot = queryElement(`[${mctAttr}=\"pill\"]`, this.list) as HTMLElement;\n    this.template = slot.cloneNode(true) as HTMLElement;\n    this.template.remove();\n  }\n\n  protected init(): void {\n    // Any additional initialization if needed\n  }\n\n  private generateTimeSlot(timeSlot: AppointmentSlot): HTMLElement {\n    const element = this.template.cloneNode(true) as HTMLElement;\n    const input = queryElement('input', element) as Input;\n    const name = input.name;\n    input.id = `${name}-${timeSlot.startTime}-${timeSlot.endTime}`;\n    input.value = `${timeSlot.startTime}-${timeSlot.endTime}`;\n    input.disabled = !timeSlot.enabled;\n\n    const label = queryElement('label', element) as HTMLLabelElement;\n    label.setAttribute('for', input.id);\n    label.textContent = `${timeSlot.startTime} - ${timeSlot.endTime}`;\n\n    this.inputs.push(input);\n    input.addEventListener('change', () => this.onChange());\n\n    // Add keyboard event listener for Enter key\n    input.addEventListener('keydown', (event: Event) => {\n      const ke = event as KeyboardEvent;\n      if (ke.key !== 'Enter') return;\n\n      this.onEnter();\n    });\n\n    return element;\n  }\n\n  public renderTimeSlots(timeSlots: AppointmentSlot[]): void {\n    this.list.innerHTML = '';\n    this.inputs = [];\n\n    const fragment = document.createDocumentFragment();\n\n    timeSlots.forEach((timeSlot) => {\n      const element = this.generateTimeSlot(timeSlot);\n      fragment.appendChild(element);\n    });\n\n    this.list.appendChild(fragment);\n    this.el.style.removeProperty('display');\n    this.onChange();\n  }\n}\n", "import { StatefulInputGroup, type StatefulInputGroupOptions } from '$mct/components';\n\nexport interface InputGroupOptions extends StatefulInputGroupOptions {}\n\nexport class InputGroup extends StatefulInputGroup {\n  constructor(options: InputGroupOptions) {\n    super(options);\n  }\n}\n", "export * from './CalculationManager';\nexport * from './persistence';\nexport * from './StateManager';\nexport * from './StorageManager';\n", "import type { StateManager } from './StateManager';\nimport {\n  type InputKey,\n  type Calculations,\n  type CalculationKey,\n  type CalculationValue,\n  ReadinessToBuyENUM,\n  CreditImpairedENUM,\n  OfferAcceptedENUM,\n  EndOfTermENUM,\n  RemoChangeENUM,\n  InputKeysENUM,\n  CalculationKeysENUM,\n} from '$mct/types';\nimport { getEnumValue } from '$mct/utils';\n\nexport class CalculationManager {\n  private stateManager: StateManager;\n  private calculationRules: Map<InputKey, (answers: Record<string, any>) => Partial<Calculations>>;\n\n  constructor(stateManager: StateManager) {\n    this.stateManager = stateManager;\n    this.calculationRules = new Map();\n    this.setupCalculationRules();\n    this.subscribeToStateChanges();\n  }\n\n  private setupCalculationRules(): void {\n    // Define calculation rules for specific input keys\n    this.calculationRules.set(InputKeysENUM.ReadinessToBuy, this.readinessToBuy);\n    this.calculationRules.set(InputKeysENUM.CreditImpaired, this.creditImpaired);\n    this.calculationRules.set(InputKeysENUM.EndOfTerm, this.endOfTerm);\n    this.calculationRules.set(InputKeysENUM.PropertyValue, this.propertyValue);\n    this.calculationRules.set(InputKeysENUM.DepositAmount, this.depositAmount);\n    this.calculationRules.set(InputKeysENUM.RemoChange, this.remoChange);\n  }\n\n  private subscribeToStateChanges(): void {\n    this.stateManager.subscribe((event) => {\n      if (event.changes.inputs) this.runCalculations(event.currentState.inputs);\n    });\n  }\n\n  private runCalculations(answers: Record<string, any>): void {\n    const newCalculations: Partial<Calculations> = {};\n\n    // Run calculations for each rule\n    this.calculationRules.forEach((calculationFn, answerKey) => {\n      if (answers[answerKey] !== undefined) {\n        const result = calculationFn(answers);\n        Object.assign(newCalculations, result);\n      }\n    });\n\n    // Update calculations in state - only include defined values\n    const definedCalculations: Partial<Calculations> = {};\n    Object.entries(newCalculations).forEach(([key, value]) => {\n      if (value !== undefined) {\n        (definedCalculations as any)[key] = value;\n      }\n    });\n\n    if (Object.keys(definedCalculations).length > 0) {\n      this.stateManager.setCalculations(definedCalculations);\n    }\n  }\n\n  private readinessToBuy = (answers: Record<string, any>): Partial<Calculations> => {\n    return { ...this.calculateIsProceedable(answers), ...this.calculateOfferAccepted(answers) };\n  };\n\n  private creditImpaired = (answers: Record<string, any>): Partial<Calculations> => {\n    return this.calculateIsProceedable(answers);\n  };\n\n  private endOfTerm = (answers: Record<string, any>): Partial<Calculations> => {\n    return this.calculateIsProceedable(answers);\n  };\n\n  private propertyValue = (answers: Record<string, any>): Partial<Calculations> => {\n    return this.calculateLoanToValue(answers);\n  };\n\n  private depositAmount = (answers: Record<string, any>): Partial<Calculations> => {\n    return this.calculateLoanToValue(answers);\n  };\n\n  private remoChange = (answers: Record<string, any>): Partial<Calculations> => {\n    return this.calculateIncludeRetention(answers);\n  };\n\n  /**\n   * @returns { isProceedable: boolean } not proceedable if:\n   * - ReadinessToBuy === Researching || Viewing\n   * - CreditImpaired === Yes\n   * - EndOfTerm === SixToTwelveMonths || TwelvePlusMonths\n   */\n  private calculateIsProceedable = (answers: Record<string, any>): Partial<Calculations> => {\n    const { ReadinessToBuy, CreditImpaired, EndOfTerm } = answers;\n\n    const ReadinessToBuyValue = getEnumValue(ReadinessToBuyENUM, ReadinessToBuy);\n    const CreditImpairedValue = getEnumValue(CreditImpairedENUM, CreditImpaired);\n    const EndOfTermValue = getEnumValue(EndOfTermENUM, EndOfTerm);\n\n    let isProceedable = true;\n\n    if (ReadinessToBuyValue === ReadinessToBuyENUM.Researching || ReadinessToBuyValue === ReadinessToBuyENUM.Viewing)\n      isProceedable = false;\n    if (CreditImpairedValue === CreditImpairedENUM.Yes) isProceedable = false;\n    if (EndOfTermValue === EndOfTermENUM.SixToTwelveMonths || EndOfTermValue === EndOfTermENUM.TwelvePlusMonths)\n      isProceedable = false;\n\n    return {\n      [CalculationKeysENUM.IsProceedable]: isProceedable,\n    };\n  };\n\n  private calculateOfferAccepted = (answers: Record<string, any>): Partial<Calculations> => {\n    const { ReadinessToBuy } = answers;\n    if (!ReadinessToBuy) return {};\n\n    const readinessToBuyValue = getEnumValue(ReadinessToBuyENUM, ReadinessToBuy);\n    const isOfferAccepted = readinessToBuyValue === ReadinessToBuyENUM.OfferAccepted;\n    const offerAccepted = isOfferAccepted ? OfferAcceptedENUM.Yes : OfferAcceptedENUM.No;\n\n    return { [CalculationKeysENUM.OfferAccepted]: offerAccepted };\n  };\n\n  private calculateLoanToValue = (answers: Record<string, any>): Partial<Calculations> => {\n    const { PropertyValue, DepositAmount } = answers;\n    if (!PropertyValue || !DepositAmount) return {};\n\n    const LTV = ((PropertyValue - DepositAmount) / PropertyValue) * 100;\n    return { LTV };\n  };\n\n  private calculateIncludeRetention = (answers: Record<string, any>): Partial<Calculations> => {\n    const { RemoChange } = answers;\n    if (!RemoChange) return {};\n\n    const remoChangeValue = getEnumValue(RemoChangeENUM, RemoChange);\n    const IncludeRetention = remoChangeValue === RemoChangeENUM.NoChange;\n    return { IncludeRetention };\n  };\n\n  // Public method to manually trigger calculations\n  public recalculate(): void {\n    const answers = this.stateManager.getAnswers();\n    this.runCalculations(answers);\n  }\n\n  // Public method to add new calculation rules\n  public addCalculationRule(\n    answerKey: InputKey,\n    calculationFn: (answers: Record<string, any>) => Partial<Calculations>\n  ): void {\n    this.calculationRules.set(answerKey, calculationFn);\n  }\n\n  // Public method to get available calculation keys\n  public getAvailableCalculationKeys(): (keyof Calculations)[] {\n    return [\n      CalculationKeysENUM.IsProceedable,\n      CalculationKeysENUM.OfferAccepted,\n      CalculationKeysENUM.LTV,\n      CalculationKeysENUM.IncludeRetention,\n      CalculationKeysENUM.RepaymentValue,\n      CalculationKeysENUM.InterestOnlyValue,\n    ];\n  }\n\n  // Public method to get calculation value with type safety\n  public getCalculation(key: CalculationKeysENUM): CalculationValue | undefined {\n    const calculations = this.stateManager.getCalculations();\n    return calculations[key];\n  }\n\n  // // Public method to get calculation value with type safety\n  // public getCalculation<K extends keyof Calculations>(key: K): Calculations[K] | undefined {\n  //   const calculations = this.stateManager.getCalculations();\n  //   return calculations[key];\n  // }\n\n  // Public method to check if a calculation exists\n  public hasCalculation(key: CalculationKeysENUM): boolean {\n    const calculations = this.stateManager.getCalculations();\n    return key in calculations;\n  }\n\n  // Public method to set specific calculations\n  public setCalculations(calculations: Partial<Calculations>): void {\n    this.stateManager.setCalculations(calculations);\n  }\n\n  // Public method to set a single calculation\n  public setCalculation(key: CalculationKeysENUM, value: CalculationValue): void {\n    this.stateManager.setCalculations({ [key]: value });\n  }\n\n  // // Public method to set a single calculation\n  // public setCalculation<K extends CalculationKey>(key: K, value: CalculationValue): void {\n  //   this.stateManager.setCalculations({ [key]: value });\n  // }\n}\n", "import type { StorageConfig, StorageManager } from './StorageManager';\nimport type { AppState } from '$mct/types';\n\n/**\n * Configuration for how different parts of the state should be persisted\n */\nexport const PERSISTENCE_CONFIG: Record<keyof AppState, StorageConfig> = {\n  lcid: {\n    type: 'cookie',\n    key: 'LCID',\n    serialize: false,\n  },\n  icid: {\n    type: 'cookie',\n    key: 'ICID',\n    serialize: false,\n  },\n  currentStageId: {\n    type: 'sessionStorage',\n    key: 'mct_current_stage',\n    serialize: false,\n  },\n  prefillAnswers: {\n    type: 'sessionStorage',\n    key: 'mct_prefill_answers',\n    serialize: true,\n  },\n  answers: {\n    type: 'localStorage',\n    key: 'mct_answers',\n    serialize: true,\n  },\n  calculations: {\n    type: 'localStorage',\n    key: 'mct_calculations',\n    serialize: true,\n  },\n  mortgageId: {\n    type: 'sessionStorage',\n    key: 'mct_mortgage_id',\n    serialize: false,\n  },\n};\n\n/**\n * State persistence manager that handles saving and loading state\n */\nexport class StatePersistenceManager {\n  private storage: StorageManager;\n\n  constructor(storage: StorageManager) {\n    this.storage = storage;\n  }\n\n  /**\n   * Save the entire state according to persistence configuration\n   */\n  saveState(state: AppState): void {\n    Object.entries(PERSISTENCE_CONFIG).forEach(([key, config]) => {\n      const value = state[key as keyof AppState];\n      if (value !== null && value !== undefined) {\n        this.storage.set(config, value);\n      }\n    });\n  }\n\n  /**\n   * Load the entire state according to persistence configuration\n   */\n  loadState(): Partial<AppState> {\n    const loadedState: Partial<AppState> = {};\n\n    Object.entries(PERSISTENCE_CONFIG).forEach(([key, config]) => {\n      const value = this.storage.get(config);\n      if (value !== null && value !== undefined) {\n        loadedState[key as keyof AppState] = value;\n      }\n    });\n\n    return loadedState;\n  }\n\n  /**\n   * Save a specific piece of state\n   */\n  saveStateItem<K extends keyof AppState>(key: K, value: AppState[K]): void {\n    const config = PERSISTENCE_CONFIG[key];\n    if (config && value !== null && value !== undefined) {\n      this.storage.set(config, value);\n    }\n  }\n\n  /**\n   * Load a specific piece of state\n   */\n  loadStateItem<K extends keyof AppState>(key: K): AppState[K] | null {\n    const config = PERSISTENCE_CONFIG[key];\n    if (config) {\n      return this.storage.get(config);\n    }\n    return null;\n  }\n\n  /**\n   * Clear all persisted state\n   */\n  clearAll(): void {\n    Object.values(PERSISTENCE_CONFIG).forEach((config) => {\n      this.storage.remove(config);\n    });\n  }\n\n  /**\n   * Clear a specific piece of persisted state\n   */\n  clearItem<K extends keyof AppState>(key: K): void {\n    const config = PERSISTENCE_CONFIG[key];\n    if (config) {\n      this.storage.remove(config);\n    }\n  }\n}\n", "import { StorageManager } from './StorageManager';\nimport { StatePersistenceManager } from './persistence';\nimport type {\n  AppState,\n  InputKey,\n  InputValue,\n  Inputs,\n  InputData,\n  InputPrefillConfig,\n  StageIDENUM,\n  Calculations,\n} from '$mct/types';\n\nexport interface StateChangeEvent {\n  previousState: AppState;\n  currentState: AppState;\n  changes: Partial<AppState>;\n}\n\ntype StateSubscriber = (event: StateChangeEvent) => void;\n\nconst defaultState: AppState = {\n  lcid: null,\n  icid: null,\n  currentStageId: null,\n  inputs: {},\n  inputPrefillConfig: {},\n  calculations: {} as Calculations,\n  mortgageId: null,\n};\n\nexport class StateManager {\n  private state: AppState;\n  private subscribers: Set<StateSubscriber>;\n  private storage: StorageManager;\n  private persistence: StatePersistenceManager;\n\n  constructor(initialState?: Partial<AppState>) {\n    this.state = { ...defaultState, ...initialState };\n    this.subscribers = new Set();\n    this.storage = new StorageManager();\n    this.persistence = new StatePersistenceManager(this.storage);\n  }\n\n  /**\n   * Subscribe to state changes\n   * @returns Unsubscribe function\n   */\n  subscribe(callback: StateSubscriber): () => void {\n    this.subscribers.add(callback);\n    return () => {\n      this.subscribers.delete(callback);\n    };\n  }\n\n  /**\n   * Update state with new values\n   */\n  setState(updates: Partial<AppState>): void {\n    const previousState = { ...this.state };\n    const changes = { ...updates };\n\n    // Apply updates\n    this.state = { ...this.state, ...updates };\n\n    // Notify subscribers\n    const event: StateChangeEvent = {\n      previousState,\n      currentState: this.state,\n      changes,\n    };\n\n    this.subscribers.forEach((callback) => {\n      try {\n        callback(event);\n      } catch (error) {\n        console.error('State subscriber error:', error);\n      }\n    });\n  }\n\n  /**\n   * Get current state (immutable copy)\n   */\n  getState(): AppState {\n    return { ...this.state };\n  }\n\n  /**\n   * Get a specific piece of state\n   */\n  get<K extends keyof AppState>(key: K): AppState[K] {\n    return this.state[key];\n  }\n\n  /**\n   * Set a specific piece of state\n   */\n  set<K extends keyof AppState>(key: K, value: AppState[K]): void {\n    this.setState({ [key]: value } as Partial<AppState>);\n  }\n\n  // Convenience methods for common state operations\n  setLCID(lcid: string | null): void {\n    console.log('setting lcid', lcid);\n    this.set('lcid', lcid);\n  }\n\n  getLCID(): string | null {\n    return this.get('lcid');\n  }\n\n  setICID(icid: string | null): void {\n    this.set('icid', icid);\n  }\n\n  getICID(): string | null {\n    return this.get('icid');\n  }\n\n  setCurrentStage(stageId: string | null): void {\n    this.set('currentStageId', stageId);\n  }\n\n  getCurrentStage(): StageIDENUM {\n    return this.get('currentStageId') as StageIDENUM;\n  }\n\n  setAnswer(answerData: InputData): void {\n    answerData = {\n      ...answerData,\n      source: answerData.source || 'user',\n    };\n\n    const answers = { ...this.state.inputs, [answerData.key]: answerData.value };\n    const prefillAnswers = { ...this.state.inputPrefillConfig, [answerData.name]: answerData.value };\n\n    this.setState({ inputs: answers, inputPrefillConfig: prefillAnswers });\n  }\n\n  getAnswer(key: InputKey): InputValue | undefined {\n    return this.state.inputs[key] as InputValue | undefined;\n  }\n\n  setAnswers(answerDataArray: InputData[]): void {\n    const answers = answerDataArray.reduce<Partial<Inputs>>((acc, answer) => {\n      acc[answer.key] = answer.value as any;\n      return acc;\n    }, {} as Inputs);\n\n    const prefillAnswers = answerDataArray.reduce((acc, answer) => {\n      acc[answer.name] = answer.value;\n      return acc;\n    }, {} as InputPrefillConfig);\n\n    this.setState({ inputs: answers, inputPrefillConfig: prefillAnswers });\n  }\n\n  getAnswers(): Inputs {\n    return { ...this.state.inputs };\n  }\n\n  setPrefillValues(prefillData: InputPrefillConfig): void {\n    this.set('inputPrefillConfig', { ...this.state.inputPrefillConfig, ...prefillData });\n  }\n\n  getPrefillAnswers(): InputPrefillConfig {\n    return { ...this.state.inputPrefillConfig };\n  }\n\n  setCalculations(calculations: Partial<Calculations>): void {\n    this.set('calculations', { ...this.state.calculations, ...calculations });\n  }\n\n  getCalculations(): Calculations {\n    return { ...this.state.calculations };\n  }\n\n  // clearAnswer(key: AnswerKey): void {\n  //   const answers = { ...this.state.answers };\n  //   delete answers[key];\n  //   this.set('answers', answers);\n  // }\n\n  // clearAnswers(): void {\n  //   this.set('answers', {});\n  // }\n\n  /**\n   * Reset state to default values\n   */\n  reset(): void {\n    this.setState(defaultState);\n  }\n\n  /**\n   * Get storage manager for persistence operations\n   */\n  getStorage(): StorageManager {\n    return this.storage;\n  }\n\n  /**\n   * Load state from persistence\n   */\n  loadFromPersistence(): void {\n    const persistedState = this.persistence.loadState();\n    if (Object.keys(persistedState).length > 0) {\n      this.setState(persistedState);\n    }\n  }\n\n  /**\n   * Save current state to persistence\n   */\n  saveToPersistence(): void {\n    this.persistence.saveState(this.state);\n  }\n\n  /**\n   * Clear all persisted state\n   */\n  clearPersistence(): void {\n    this.persistence.clearAll();\n  }\n\n  /**\n   * Auto-save state changes to persistence\n   */\n  enableAutoPersistence(): void {\n    this.subscribe(() => {\n      this.saveToPersistence();\n    });\n  }\n}\n", "import { getFromCookie, setToCookie } from '$utils/storage';\n\nexport type StorageType = 'localStorage' | 'sessionStorage' | 'cookie';\n\nexport interface StorageConfig {\n  type: StorageType;\n  key: string;\n  expires?: string; // For cookies: '1d', '7d', etc.\n  secure?: boolean; // For cookies\n  serialize: boolean; // true = JSON.stringify/parse, false = store as string\n}\n\n/**\n * @todo:\n *\n * - Need to update so that cookie items aren't stringified\n * - Also need to make sure they are not then parsed\n * - Do we add this to the config?\n */\n\nexport class StorageManager {\n  /**\n   * Store data with specified configuration\n   */\n  set(config: StorageConfig, data: any): void {\n    try {\n      // Determine if we should serialize the data\n      const shouldSerialize = config.serialize === true;\n      const valueToStore = shouldSerialize ? JSON.stringify(data) : String(data);\n\n      switch (config.type) {\n        case 'localStorage':\n          localStorage.setItem(config.key, valueToStore);\n          break;\n        case 'sessionStorage':\n          sessionStorage.setItem(config.key, valueToStore);\n          break;\n        case 'cookie':\n          setToCookie(config.key, valueToStore);\n          break;\n      }\n    } catch (error) {\n      console.error(`Failed to store data in ${config.type}:`, error);\n    }\n  }\n\n  /**\n   * Retrieve data with specified configuration\n   */\n  get<T = any>(config: StorageConfig): T | null {\n    try {\n      let data: string | null = null;\n\n      switch (config.type) {\n        case 'localStorage':\n          data = localStorage.getItem(config.key);\n          break;\n        case 'sessionStorage':\n          data = sessionStorage.getItem(config.key);\n          break;\n        case 'cookie':\n          data = getFromCookie(config.key);\n          break;\n      }\n\n      if (!data) return null;\n\n      // Determine if we should deserialize the data\n      const shouldDeserialize = config.serialize === true;\n\n      if (shouldDeserialize) return JSON.parse(data) as T;\n      return data as T;\n    } catch (error) {\n      console.error(`Failed to retrieve data from ${config.type}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove data with specified configuration\n   */\n  remove(config: StorageConfig): void {\n    try {\n      switch (config.type) {\n        case 'localStorage':\n          localStorage.removeItem(config.key);\n          break;\n        case 'sessionStorage':\n          sessionStorage.removeItem(config.key);\n          break;\n        case 'cookie':\n          // For cookies, we set an expired date to remove them\n          document.cookie = `${config.key}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n          break;\n      }\n    } catch (error) {\n      console.error(`Failed to remove data from ${config.type}:`, error);\n    }\n  }\n\n  /**\n   * Check if data exists with specified configuration\n   */\n  has(config: StorageConfig): boolean {\n    try {\n      switch (config.type) {\n        case 'localStorage':\n          return localStorage.getItem(config.key) !== null;\n        case 'sessionStorage':\n          return sessionStorage.getItem(config.key) !== null;\n        case 'cookie':\n          return getFromCookie(config.key) !== null;\n        default:\n          return false;\n      }\n    } catch (error) {\n      console.error(`Failed to check data existence in ${config.type}:`, error);\n      return false;\n    }\n  }\n\n  // /**\n  //  * Clear all data for a specific storage type\n  //  */\n  // clear(type: StorageType): void {\n  //   try {\n  //     switch (type) {\n  //       case 'localStorage':\n  //         localStorage.clear();\n  //         break;\n  //       case 'sessionStorage':\n  //         sessionStorage.clear();\n  //         break;\n  //       case 'cookie':\n  //         // Clear all cookies for this domain\n  //         const cookies = document.cookie.split(';');\n  //         cookies.forEach((cookie) => {\n  //           const eqPos = cookie.indexOf('=');\n  //           const name = eqPos > -1 ? cookie.substr(0, eqPos).trim() : cookie.trim();\n  //           document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n  //         });\n  //         break;\n  //     }\n  //   } catch (error) {\n  //     console.error(`Failed to clear ${type}:`, error);\n  //   }\n  // }\n}\n"],
  "mappings": "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",
  "names": ["EndOfTermENUM", "RemoChangeENUM", "FirstTimeBuyerENUM", "RepaymentTypeENUM", "ResiBtlENUM", "OfferAcceptedENUM", "ReadinessToBuyENUM", "PurchRemoENUM", "CreditImpairedENUM", "SchemePeriodsENUM", "SchemeTypesENUM", "SapValueENUM", "BuyerTypeENUM", "CalculationKeysENUM", "init_api", "init_dom", "init_events", "init_config", "init_api", "init_dom", "init_events", "init_config", "query", "elements", "query", "index", "attr", "components", "component", "min", "max", "child", "input", "callback", "fill", "min", "max", "formatted", "attr", "API_ENDPOINT", "input", "index", "clone", "attr", "components", "attr", "formatDate", "input", "max", "min", "color", "noop", "uid", "id", "isNullOrUndef", "value", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toPercentage", "dimension", "endsWith", "parseFloat", "toDimension", "callback", "fn", "args", "thisArg", "apply", "each", "loopable", "reverse", "i", "len", "keys", "length", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNumber", "n", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "argsToUse", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "_parsed", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "_limitValue", "Math", "_lookupByKey", "lo", "getPixelForValue", "hi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "options", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "applyScaleDefaults", "display", "offset", "reverse", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "isNullOrUndef", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "point", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "getValue", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "_parseObjectDataRadialScale", "_parsing", "parsed", "r", "parse", "EPSILON", "getPoint", "skip", "getValueAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "fa", "fb", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "monotoneCompute", "valueAxis", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "slopeDelta", "sign", "capControlPoint", "pt", "capBezierPoints", "inArea", "inAreaPrev", "inAreaNext", "_updateBezierControlPoints", "controlPoints", "spanGaps", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "document", "_getParentNode", "domNode", "parentNode", "host", "parseMaxStyle", "styleValue", "parentProperty", "valueInPixels", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "suffix", "result", "pos", "parseFloat", "useOffsetPos", "shadowRoot", "getCanvasPosition", "e", "touches", "source", "offsetX", "offsetY", "box", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "borderBox", "boxSizing", "paddings", "borders", "getContainerSize", "maxHeight", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "maintainHeight", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "_pointInLine", "p1", "p2", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "getRightToLeftAdapter", "rectX", "setWidth", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "getSegment", "segment", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "_boundSegments", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "doSplitByStyles", "chartContext", "_chart", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "l", "st", "dir", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "replacer", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "isFinite", "sign", "convertObjectDataToArray", "data", "adata", "Array", "isStacked", "meta", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "vScale", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iScale", "iAxis", "axis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "datasetElementType", "dataElementType", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "grouped", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "iAxisKey", "vAxisKey", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "skipNull", "val", "isNaN", "indexOf", "_getStackCount", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "BubbleController", "radius", "points", "point", "iPixel", "vPixel", "skip", "getRatioAndOffset", "rotation", "circumference", "cutout", "ratioX", "ratioY", "offsetX", "offsetY", "TAU", "startAngle", "endAngle", "startX", "cos", "startY", "sin", "endX", "endY", "calcMax", "angle", "_angleBetween", "calcMin", "maxX", "maxY", "HALF_PI", "minX", "PI", "minY", "DoughnutController", "animateRotate", "animateScale", "spacing", "descriptors", "_scriptable", "_indexable", "startsWith", "aspectRatio", "plugins", "legend", "generateLabels", "pointStyle", "map", "style", "text", "fillStyle", "backgroundColor", "strokeStyle", "borderColor", "fontColor", "lineWidth", "borderWidth", "onClick", "e", "legendItem", "toggleDataVisibility", "innerRadius", "outerRadius", "getter", "_getRotation", "toRadians", "_getCircumference", "_getRotationExtents", "isDatasetVisible", "arcs", "getMaxBorderWidth", "getMaxOffset", "maxSize", "toPercentage", "chartWeight", "_getRingWeight", "maxWidth", "maxHeight", "maxRadius", "toDimension", "radiusLength", "_getVisibleDatasetWeightTotal", "total", "calculateTotal", "_getRingWeightOffset", "_circumference", "calculateCircumference", "animationOpts", "centerX", "centerY", "arc", "metaData", "formatNumber", "locale", "borderAlign", "hoverBorderWidth", "hoverOffset", "ringWeightOffset", "weight", "LineController", "showLine", "spanGaps", "line", "_dataset", "animationsDisabled", "_getStartAndCountOfVisiblePoints", "_scaleRangesChanged", "_datasetIndex", "_decimated", "segment", "animated", "maxGapLength", "isNumber", "directUpdate", "pointsCount", "prevParsed", "nullData", "border", "firstPoint", "lastPoint", "updateControlPoints", "PolarAreaController", "angleLines", "display", "circular", "pointLabels", "_parseObjectDataRadialScale", "bind", "_updateRadius", "minSize", "cutoutPercentage", "getVisibleDatasetCount", "xCenter", "yCenter", "datasetStartAngle", "getIndexAngle", "defaultAngle", "countVisibleElements", "_computeAngle", "getDistanceFromCenterForValue", "PieController", "RadarController", "_fullLoop", "pointPosition", "getPointPositionForValue", "ScatterController", "interaction", "registry", "getElement", "abstract", "Error", "DateAdapterBase", "override", "members", "prototype", "init", "formats", "format", "diff", "startOf", "endOf", "_date", "binarySearch", "metaset", "intersect", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "el", "getRange", "lo", "hi", "evaluateInteractionItems", "position", "handler", "getSortedVisibleDatasetMetas", "j", "getDistanceMetricForAxis", "useX", "useY", "pt1", "pt2", "deltaX", "deltaY", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "isPointInArea", "evaluationFunc", "_isPointInArea", "inRange", "getNearestRadialItems", "getProps", "getAngleFromPoint", "getNearestCartesianItems", "distanceMetric", "minDistance", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "modes", "getRelativePosition", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "v0", "wrapBoxes", "boxes", "layoutBoxes", "stackWeight", "buildStacks", "layouts", "wrap", "includes", "_stack", "placed", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "availableWidth", "availableHeight", "buildLayoutBoxes", "centerHorizontal", "centerVertical", "leftAndTop", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "setBoxDims", "placeBoxes", "userPadding", "padding", "addBox", "_layers", "z", "removeBox", "layoutItem", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "BasePlatform", "acquireContext", "canvas", "releaseContext", "addEventListener", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "isAttached", "updateConfig", "BasicPlatform", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "renderHeight", "getAttribute", "renderWidth", "boxSizing", "displayWidth", "readUsedSize", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "oldDevicePixelRatio", "onWindowResize", "dpr", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "unlistenDevicePixelRatioChanges", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "DomPlatform", "removeAttribute", "setAttribute", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "defaultRoutes", "tooltipPosition", "hasValue", "final", "ret", "autoSkip", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "newTicks", "skipMajors", "calculateSpacing", "avgMajorSpacing", "round", "tickLength", "_tickSize", "maxScale", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "result", "ceil", "majorStart", "majorEnd", "len", "reverseAlign", "align", "offsetFromEdge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "epsilon", "lineValue", "garbageCollect", "caches", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "lines", "lineHeight", "createScaleContext", "createTickContext", "titleAlign", "_toLeftRightCenter", "titleArgs", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "Scale", "_margins", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_dataLimitsCached", "setContext", "suggestedMin", "suggestedMax", "finiteOrDefault", "metas", "getTicks", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "margins", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "_alignToPixels", "alignToPixels", "_callHooks", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "title", "toDegrees", "asin", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "pixel", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineColor", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "save", "fillRect", "restore", "findIndex", "drawGrid", "drawLine", "p1", "p2", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "unregister", "itemDefaults", "merge", "routeDefaults", "describe", "routes", "property", "propertyParts", "split", "sourceName", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "_typedRegistries", "_each", "addControllers", "addPlugins", "addScales", "getController", "_get", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasetOptions", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "error", "_proxy", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "generate", "addIfFound", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "chartOptionScopes", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "c", "moveNumericKeys", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "getSizeForArea", "field", "getDatasetArea", "Chart", "version", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_doResize", "debounce", "resizeDelay", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "_destroyDatasetMeta", "slice", "_removeUnreferencedMetasets", "buildOrUpdateControllers", "newControllers", "order", "visible", "ControllerClass", "_resetElements", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "layers", "_drawDatasets", "_drawDataset", "useClip", "getElementsAtEventForMode", "Interaction", "setDatasetVisibility", "_updateVisibility", "hide", "show", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "_add", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "clipArc", "pixelMargin", "angleMargin", "closePath", "toRadiusCorners", "_readValueToProps", "parseBorderRadius", "angleDelta", "o", "borderRadius", "halfThickness", "innerLimit", "computeOuterLimit", "outerArcLimit", "outerStart", "outerEnd", "innerStart", "innerEnd", "rThetaToXY", "theta", "pathArc", "innerR", "spacingOffset", "alpha", "noSpacingInnerRadius", "noSpacingOuterRadius", "avNogSpacingRadius", "adjustedAngle", "beta", "angleOffset", "outerStartAdjustedRadius", "outerEndAdjustedRadius", "outerStartAdjustedAngle", "outerEndAdjustedAngle", "innerStartAdjustedRadius", "innerEndAdjustedRadius", "innerStartAdjustedAngle", "innerEndAdjustedAngle", "outerMidAdjustedAngle", "pCenter", "p4", "innerMidAdjustedAngle", "p8", "outerStartX", "outerStartY", "outerEndX", "outerEndY", "drawArc", "fullCircles", "borderJoinStyle", "inner", "lineJoin", "ArcElement", "chartX", "chartY", "rAdjust", "betweenAngles", "withinRadius", "_isBetween", "halfAngle", "halfRadius", "translate", "fix", "radiusOffset", "setStyle", "lineCap", "borderCapStyle", "previous", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "paramsStart", "paramsEnd", "segmentStart", "segmentEnd", "outside", "pathSegment", "lineMethod", "fastPathSegment", "avgX", "countX", "prevX", "lastY", "pointIndex", "drawX", "truncX", "_getSegmentMethod", "useFastPath", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "strokePathDirect", "segments", "segmentMethod", "usePath2D", "LineElement", "capBezierPoints", "_points", "_segments", "_pointsUpdated", "_updateBezierControlPoints", "_computeSegments", "interpolate", "_boundSegments", "_interpolate", "interpolated", "hitRadius", "PointElement", "hoverRadius", "mouseX", "mouseY", "inXRange", "inYRange", "drawPoint", "getBarBounds", "bar", "half", "skipOrLimit", "parseBorderWidth", "maxW", "maxH", "toTRBL", "toTRBLCorners", "maxR", "enableBorder", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "outer", "skipX", "skipY", "skipBoth", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "BarElement", "addRectPath", "addRoundedRectPath", "BORDER_COLORS", "BACKGROUND_COLORS", "replace", "getBorderColor", "getBackgroundColor", "colorizeDefaultDataset", "colorizeDoughnutDataset", "colorizePolarAreaDataset", "getColorizer", "containsColorsDefinitions", "k", "containsColorsDefinition", "forceOverride", "_args", "chartOptions", "colorizer", "lttbDecimation", "samples", "decimated", "bucketWidth", "sampledIndex", "endIndex", "maxAreaPoint", "maxArea", "nextA", "avgY", "avgRangeStart", "avgRangeEnd", "avgRangeLength", "rangeOffs", "rangeTo", "pointAx", "pointAy", "minMaxDecimation", "minIndex", "maxIndex", "startIndex", "xMin", "xMax", "dx", "lastIndex", "intermediateIndex1", "intermediateIndex2", "cleanDecimatedDataset", "defineProperty", "configurable", "enumerable", "writable", "cleanDecimatedData", "getStartAndCountOfVisiblePointsSimplified", "pointCount", "algorithm", "beforeElementsUpdate", "xAxis", "threshold", "tpoints", "_findSegmentEnd", "_getBounds", "targetSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "_normalizeAngle", "_pointsFromSegments", "boundary", "linePoints", "_createBoundaryLine", "_shouldApplyFill", "_resolveTarget", "sources", "propagate", "visited", "_decodeFill", "parseFillOption", "parseFloat", "decodeTargetIndex", "firstCh", "_getTargetPixel", "_getTargetValue", "fillOption", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "addPointsBelow", "below", "unshift", "sourcePoint", "postponed", "findPoint", "pointValue", "firstValue", "lastValue", "simpleArc", "_getTarget", "getLineByIndex", "computeBoundary", "computeCircularBoundary", "computeLinearBoundary", "_drawfill", "lineOpts", "above", "doFill", "clipVertical", "clipY", "lineLoop", "src", "notShape", "clipBounds", "interpolatedLineTo", "targetLoop", "interpolatedPoint", "afterDatasetsUpdate", "$filler", "beforeDraw", "drawTime", "beforeDatasetsDraw", "beforeDatasetDraw", "getBoxSize", "labelOpts", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "Legend", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "buildLabels", "labelFont", "_computeTitleHeight", "_fitRows", "_fitCols", "hitboxes", "totalHeight", "row", "itemWidth", "measureText", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "rtl", "rtlHelper", "getRtlAdapter", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawLegendBox", "lineDash", "drawOptions", "SQRT2", "xPlus", "drawPointLegend", "yBoxTop", "xBoxLeft", "fillText", "strikethrough", "overrideTextDirection", "textDirection", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleFont", "titlePadding", "topPaddingPlusHalfFontSize", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "isListened", "hoveredItem", "sameItem", "onLeave", "calculateItemWidth", "calculateItemHeight", "legendItemText", "_element", "afterEvent", "ci", "useBorderRadius", "Title", "_padding", "textSize", "_drawArgs", "fontOpts", "createTitle", "titleBlock", "WeakMap", "positioners", "average", "xSet", "xAverage", "eventPosition", "nearestElement", "distanceBetweenPoints", "tp", "pushOrConcat", "toPush", "apply", "splitNewlines", "str", "String", "createTooltipItem", "formattedValue", "getTooltipSize", "tooltip", "body", "footer", "bodyFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "combinedBodyLength", "bodyItem", "before", "after", "beforeBody", "afterBody", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "getAlignedX", "getBeforeAfterBodyLines", "createTooltipContext", "tooltipItems", "overrideCallbacks", "defaultCallbacks", "beforeTitle", "noop", "labelCount", "afterTitle", "beforeLabel", "tooltipItem", "labelColor", "labelTextColor", "bodyColor", "labelPointStyle", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "Tooltip", "opacity", "_eventPosition", "_size", "_cachedAnimations", "_tooltipItems", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "itemSort", "positionAndSize", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "x3", "y3", "ptX", "ptY", "pt", "titleColor", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "multiKeyBackground", "outerX", "innerX", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "drawFooter", "footerAlign", "footerColor", "tooltipSize", "quadraticCurveTo", "_updateAnimationTarget", "animX", "animY", "_willRender", "hasTooltipContent", "globalAlpha", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "afterInit", "afterDraw", "_fallback", "addIfString", "addedLabels", "findOrAddLabel", "lastIndexOf", "_getLabelForValue", "CategoryScale", "_startValue", "_valueRange", "_addedLabels", "added", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "precision", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "niceNum", "niceMin", "niceMax", "numSpaces", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "relativeLabelSize", "tickValue", "rad", "LinearScaleBase", "_endValue", "handleTickRangeOptions", "setMin", "setMax", "minSign", "maxSign", "getTickLimit", "stepSize", "computeTickLimit", "numericGeneratorOptions", "_setMinAndMaxByKey", "LinearScale", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "steps", "rangeExp", "rangeStep", "startExp", "minExp", "exp", "significand", "lastTick", "LogarithmicScale", "logarithmic", "_zero", "getTickBackdropHeight", "measureLabelSize", "_longestText", "determineLimits", "fitWithPointLabels", "limits", "valueCount", "_pointLabels", "pointLabelOpts", "additionalAngle", "centerPointLabels", "getPointLabelContext", "getPointPosition", "drawingArea", "plFont", "hLimits", "vLimits", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "yForAngle", "getTextAlignForAngle", "leftForTextAlign", "isNotOverlapped", "apexesInArea", "drawPointLabelBox", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "drawPointLabels", "pathRadiusLine", "drawRadiusLine", "gridLineOpts", "createPointLabelContext", "RadialLinearScale", "animate", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "scalingFactor", "getValueForDistanceFromCenter", "scaledDistance", "pointLabel", "distanceFromCenter", "getBasePosition", "getPointLabelPosition", "rotate", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "sorter", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "determineUnitForAutoTicks", "minUnit", "capacity", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "determineMajorUnit", "addTick", "time", "timestamps", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "ticksFromTimestamps", "TimeScale", "adapters", "displayFormats", "_unit", "_majorUnit", "_offsets", "_normalized", "normalized", "_applyBounds", "_getLabelBounds", "getLabelTimestamps", "timeOpts", "_generate", "_filterBetween", "_getLabelCapacity", "initOffsets", "offsetAfterAutoskip", "getDecimalForValue", "minor", "weekday", "hasWeekday", "getDataTimestamps", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "normalize", "table", "prevSource", "nextSource", "prevTarget", "nextTarget", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "registerables", "attr", "output", "clone", "attr", "API_ENDPOINT", "attr", "components", "details", "rotate", "attr", "init_config", "init_config", "init_config", "resolve", "init_config", "init_config", "init_config", "init_config", "init_config", "init_config", "init_config", "init_config", "query", "style", "index", "callback", "init_config", "attr", "classes", "attr", "classes", "index", "init_config", "init_config", "elements", "profile", "attr", "index", "init_config", "init_config", "attr", "attr", "product", "index", "init_config", "init_config", "noop", "isObject", "isArray", "isFunction", "classes", "children", "child", "merge", "attr", "sign", "callback", "isArray", "set", "query", "merge", "resolve", "index", "from", "isFunction", "elements", "Controller", "max", "style", "callback", "Slides", "isObject", "Slide", "Elements", "clone", "set", "focus", "Move", "parse", "closest", "classes", "sign", "to", "Scroll", "noop", "_Splide", "merge", "remove", "style", "attr", "index", "child", "init_config", "attr", "attr", "ConfigManager", "BuyerTypeENUM", "init_config", "stateManager", "callback", "attr", "elements"]
}
